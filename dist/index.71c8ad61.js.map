{"mappings":"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","sources":["../es-data-parser/dist/es-objects/ParsedData.js","../es-data-parser/dist/structures.js","../es-data-parser/dist/lexer.js","../es-data-parser/dist/es-objects/Sprite.js","../es-data-parser/dist/es-objects/SystemObject.js","../es-data-parser/dist/es-objects/TravelDistance.js","../es-data-parser/dist/es-objects/RamscoopModifier.js","../es-data-parser/dist/es-objects/System.js","../es-data-parser/dist/es-objects/Galaxy.js","../es-data-parser/dist/es-objects/Color.js","../es-data-parser/dist/es-objects/Government.js","../es-data-parser/dist/es-objects/Planet.js","../es-data-parser/dist/es-objects/Wormhole.js","../es-data-parser/dist/es-objects/Word.js","../es-data-parser/dist/es-objects/Phrase.js","../es-data-parser/dist/es-objects/Star.js","../es-data-parser/dist/es-objects/MinablePayload.js","../es-data-parser/dist/es-objects/Minable.js","../es-data-parser/dist/parser.js","../es-data-parser/dist/utils.js","../es-data-parser/dist/main.js","node_modules/@andreadev/custom-event-target/dist/CustomEventTarget.js","node_modules/@andreadev/canvas-lib/dist/main.js","node_modules/@andreadev/canvas-lib/dist/utils.js","node_modules/@andreadev/canvas-lib/dist/modules/pan-zoom-plugin.js","src/scripts/game-functions/system.ts","src/scripts/game-functions/galaxy.ts","src/scripts/utils.ts","src/scripts/views/galaxy.ts","src/scripts/views/templates/galaxyTemplates.ts","src/scripts/game-functions/sprites.ts","src/scripts/game-functions/object.ts","src/scripts/views/system.ts","src/scripts/views/templates/systemTemplates.ts","src/scripts/setupCanvasLib.ts","src/main.ts","src/scripts/ui.ts"],"sourcesContent":["export class ParsedData {\n    constructor() {\n        this.galaxies = new Map();\n        this.starSystems = new Map();\n        this.colors = new Map();\n        this.governments = new Map();\n        this.planets = new Map();\n        this.wormholes = new Map();\n        this.phrases = new Map();\n        this.starAttributes = new Map();\n        this.minables = new Map();\n    }\n    addGalaxy(galaxy) {\n        this.galaxies.set(galaxy.name, galaxy);\n    }\n    addStarSystem(starSystem) {\n        this.starSystems.set(starSystem.name, starSystem);\n    }\n    addColor(color) {\n        this.colors.set(color.name, color);\n    }\n    addGovernment(gov) {\n        this.governments.set(gov.name, gov);\n    }\n    addPlanet(planet) {\n        this.planets.set(planet.name, planet);\n    }\n    addWormhole(wormhole) {\n        this.wormholes.set(wormhole.name, wormhole);\n    }\n    addPhrase(phrase) {\n        if (this.phrases.has(phrase.name)) {\n            this.phrases.get(phrase.name).push(phrase);\n        }\n        else {\n            this.phrases.set(phrase.name, [phrase]);\n        }\n    }\n    addStarAttribute(star) {\n        this.starAttributes.set(star.name, star);\n    }\n    addMinable(minable) {\n        this.minables.set(minable.name, minable);\n    }\n}\n","export class Line {\n    constructor(tokens, indentation) {\n        this.tokens = tokens;\n        this.indentation = indentation;\n        this.children = [];\n    }\n    toString() {\n        const tokensText = [...this.tokens];\n        let text = \"\";\n        for (const token of tokensText) {\n            if (token.includes(' ')) {\n                if (token.includes('\"')) {\n                    text += \"`\" + token + \"`\";\n                }\n                else {\n                    text += `\"${token}\"`;\n                }\n            }\n            else {\n                text += token + \" \";\n            }\n        }\n        return text;\n    }\n}\nexport class FileRoot extends Line {\n    constructor(tokens, indentation, filename) {\n        super(tokens, indentation);\n        this.tokens = tokens;\n        this.indentation = indentation;\n        this.isRoot = true;\n        this.filename = filename;\n    }\n}\n","import { Line, FileRoot } from \"./structures\";\nexport function lex(data, filename = \"\") {\n    const root = new FileRoot([], 0, filename);\n    let isQuoteOpen = false;\n    let isComment = false;\n    let currentQuote = \"\";\n    let currentLine = new Line([], 0);\n    let currentToken = \"\";\n    let parentLevels = [root];\n    for (let i = 0; i < data.length; i++) {\n        const c = data[i];\n        let nextLine = null;\n        if (isComment && c != '\\n')\n            continue;\n        switch (c) {\n            // handle comments\n            case '#':\n                if (currentToken.length == 0 && !isQuoteOpen) {\n                    isComment = true;\n                }\n                break;\n            // handle quotes\n            case '\"':\n            case '`':\n                if (isQuoteOpen && c == currentQuote) {\n                    isQuoteOpen = false;\n                    if (currentToken.length == 0) {\n                        currentLine.tokens.push('');\n                    }\n                    break;\n                }\n                if (!isQuoteOpen && currentToken.length == 0) {\n                    isQuoteOpen = true;\n                    currentQuote = c;\n                    break;\n                }\n                if (!isQuoteOpen) {\n                    throw new Error(`Unescaped quote in string after ${currentToken}`);\n                }\n                break;\n            // handle newlines\n            case '\\n':\n                if (currentToken != '' && !isComment) {\n                    currentLine.tokens.push(currentToken);\n                }\n                currentToken = '';\n                isComment = false;\n                nextLine = new Line([], 0);\n                // ignore blank lines\n                if (currentLine.tokens.length == 0) {\n                    currentLine = nextLine;\n                    continue;\n                }\n                // handle too much indentation\n                if (currentLine.indentation > parentLevels.length - 1) {\n                    throw new Error(`Unexpected indentation for line ${currentLine.tokens.join(' ')}`);\n                }\n                // adding the line as children to its parent based on indentation\n                if (currentLine.indentation >= 0) {\n                    parentLevels[currentLine.indentation].children.push(currentLine);\n                }\n                // adding new line as parent level for following data\n                if (currentLine.indentation == parentLevels.length - 1) {\n                    parentLevels.push(currentLine);\n                }\n                else {\n                    // if indentation is smaller then the number of parents, it means that\n                    // previous deeper nested parents has ended their block, so we delete them\n                    parentLevels = parentLevels.slice(0, currentLine.indentation + 1);\n                    parentLevels.push(currentLine);\n                }\n                if (isQuoteOpen) {\n                    throw new Error(`A quote was left open near: '${currentToken}'`);\n                }\n                currentLine = nextLine;\n                break;\n            // handle spaces\n            case ' ':\n                if (!isQuoteOpen) {\n                    if (currentToken.length > 0) {\n                        currentLine.tokens.push(currentToken);\n                        currentToken = \"\";\n                    }\n                }\n                else {\n                    currentToken += \" \";\n                }\n                break;\n            // handle tabs\n            case '\\t':\n                if (!isQuoteOpen &&\n                    currentLine.tokens.length == 0 &&\n                    currentToken.length == 0) {\n                    currentLine.indentation++;\n                }\n                else if (!isQuoteOpen && currentToken.length > 0) {\n                    // Add tabs as token separators too to avoid the error in some official files\n                    currentLine.tokens.push(currentToken);\n                    currentToken = \"\";\n                }\n                else {\n                    currentToken += \"\\t\";\n                }\n                break;\n            // handle other characters\n            default:\n                currentToken += c;\n        }\n    }\n    return root;\n}\n","export class Sprite {\n    constructor() {\n        this.name = \"\";\n        this.scale = 1;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'sprite') {\n            throw new Error('Not a sprite');\n        }\n        let sprite = new Sprite();\n        sprite.name = dataLine.tokens[1];\n        // check if there's a scaling for the sprite\n        if (dataLine.children.length > 0) {\n            if (dataLine.children[0].tokens[0] == 'scale') {\n                sprite.scale = parseFloat(dataLine.children[0].tokens[1]);\n            }\n        }\n        return sprite;\n    }\n}\n","import { Sprite } from \"./Sprite\";\nexport class SystemObject {\n    constructor(esData) {\n        this.esData = esData;\n        this.name = \"\";\n        this.sprite = null;\n        this.distance = 0;\n        this.period = 0;\n        this.offset = 0;\n        this.objects = [];\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'object') {\n            throw new Error(\"Not an object\");\n        }\n        const systemObject = new SystemObject(data);\n        systemObject.name = (dataLine.tokens.length == 2) ? dataLine.tokens[1] : \"\";\n        const objects = [];\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                case 'sprite':\n                    systemObject.sprite = Sprite.fromLine(data, child);\n                    break;\n                case 'distance':\n                    systemObject.distance = parseFloat(child.tokens[1]);\n                    break;\n                case 'period':\n                    systemObject.period = parseFloat(child.tokens[1]);\n                    break;\n                case 'offset':\n                    systemObject.offset = parseInt(child.tokens[1]);\n                    break;\n                case 'object':\n                    objects.push(SystemObject.fromLine(data, child));\n            }\n        }\n        systemObject.objects = objects;\n        return systemObject;\n    }\n}\n","export class TravelDistance {\n    constructor() {\n        this.link = 0;\n        this.jump = 0;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'arrival' &&\n            dataLine.tokens[0] != 'departure') {\n            throw new Error(\"Not a travel distance (either 'arrival' or 'departure')\");\n        }\n        let link = 0;\n        let jump = 0;\n        if (dataLine.tokens[1]) {\n            link = jump = parseInt(dataLine.tokens[1]);\n        }\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                // Extract link distance\n                case 'link':\n                    link = parseInt(child.tokens[1]);\n                    break;\n                // Extract jump distance\n                case 'jump':\n                    jump = parseInt(child.tokens[1]);\n                    break;\n            }\n        }\n        const distance = new TravelDistance();\n        distance.link = link;\n        distance.jump = jump;\n        return distance;\n    }\n}\n","export class RamscoopModifier {\n    constructor() {\n        this.universal = 1;\n        this.addend = 0;\n        this.multiplier = 1;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'ramscoop') {\n            throw new Error(\"Not a ramscoop data\");\n        }\n        let universal = 1;\n        let addend = 0;\n        let multiplier = 1;\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                case 'universal':\n                    universal = parseFloat(child.tokens[1]);\n                    break;\n                case 'addend':\n                    addend = parseFloat(child.tokens[1]);\n                    break;\n                case 'multiplier':\n                    multiplier = parseFloat(child.tokens[1]);\n                    break;\n            }\n        }\n        const ramscoop = new RamscoopModifier();\n        ramscoop.universal = universal;\n        ramscoop.addend = addend;\n        ramscoop.multiplier = multiplier;\n        return ramscoop;\n    }\n}\n","import { SystemObject } from \"./SystemObject\";\nimport { TravelDistance } from \"./TravelDistance\";\nimport { RamscoopModifier } from \"./RamscoopModifier\";\nexport class System {\n    constructor(data, name, pos) {\n        this.links = [];\n        this.government = \"\";\n        this.attributes = [];\n        this.objects = [];\n        this.inaccessible = false;\n        this.hidden = false;\n        this.shrouded = false;\n        this.music = \"\";\n        this.arrival = new TravelDistance();\n        this.departure = new TravelDistance();\n        this.ramscoop = new RamscoopModifier();\n        this.habitable = 0;\n        this.belt = { distance: 0, weight: 1 };\n        this.invisibleFence = 10000;\n        this.jumpRange = 0;\n        this.haze = \"\";\n        this.asteroids = [];\n        this.minables = [];\n        this.trades = [];\n        this.fleets = [];\n        this.raids = [];\n        this.noRaid = false;\n        this.hazards = [];\n        this.starfieldDensity = 1;\n        this.isSelected = false;\n        this.name = name;\n        this.position = pos;\n        this.esData = data;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'system') {\n            throw new Error(\"Not a system\");\n        }\n        const name = dataLine.tokens[1];\n        const system = new System(data, name, { x: 0, y: 0 });\n        let foundPos = false;\n        let links = [];\n        const objects = [];\n        let asteroids = [];\n        let minables = [];\n        let trades = [];\n        let fleets = [];\n        let raids = [];\n        let hazards = [];\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                // Extract the position\n                case 'pos':\n                    system.position = {\n                        x: parseInt(child.tokens[1]),\n                        y: parseInt(child.tokens[2])\n                    };\n                    foundPos = true;\n                    break;\n                // Extract the links\n                case 'link':\n                    links.push(child.tokens[1]);\n                    break;\n                // Set the system government\n                case 'government':\n                    system.government = child.tokens[1];\n                    break;\n                // Save a list of attributes\n                case 'attributes':\n                    system.attributes = child.tokens.slice(1);\n                    break;\n                // Parse the objects in the system\n                case 'object':\n                    objects.push(SystemObject.fromLine(data, child));\n                    break;\n                // Parse the arrival distance\n                case 'arrival':\n                    system.arrival = TravelDistance.fromLine(data, child);\n                    break;\n                // Parse the departure distance\n                case 'departure':\n                    system.departure = TravelDistance.fromLine(data, child);\n                    break;\n                // Inaccessible system\n                case 'inaccessible':\n                    system.inaccessible = true;\n                    break;\n                // Hidden system\n                case 'hidden':\n                    system.hidden = true;\n                    break;\n                // Shrouded system\n                case 'shrouded':\n                    system.shrouded = true;\n                    break;\n                // Music for this specific system\n                case 'music':\n                    system.music = child.tokens[1];\n                    break;\n                // Changes to how the ramscoop works in this system\n                case 'ramscoop':\n                    system.ramscoop = RamscoopModifier.fromLine(data, child);\n                    break;\n                // Habitable zone\n                case 'habitable':\n                    system.habitable = parseInt(child.tokens[1]);\n                    break;\n                // Data for the asteroid belt\n                case 'belt':\n                    system.belt = {\n                        distance: parseInt(child.tokens[1]),\n                        weight: (child.tokens[2])\n                            ? parseFloat(child.tokens[2])\n                            : 1\n                    };\n                    break;\n                // Invisible fence distance for the NPCs\n                case 'invisible fence':\n                    system.invisibleFence = parseInt(child.tokens[1]);\n                    break;\n                // Jump range\n                case 'jump range':\n                    system.jumpRange = parseInt(child.tokens[1]);\n                    break;\n                // Haze sprite\n                case 'haze':\n                    system.haze = child.tokens[1];\n                    break;\n                // Asteroid type data\n                case 'asteroids':\n                    asteroids.push({\n                        name: child.tokens[1],\n                        count: parseInt(child.tokens[2]),\n                        energy: parseFloat(child.tokens[3])\n                    });\n                    break;\n                // Mineable type data\n                case 'minables':\n                    minables.push({\n                        name: child.tokens[1],\n                        count: parseInt(child.tokens[2]),\n                        energy: parseFloat(child.tokens[3])\n                    });\n                    break;\n                // Trade info\n                case 'trade':\n                    trades.push({\n                        commodity: child.tokens[1],\n                        cost: parseInt(child.tokens[2])\n                    });\n                    break;\n                // Fleets that will spawn\n                case 'fleet':\n                    fleets.push({\n                        name: child.tokens[1],\n                        period: parseInt(child.tokens[2])\n                    });\n                    break;\n                // Raids coming into the system\n                case 'raid':\n                    raids.push({\n                        fleet: child.tokens[1],\n                        minAttraction: parseInt(child.tokens[2]),\n                        maxAttraction: parseInt(child.tokens[3])\n                    });\n                    break;\n                case 'no raid':\n                    system.noRaid = true;\n                    break;\n                // Hazards present in the system\n                case 'hazard':\n                    hazards.push({\n                        name: child.tokens[1],\n                        period: parseInt(child.tokens[2])\n                    });\n                    break;\n                // Density of the stars in the background\n                case 'starfield density':\n                    system.starfieldDensity = parseFloat(child.tokens[1]);\n                    break;\n            }\n        }\n        if (!foundPos) {\n            throw new Error(\"No position found for this system\");\n        }\n        system.links = links;\n        system.objects = objects;\n        system.asteroids = asteroids;\n        system.minables = minables;\n        system.trades = trades;\n        system.fleets = fleets;\n        system.raids = raids;\n        system.hazards = hazards;\n        return system;\n    }\n}\n","export class Galaxy {\n    constructor(data, name, pos) {\n        this.position = { x: 0, y: 0 };\n        this.sprite = \"\";\n        this.name = name;\n        this.position = pos;\n        this.esData = data;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'galaxy') {\n            throw new Error(\"Not a galaxy\");\n        }\n        const name = dataLine.tokens[1];\n        let pos = { x: 0, y: 0 };\n        let foundPos = false;\n        let sprite = \"\";\n        for (let child of dataLine.children) {\n            if (child.tokens[0] == 'pos') {\n                pos = {\n                    x: parseInt(child.tokens[1]),\n                    y: parseInt(child.tokens[2])\n                };\n                foundPos = true;\n                continue;\n            }\n            if (child.tokens[0] == 'sprite') {\n                sprite = child.tokens[1];\n            }\n        }\n        if (!foundPos) {\n            throw new Error(\"No position found for this system\");\n        }\n        const galaxy = new Galaxy(data, name, pos);\n        galaxy.sprite = sprite;\n        return galaxy;\n    }\n}\n","export class Color {\n    constructor(name, r, g, b, a = 255) {\n        this.name = name;\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    toString() {\n        if (this.a == 255) {\n            return `rgb(${this.r}, ${this.g}, ${this.b})`;\n        }\n        return `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`;\n    }\n    // The first argument is important to allow standardization across the different game objects\n    static fromLine(_, dataLine) {\n        let label = dataLine.tokens[1];\n        let r = parseFloat(dataLine.tokens[2]);\n        let g = parseFloat(dataLine.tokens[3]);\n        let b = parseFloat(dataLine.tokens[4]);\n        let a = 255;\n        if (dataLine.tokens.length == 6) {\n            a = parseFloat(dataLine.tokens[5]);\n        }\n        return Color.fromPercentages(label, r, g, b, a);\n    }\n    static fromPercentages(label, r, g, b, a) {\n        return new Color(label, r * 255, g * 255, b * 255, a * 255);\n    }\n    static fromGovernment(data, govName) {\n        let government = data.governments.get(govName);\n        if (!government) {\n            return null;\n        }\n        if (government.color instanceof Color) {\n            return government.color;\n        }\n        let color = data.colors.get(government.color);\n        if (!color) {\n            return null;\n        }\n        return color;\n    }\n}\n","import { Color } from \"./Color\";\nexport class Government {\n    constructor(data, name) {\n        this.color = \"\";\n        this.esData = data;\n        this.name = name;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'government') {\n            throw new Error(\"Not a government\");\n        }\n        const name = dataLine.tokens[1];\n        let color = \"\";\n        for (let child of dataLine.children) {\n            if (child.tokens[0] == 'color') {\n                if (child.tokens.length == 2) {\n                    color = child.tokens[1];\n                }\n                else {\n                    let r = parseFloat(dataLine.tokens[1]);\n                    let g = parseFloat(dataLine.tokens[2]);\n                    let b = parseFloat(dataLine.tokens[3]);\n                    let a = 255;\n                    if (dataLine.tokens.length == 5) {\n                        a = parseFloat(dataLine.tokens[4]);\n                    }\n                    color = Color.fromPercentages('', r, g, b, a);\n                }\n            }\n        }\n        const government = new Government(data, name);\n        government.color = color;\n        return government;\n    }\n}\n","export class Planet {\n    constructor(esData, name) {\n        this.esData = esData;\n        this.name = name;\n        this.wormhole = \"\";\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'planet') {\n            throw new Error(\"Not a planet\");\n        }\n        const name = dataLine.tokens[1];\n        let wormhole = \"\";\n        for (let child of dataLine.children) {\n            if (child.tokens[0] == 'wormhole') {\n                wormhole = child.tokens[1];\n            }\n        }\n        let planet = new Planet(data, name);\n        planet.wormhole = wormhole;\n        return planet;\n    }\n}\n","import { Color } from \"./Color\";\nexport class Wormhole {\n    constructor(esData, name) {\n        this.esData = esData;\n        this.name = name;\n        this.isMappable = false;\n        this.links = [];\n        this.color = \"\";\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'wormhole') {\n            throw new Error(\"Not a wormhole\");\n        }\n        const name = dataLine.tokens[1];\n        let mappable = false;\n        let color = \"\";\n        let links = [];\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                case 'color':\n                    if (child.tokens.length == 2) {\n                        color = child.tokens[1];\n                    }\n                    else {\n                        let r = parseFloat(dataLine.tokens[1]);\n                        let g = parseFloat(dataLine.tokens[2]);\n                        let b = parseFloat(dataLine.tokens[3]);\n                        let a = 255;\n                        if (dataLine.tokens.length == 5) {\n                            a = parseFloat(dataLine.tokens[4]);\n                        }\n                        color = Color.fromPercentages('', r, g, b, a);\n                    }\n                    break;\n                case 'link':\n                    links.push([child.tokens[1], child.tokens[2]]);\n                    break;\n                case 'mappable':\n                    mappable = true;\n                    break;\n            }\n        }\n        const wormhole = new Wormhole(data, name);\n        wormhole.isMappable = mappable;\n        wormhole.color = color;\n        wormhole.links = links;\n        return wormhole;\n    }\n}\n","export class Word {\n    constructor() {\n        this.texts = [];\n    }\n    static fromLine(data, dataLine) {\n        var _a;\n        if (dataLine.tokens[0] != 'word') {\n            throw new Error(\"Not a word\");\n        }\n        let texts = [];\n        for (let child of dataLine.children) {\n            texts.push({\n                data: child.tokens[0],\n                weight: parseInt((_a = child.tokens[1]) !== null && _a !== void 0 ? _a : 1)\n            });\n        }\n        let wordObj = new Word();\n        wordObj.texts = texts;\n        return wordObj;\n    }\n}\n","import { Word } from \"./Word\";\nexport class Phrase {\n    constructor() {\n        this.name = \"\";\n        this.pieces = [];\n        this.replacements = [];\n    }\n    static fromLine(data, dataLine) {\n        var _a;\n        if (dataLine.tokens[0] != 'phrase') {\n            throw new Error(\"Not a phrase\");\n        }\n        let phrase = new Phrase();\n        phrase.name = (_a = dataLine.tokens[1]) !== null && _a !== void 0 ? _a : \"\";\n        let pieces = [];\n        let replacements = [];\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                case 'word':\n                    pieces.push(Word.fromLine(data, child));\n                    break;\n                case 'phrase':\n                    pieces.push(this.phrasesNamesFromLine(child));\n                    break;\n                case 'replacements':\n                    replacements = this.replacementsFromLine(child);\n                    break;\n            }\n        }\n        phrase.pieces = pieces;\n        phrase.replacements = replacements;\n        return phrase;\n    }\n    static phrasesNamesFromLine(dataLine) {\n        let names;\n        names = dataLine.children.map((line) => {\n            var _a;\n            return ({\n                data: line.tokens[0],\n                weight: parseInt((_a = line.tokens[1]) !== null && _a !== void 0 ? _a : 1)\n            });\n        });\n        return names;\n    }\n    static replacementsFromLine(dataLine) {\n        let replacements;\n        replacements = dataLine.children.map((line) => {\n            let from = line.tokens[0];\n            let to = line.tokens[1];\n            return [from, to];\n        });\n        return replacements;\n    }\n}\n","export class Star {\n    constructor() {\n        this.name = \"\";\n        this.power = 1;\n        this.wind = 1;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'star') {\n            throw new Error('Not a star');\n        }\n        let star = new Star();\n        star.name = dataLine.tokens[1];\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                case 'power':\n                    star.power = parseFloat(child.tokens[1]);\n                    break;\n                case 'wind':\n                    star.wind = parseFloat(child.tokens[1]);\n                    break;\n            }\n        }\n        return star;\n    }\n}\n","export class MinablePayload {\n    constructor() {\n        this.outfit = \"\";\n        this.maxDrops = 1;\n        this.dropRate = 0.25;\n        this.toughness = 1;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'payload') {\n            throw new Error('Not a payload');\n        }\n        let payload = new MinablePayload();\n        payload.outfit = dataLine.tokens[1];\n        if (dataLine.tokens[2]) {\n            payload.maxDrops = parseInt(dataLine.tokens[2]);\n        }\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                case 'max drops':\n                    payload.maxDrops = parseInt(child.tokens[1]);\n                    break;\n                case 'drop rate':\n                    payload.dropRate = parseFloat(child.tokens[1]);\n                    break;\n                case 'toughness':\n                    payload.toughness = parseInt(child.tokens[1]);\n                    break;\n            }\n        }\n        return payload;\n    }\n}\n","import { MinablePayload } from \"./MinablePayload\";\nexport class Minable {\n    constructor() {\n        this.name = \"\";\n        this.displayName = \"\";\n        this.noun = \"Asteroid\";\n        this.sprite = \"\";\n        this.hull = 0;\n        this.randomHull = 0;\n        this.payloads = [];\n        this.explosions = [];\n    }\n    static fromLine(data, dataLine) {\n        var _a;\n        if (dataLine.tokens[0] != 'minable') {\n            throw new Error('Not a minable');\n        }\n        let minable = new Minable();\n        minable.name = dataLine.tokens[1];\n        minable.displayName = minable.name;\n        let payloads = [];\n        let explosions = [];\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                case 'display name':\n                    minable.displayName = child.tokens[1];\n                    break;\n                case 'noun':\n                    minable.noun = child.tokens[1];\n                    break;\n                case 'sprite':\n                    minable.sprite = child.tokens[1];\n                    break;\n                case 'hull':\n                    minable.hull = parseInt(child.tokens[1]);\n                    break;\n                case 'random hull':\n                    minable.randomHull = parseInt(child.tokens[1]);\n                    break;\n                case 'payload':\n                    payloads.push(MinablePayload.fromLine(data, child));\n                    break;\n                case 'explode':\n                    explosions.push({\n                        effect: child.tokens[1],\n                        count: parseInt((_a = child.tokens[2]) !== null && _a !== void 0 ? _a : 1)\n                    });\n                    break;\n            }\n        }\n        minable.payloads = payloads;\n        minable.explosions = explosions;\n        return minable;\n    }\n}\n","import { ParsedData } from \"./es-objects/ParsedData\";\nimport { System } from \"./es-objects/System\";\nimport { Galaxy } from \"./es-objects/Galaxy\";\nimport { Color } from \"./es-objects/Color\";\nimport { Government } from \"./es-objects/Government\";\nimport { Planet } from \"./es-objects/Planet\";\nimport { Wormhole } from \"./es-objects/Wormhole\";\nimport { Phrase } from \"./es-objects/Phrase\";\nimport { Star } from \"./es-objects/Star\";\nimport { Minable } from \"./es-objects/Minable\";\nexport function parse(root, previousData = null) {\n    const parsedData = previousData !== null && previousData !== void 0 ? previousData : new ParsedData();\n    const unparsed = new Set();\n    for (let child of root.children) {\n        switch (child.tokens[0]) {\n            case 'system':\n                parsedData.addStarSystem(System.fromLine(parsedData, child));\n                break;\n            case 'galaxy':\n                parsedData.addGalaxy(Galaxy.fromLine(parsedData, child));\n                break;\n            case 'color':\n                parsedData.addColor(Color.fromLine(parsedData, child));\n                break;\n            case 'government':\n                parsedData.addGovernment(Government.fromLine(parsedData, child));\n                break;\n            case 'planet':\n                parsedData.addPlanet(Planet.fromLine(parsedData, child));\n                break;\n            case 'wormhole':\n                parsedData.addWormhole(Wormhole.fromLine(parsedData, child));\n                break;\n            case 'phrase':\n                parsedData.addPhrase(Phrase.fromLine(parsedData, child));\n                break;\n            case 'star':\n                parsedData.addStarAttribute(Star.fromLine(parsedData, child));\n                break;\n            case 'minable':\n                parsedData.addMinable(Minable.fromLine(parsedData, child));\n                break;\n            default:\n                unparsed.add(child.tokens[0]);\n        }\n    }\n    return parsedData;\n}\n","export function readFile(file) {\n    return new Promise((resolve, _) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            resolve(reader.result);\n        };\n        reader.readAsText(file);\n    });\n}\n","// import { parse } from \"./parser\";\nimport { ParsedData } from \"./es-objects/ParsedData\";\nimport { lex } from \"./lexer\";\nimport { parse } from \"./parser\";\nimport { readFile } from \"./utils\";\nexport async function parseFile(file, filename, previousData) {\n    const parsedData = previousData !== null && previousData !== void 0 ? previousData : new ParsedData();\n    let fileContent = await readFile(file);\n    let data = lex(fileContent, filename);\n    parse(data, parsedData);\n    return parsedData;\n}\nexport async function parseFiles(files) {\n    const parsedData = new ParsedData();\n    for (let file of files) {\n        await parseFile(file, file.webkitRelativePath, parsedData);\n    }\n    return parsedData;\n}\n","export class CustomEventTarget {\n    listeners;\n    constructor() {\n        this.listeners = new Map();\n    }\n    addListener(event, listener) {\n        if (!this.listeners.has(event)) {\n            this.listeners.set(event, []);\n        }\n        this.listeners.get(event).push(listener);\n    }\n    removeListener(event, listener) {\n        if (!this.listeners.has(event))\n            return;\n        let listeners = this.listeners.get(event);\n        let index = listeners.findIndex((x) => x === listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n        this.listeners.set(event, listeners);\n    }\n    /**\n     * Clear all listeners for the specified event\n     */\n    clearListeners(event) {\n        if (!this.listeners.has(event))\n            return;\n        this.listeners.set(event, []);\n    }\n    /**\n     * Clear all listeners for all the events\n     */\n    clearAllListeners() {\n        this.listeners.clear();\n    }\n    /**\n     * Call all the listeners for a specific event in a synchronous way.\n     * If an async listener is found, it gets awaited before continuing.\n     */\n    async fireEvent(event, details) {\n        if (!this.listeners.has(event))\n            return;\n        for (let listener of this.listeners.get(event)) {\n            let val = listener(details);\n            if (val instanceof Promise) {\n                await val;\n            }\n        }\n    }\n    /**\n     * Call all the listeners for a specific event in an asynchronous way.\n     * All the async listeners found are awaited using Promise.all().\n     */\n    async fireEventAsync(event, details) {\n        if (!this.listeners.has(event))\n            return;\n        let promises = [];\n        for (let listener of this.listeners.get(event)) {\n            let ret = listener(details);\n            if (ret instanceof Promise) {\n                promises.push(ret);\n            }\n        }\n        await Promise.all(promises);\n    }\n    /**\n     * Call all the listeners for a specific event as if they were all\n     * synchronous functions. Not recommended, since it doesn't handle\n     * async at all. Only use it when all listeners are synchronous.\n     */\n    fireEventSync(event, details) {\n        if (!this.listeners.has(event))\n            return;\n        for (let listener of this.listeners.get(event)) {\n            listener(details);\n        }\n    }\n}\n","import { CustomEventTarget } from \"@andreadev/custom-event-target\";\nexport class CanvasLib extends CustomEventTarget {\n    constructor(canvas) {\n        super();\n        this.canvas = canvas;\n        this.plugins = new Map();\n        this.layers = [];\n        this.layersActions = new CustomEventTarget();\n        const ctx = this.canvas.getContext(\"2d\");\n        if (ctx == null) {\n            throw ('Could not get the context for the canvas');\n        }\n        this.context = ctx;\n    }\n    async renderCycle() {\n        await this.paint();\n        window.requestAnimationFrame(() => this.renderCycle());\n    }\n    use(PluginClass, settings) {\n        const plugin = new PluginClass(this, settings);\n        this.plugins.set(plugin.name, plugin);\n    }\n    getPlugin(PluginClass) {\n        for (let plugin of this.plugins.values()) {\n            if (plugin instanceof PluginClass) {\n                return plugin;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Main paint function for the canvas\n     *\n     * @param shouldClear If true, clear the canvas before painting\n     */\n    async paint(shouldClear = true) {\n        this.prepareContext(shouldClear);\n        const prop = { context: this.context };\n        await this.layersActions.fireEvent('_prerender', prop);\n        for (let layer of this.layers) {\n            await this.layersActions.fireEvent(layer.name, prop);\n        }\n        await this.layersActions.fireEvent('_postrender', prop);\n    }\n    prepareContext(shouldClear = true) {\n        this.context.resetTransform();\n        if (shouldClear) {\n            this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n        this.context.translate(Math.floor(this.canvas.width / 2), Math.floor(this.canvas.height / 2));\n    }\n    /**\n     * Add a new layer to handle drawing on multiple levels\n     */\n    addLayer(name, order) {\n        this.layers.push({\n            name,\n            order\n        });\n        this.layers.sort((a, b) => a.order - b.order);\n    }\n    /**\n     * Remove a layer\n     */\n    removeLayer(name) {\n        this.layers.splice(this.layers.findIndex((l) => l.name == name), 1);\n        this.layersActions.clearListeners(name);\n    }\n    /**\n     * Just a utility function to make the user code less heavy\n     */\n    on(layer, callback) {\n        this.layersActions.addListener(layer, callback);\n    }\n    remove(layer, callback) {\n        this.layersActions.removeListener(layer, callback);\n    }\n    startRendering() {\n        window.requestAnimationFrame(() => this.renderCycle());\n    }\n}\n","export function throttle(func, wait) {\n    let timeout;\n    let isThrottled = false;\n    return function () {\n        if (isThrottled) {\n            return;\n        }\n        const context = this;\n        const args = arguments;\n        func.apply(context, args);\n        clearTimeout(timeout);\n        timeout = setTimeout(() => (isThrottled = false), wait);\n        isThrottled = true;\n    };\n}\n","import { throttle } from \"../utils\";\nexport class PanZoomPlugin {\n    constructor(app, settings) {\n        var _a, _b, _c;\n        this.app = app;\n        this.settings = settings;\n        this.name = \"PanZoom\";\n        this.currentZoom = 1;\n        this.minZoom = 0.1;\n        this.maxZoom = 10;\n        this.panButton = 1; // Middle\n        this.cameraOffset = { x: 0, y: 0 };\n        this.isPanning = false;\n        this.startedPanningOffset = { x: 0, y: 0 };\n        this.startedPanningPosition = { x: 0, y: 0 };\n        this.throttle = -1;\n        this.bindEvents();\n        this.minZoom = (_a = settings.minZoom) !== null && _a !== void 0 ? _a : this.minZoom;\n        this.maxZoom = (_b = settings.maxZoom) !== null && _b !== void 0 ? _b : this.maxZoom;\n        this.throttle = (_c = settings.throttle) !== null && _c !== void 0 ? _c : this.throttle;\n        this.throttledPaint = throttle(this.app.paint.bind(this.app), this.throttle);\n        let mouseButtons = {\n            'left': 0,\n            'middle': 1,\n            'right': 2,\n            'any': -1\n        };\n        if (settings.panButton)\n            this.panButton = mouseButtons[settings.panButton];\n    }\n    bindEvents() {\n        this.app.on('_prerender', this.transformCanvas.bind(this));\n        this.app.canvas.addEventListener('pointerdown', this.onPointerDown.bind(this));\n        this.app.canvas.addEventListener('pointerup', this.onPointerUp.bind(this));\n        this.app.canvas.addEventListener('pointermove', this.onPointerMove.bind(this));\n        this.app.canvas.addEventListener('pointerleave', this.onPointerUp.bind(this));\n        this.app.canvas.addEventListener('wheel', this.onScroll.bind(this));\n    }\n    screenToLocalPoint(x, y) {\n        let hw = this.app.canvas.width / 2;\n        let hh = this.app.canvas.height / 2;\n        let tx = this.cameraOffset.x;\n        let ty = this.cameraOffset.y;\n        let z = this.currentZoom;\n        // center\n        x = x - hw;\n        y = y - hh;\n        // scale\n        x = x / z;\n        y = y / z;\n        // trnaslate\n        x = x - tx;\n        y = y - ty;\n        return { x, y };\n    }\n    zoom(amount) {\n        this.currentZoom += amount;\n        this.currentZoom = Math.min(Math.max(this.minZoom, this.currentZoom), this.maxZoom);\n        this.currentZoom = Math.floor(this.currentZoom * 1000) / 1000;\n        this.updateRender();\n    }\n    transformCanvas(prop) {\n        prop.context.scale(this.currentZoom, this.currentZoom);\n        prop.context.translate(this.cameraOffset.x, this.cameraOffset.y);\n    }\n    onPointerDown(e) {\n        if (e.button == this.panButton || this.panButton == -1) {\n            this.isPanning = true;\n            this.startedPanningOffset = this.cameraOffset;\n            this.startedPanningPosition = { x: e.clientX, y: e.clientY };\n        }\n    }\n    onPointerUp(_) {\n        this.isPanning = false;\n    }\n    onPointerMove(e) {\n        if (this.isPanning) {\n            this.cameraOffset = {\n                x: this.startedPanningOffset.x + ((e.clientX - this.startedPanningPosition.x) / this.currentZoom),\n                y: this.startedPanningOffset.y + ((e.clientY - this.startedPanningPosition.y) / this.currentZoom),\n            };\n            this.updateRender();\n        }\n    }\n    onScroll(e) {\n        this.zoom(e.deltaY / 1000);\n    }\n    updateRender() {\n        if (this.throttle > 0) {\n            this.throttledPaint();\n        }\n        else {\n            this.app.paint();\n        }\n    }\n    static getDataFromMatrix(matrix) {\n        return {\n            scaleX: matrix.a,\n            scaleY: matrix.d,\n            translateX: matrix.e,\n            translateY: matrix.f,\n            skewX: matrix.b,\n            skewY: matrix.c\n        };\n    }\n    static fixedNumber(number, context, direction = 'x') {\n        let { scaleX, scaleY } = this.getDataFromMatrix(context.getTransform());\n        return direction == 'x' ? number * (1 / scaleX) : number * (1 / scaleY);\n    }\n    static fixedSize(width, height, context) {\n        let { scaleX, scaleY } = this.getDataFromMatrix(context.getTransform());\n        return {\n            width: width * (1 / scaleX),\n            height: height * (1 / scaleY)\n        };\n    }\n}\n","import { System } from 'es-data-parser';\nimport { PanZoomPlugin } from '@andreadev/canvas-lib/dist/modules/pan-zoom-plugin';\nimport { Color } from 'es-data-parser';\nimport { Point } from 'es-data-parser';\n\nconst pinSize = 3;\nconst pinLineWidth = 2;\nconst linkColor = 'rgba(255,255,255,0.2)';\nconst tagNameOffset = 4;\nconst tagNameColor = 'rgba(255,255,255,0.3)';\nconst tagNameFontSize = 12;\n\n/**\n * Calculate the distance of a point to a star system\n */\nexport function distanceFromSystem(system: System, position: Point): number {\n    return Math.sqrt(\n        Math.pow(system.position.x - position.x, 2) +\n        Math.pow(system.position.y - position.y, 2)\n    );\n}\n\n/**\n * Rendering function for the endless sky systems\n */\nexport function renderSystem(system: System, ctx: CanvasRenderingContext2D) {\n    // renderSystemSelection(system, ctx);\n    renderSystemLinks(system, ctx);\n    renderSystemPin(system, ctx);\n    renderSystemName(system, ctx);\n}\n\nexport function renderSystemSelection(system: System, ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.fillStyle = 'rgba(100,100,255,0.2)';\n    ctx.strokeStyle = 'darkblue';\n    ctx.lineWidth = PanZoomPlugin.fixedNumber(1, ctx);\n    let width = PanZoomPlugin.fixedNumber(15, ctx);\n    ctx.ellipse(\n        system.position.x,\n        system.position.y,\n        width,\n        width,\n        0, 0, 2 * Math.PI\n    );\n    ctx.fill();\n    ctx.stroke();\n}\n\nexport function renderSystemLinks(system: System, ctx: CanvasRenderingContext2D) {\n    // Render the links\n    ctx.lineWidth = PanZoomPlugin.fixedNumber(1, ctx);\n    ctx.strokeStyle = linkColor;\n\n    for (let link of system.links) {\n        ctx.beginPath();\n        ctx.moveTo(system.position.x, system.position.y);\n\n        const targetSystem = system.esData.starSystems.get(link);\n        if (!targetSystem)\n            continue;\n\n        ctx.lineTo(targetSystem.position.x, targetSystem.position.y);\n        ctx.stroke();\n    }\n}\n\nexport function renderSystemPin(system: System, ctx: CanvasRenderingContext2D) {\n    // Render the circle\n    // Get the government color\n    let color = Color.fromGovernment(system.esData, system.government)?.toString();\n    if (!color) {\n        color = '#aaa';\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = 'black';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = PanZoomPlugin.fixedNumber(pinLineWidth, ctx);\n    let {width, height} = PanZoomPlugin.fixedSize(pinSize, pinSize, ctx);\n    ctx.ellipse(system.position.x, system.position.y, width, height, 0, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.stroke();\n}\n\nexport function renderSystemName(system: System, ctx: CanvasRenderingContext2D) {\n    // Render the name\n    let { scaleX: scale } = PanZoomPlugin.getDataFromMatrix(ctx.getTransform());\n    // If it's too small to render the name, interrupt the export function\n    if (scale < 0.5) {\n        return;\n    }\n\n    let fontSize = PanZoomPlugin.fixedNumber(tagNameFontSize, ctx)\n    ctx.font = `${fontSize}px Arial`;\n    ctx.fillStyle = tagNameColor;\n    let offset = PanZoomPlugin.fixedNumber(tagNameOffset, ctx);\n    let {width, height} = PanZoomPlugin.fixedSize(pinSize, pinSize, ctx);\n    ctx.fillText(system.name, system.position.x + width + offset, system.position.y + height);\n}\n","import { Galaxy } from \"es-data-parser\";\nimport { SpriteList } from \"./sprites\";\n\nexport async function renderGalaxy(galaxy: Galaxy, spriteList: SpriteList, ctx: CanvasRenderingContext2D) {\n    // Render the sprite\n    if (galaxy.sprite == '') {\n        return;\n    }\n\n    let spriteImage : HTMLImageElement | undefined = spriteList.loadedSprites.get(galaxy.sprite);\n\n    // The sprite image isn't loaded\n    if (!spriteImage) {\n        const spriteFile = spriteList.sprites.get(galaxy.sprite);\n\n        if (!spriteFile) {\n            console.error(`Sprite ${galaxy.sprite} not found`);\n            return;\n        }\n\n        spriteImage = await spriteList.load(galaxy.sprite, spriteFile);\n    }\n\n    ctx.drawImage(\n        spriteImage,\n        galaxy.position.x - (spriteImage.width / 2),\n        galaxy.position.y - (spriteImage.height / 2)\n    );\n}\n","export const openDirectory = async (): Promise<File[]> => {\n    // Use older apis because File System Access API seems to be working unnaturally\n    return new Promise((resolve) => {\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.webkitdirectory = true;\n        \n        input.addEventListener('change', () => {\n            let files = Array.from(input.files as FileList);\n            resolve(files);\n        });\n        if ('showPicker' in HTMLInputElement.prototype) {\n            input.showPicker();\n        } else {\n            input.click();\n        }\n    });\n};\n\n// This should probably used in the library\nexport const throttle = (fn: Function, wait: number = 300) => {\n    let inThrottle: boolean;\n    let lastFn: ReturnType<typeof setTimeout>;\n    let lastTime: number;\n\n    return function (this: any) {\n        const context = this,\n        args = arguments;\n        if (!inThrottle) {\n            fn.apply(context, args);\n            lastTime = Date.now();\n            inThrottle = true;\n        } else {\n            clearTimeout(lastFn);\n            lastFn = setTimeout(() => {\n                if (Date.now() - lastTime >= wait) {\n                    fn.apply(context, args);\n                    lastTime = Date.now();\n                }\n            }, Math.max(wait - (Date.now() - lastTime), 0));\n        }\n    };\n};\n\n// Load image\nexport function loadImage(file: File): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        let img = new Image();\n        img.onload = () => {\n            resolve(img);\n        }\n        img.onerror = () => {\n            reject();\n        }\n        img.src = URL.createObjectURL(file);\n    });\n}\n\n/*\n * Load an html template built with text and insert it into an\n * element by its query selector\n */\nexport function loadTemplate(template: string, parentSelector: string) {\n    let parent = document.querySelector(parentSelector);\n    if (!parent) {\n        throw new Error(`Cannot load template because parent element doesn't exists (\"${parentSelector}\")`);\n    }\n\n    let templateEl = document.createElement('template');\n    templateEl.innerHTML = template;\n    let node = templateEl.content.firstChild?.cloneNode(true)!;\n\n    parent.appendChild(node);\n}\n\nexport interface AppState {\n    selectedSystem: string | null,\n}\n\nexport function setState(state: AppState) {\n    history.pushState(state, '');\n}\n\nexport function getState(): AppState | null {\n    return history.state;\n}\n","import { ParsedData } from \"es-data-parser\";\nimport { PanZoomPlugin } from \"@andreadev/canvas-lib/dist/modules/pan-zoom-plugin\";\nimport { View } from \"./abstract\";\nimport { CanvasLib } from \"@andreadev/canvas-lib\";\nimport { System } from \"es-data-parser\";\nimport { distanceFromSystem } from \"../game-functions/system\";\nimport { renderSystemSelection, renderSystemPin, renderSystemLinks, renderSystemName } from \"../game-functions/system\";\nimport { renderGalaxy } from \"../game-functions/galaxy\";\nimport { SpriteList } from \"../game-functions/sprites\";\nimport { RenderingProp } from \"@andreadev/canvas-lib/dist/main\";\nimport { loadTemplate, setState } from \"../utils\";\nimport { galaxyViewOptions, systemDetails } from \"./templates/galaxyTemplates\";\n\n\nexport class GalaxyView extends EventTarget implements View {\n\n    shouldRenderNames = true;\n    shouldRenderLinks = true;\n    shouldRenderDots  = true;\n    shouldRenderGalaxies = true;\n    shouldRenderWormholeLinks = true;\n    shouldRenderHiddenWormholes = false;\n    currentlySelected: System | null = null;\n    systemLinksCache: Set<string> = new Set();\n    savedZoom: number = 1;\n    savedPosition = {x: 0, y: 0};\n\n    constructor(private esData: ParsedData, private spriteList: SpriteList, private canvasLib: CanvasLib) { \n        super();\n\n        this.esData = esData;\n        this.canvasLib.canvas.addEventListener('pointerdown', this.onCanvasClick.bind(this));\n\n        this.createAndBindUI();\n    }\n\n    createAndBindUI() {\n        loadTemplate(galaxyViewOptions, '.left-bar .middle');\n        loadTemplate(systemDetails, '.right-bar .middle');\n\n        document.getElementById('toggle-galaxies')?.addEventListener('change', this.toggleGalaxies.bind(this))\n        document.getElementById('toggle-pins')?.addEventListener('change', this.toggleDots.bind(this))\n        document.getElementById('toggle-names')?.addEventListener('change', this.toggleNames.bind(this))\n        document.getElementById('toggle-links')?.addEventListener('change', this.toggleLinks.bind(this))\n        document.getElementById('toggle-wormholes')?.addEventListener('change', this.toggleWormholes.bind(this))\n        document.getElementById('toggle-hidden-wormholes')?.addEventListener('change', this.toggleHiddenWormholes.bind(this))\n    }\n\n    async activate(lib: CanvasLib) {\n\n        this.buildSystemLinksCache();\n\n        await this.preloadGalaxySprites();\n\n        lib.addLayer('galaxies', 0);\n        lib.addLayer('links', 1);\n        lib.addLayer('wormhole-links', 2);\n        lib.addLayer('systems', 3);\n\n        lib.on('galaxies', this.renderGalaxies.bind(this));\n        lib.on('links', this.renderLinks.bind(this));\n        lib.on('wormhole-links', this.renderWormholeLinks.bind(this));\n        lib.on('systems', this.renderSystems.bind(this));\n\n        // Reset lib zoom and position as when the view was left\n        let panZoomPlug = lib.getPlugin(PanZoomPlugin)!;\n        panZoomPlug.currentZoom = this.savedZoom;\n        panZoomPlug.cameraOffset = this.savedPosition;\n    }\n\n    async deactivate(lib: CanvasLib) {\n        lib.removeLayer('galaxies');\n        lib.removeLayer('links');\n        lib.removeLayer('wormhole-links');\n        lib.removeLayer('systems');\n\n        let panZoomPlug = lib.getPlugin(PanZoomPlugin)!;\n        this.savedZoom = panZoomPlug.currentZoom;\n        this.savedPosition = panZoomPlug.cameraOffset;\n    }\n\n    toggleNames(e: Event) {\n        this.shouldRenderNames = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleLinks(e: Event) {\n        this.shouldRenderLinks = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleDots(e: Event) {\n        this.shouldRenderDots = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleGalaxies(e: Event) {\n        this.shouldRenderGalaxies = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleWormholes(e: Event) {\n        this.shouldRenderWormholeLinks = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleHiddenWormholes(e: Event) {\n        this.shouldRenderHiddenWormholes = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n\n    onCanvasClick(e: PointerEvent) {\n        if (e.button !== 0) return;\n\n        let panZoomPlugin = this.canvasLib.getPlugin(PanZoomPlugin);\n        if (!panZoomPlugin) return;\n\n        let point = panZoomPlugin.screenToLocalPoint(e.clientX, e.clientY);\n\n        let closest: System | null = null;\n        let closestDistance = 10000; // High number\n        let minimumDistance = 10;\n        let ctx = this.canvasLib.canvas.getContext('2d');\n        if (ctx) {\n            minimumDistance = PanZoomPlugin.fixedNumber(10, ctx);\n        }\n\n        for (let system of this.esData.starSystems.values()) {\n            let d = distanceFromSystem(system, point);\n            if (d > minimumDistance) continue;\n\n            if (!closest || d < closestDistance) {\n                closest = system;\n                closestDistance = d;\n            }\n        }\n\n        if (!closest) {\n            this.removeSelection();\n            return;\n        }\n\n        this.selectSystem(closest);\n    }\n\n    removeSelection() {\n        if (!this.currentlySelected) return;\n\n        this.currentlySelected.isSelected = false;\n        this.currentlySelected = null;\n\n        this.canvasLib.paint();\n    }\n\n    selectSystem(system: System) {\n        this.currentlySelected = system;\n        this.updateStarSystemInfo(system);\n\n        setState({\n            selectedSystem: system.name,\n        });\n        \n        this.canvasLib.paint();\n    }\n\n    updateStarSystemInfo(system: System) {\n        document.querySelector('#system-name .value')!.textContent = system.name;\n        document.querySelector('#system-position .value')!.textContent = `${system.position.x}, ${system.position.y}`;\n        document.querySelector('#system-government .value')!.textContent = system.government;\n        document.querySelector('#system-attributes .value')!.textContent = system.attributes.join(', ');\n    }\n\n    buildSystemLinksCache() {\n        this.systemLinksCache = new Set();\n        for (let system of this.esData.starSystems.values()) {\n            for (let linked of system.links) {\n                let linkTxt = `${system.name}___${linked}`;\n                let reverseLinkTxt = `${linked}___${system.name}`;\n\n                if (this.systemLinksCache.has(reverseLinkTxt)) continue;\n\n                this.systemLinksCache.add(linkTxt);\n            }\n        }\n    }\n\n    async preloadGalaxySprites() {\n        for (let galaxy of this.esData.galaxies.values()) {\n            let spriteFile = this.spriteList.sprites.get(galaxy.sprite);\n            if (!spriteFile) continue;\n\n            await this.spriteList.load(galaxy.sprite, spriteFile);\n        }\n    }\n\n    async renderGalaxies({ context }: RenderingProp) {\n        if (!this.esData) return;\n\n        // Draw all galaxies\n        if (this.shouldRenderGalaxies) {\n            for (let galaxy of this.esData.galaxies.values()) {\n                await renderGalaxy(galaxy, this.spriteList, context);\n            }\n        }\n    }\n\n    async renderLinks({ context }: RenderingProp) {\n        if (!this.esData || !this.shouldRenderLinks) return;\n\n        // Draw all links\n        context.lineWidth = PanZoomPlugin.fixedNumber(1, context);\n        context.strokeStyle = 'rgba(255,255,255,0.2)';\n        for (let link of this.systemLinksCache.values()) {\n            let [originName, targetName] = link.split('___');\n\n            let origin = this.esData.starSystems.get(originName);\n            let target = this.esData.starSystems.get(targetName);\n\n            if (!target || !origin)\n                continue;\n\n            context.beginPath();\n            context.moveTo(origin.position.x, origin.position.y);\n\n            context.lineTo(target.position.x, target.position.y);\n            context.stroke();\n        }\n    }\n\n    async renderWormholeLinks({ context }: RenderingProp) {\n        if (!this.esData || !this.shouldRenderWormholeLinks) return;\n\n        // Draw all links\n        context.lineWidth = PanZoomPlugin.fixedNumber(1, context);\n        context.strokeStyle = 'rgba(100,100,255,0.5)';\n        for (let wormhole of this.esData.wormholes.values()) {\n            if (!wormhole.isMappable && !this.shouldRenderHiddenWormholes) continue;\n\n            for (let link of wormhole.links) {\n                let [originName, targetName] = link;\n\n                let origin = this.esData.starSystems.get(originName);\n                let target = this.esData.starSystems.get(targetName);\n\n                if (!target || !origin)\n                    continue;\n\n                context.beginPath();\n                context.moveTo(origin.position.x, origin.position.y);\n\n                context.lineTo(target.position.x, target.position.y);\n                context.stroke();\n            }\n        }\n    }\n\n    async renderSystems({ context }: RenderingProp) {\n        if (!this.esData) return;\n\n        // Draw all systems\n        for (let system of this.esData.starSystems.values()) {\n            if (this.currentlySelected == system)\n                renderSystemSelection(system, context);\n\n            if (this.shouldRenderDots) {\n                renderSystemPin(system, context);\n            }\n\n            if (this.shouldRenderNames) {\n                renderSystemName(system, context);\n            }\n        }\n    }\n}\n","export const galaxyViewOptions = \n`<div class=\"container view-galaxy\">\n    <div class=\"title\">\n        Galaxy View\n    </div>\n    <div class=\"body vertical-stack\">\n        <div class=\"field\">\n            <label>\n                <input id=\"toggle-galaxies\" type=\"checkbox\" checked> Galaxies\n            </label>\n        </div>\n        <div class=\"field\">\n            <label>\n                <input id=\"toggle-pins\" type=\"checkbox\" checked> System pins\n            </label>\n        </div>\n        <div class=\"field\">\n            <label>\n                <input id=\"toggle-names\" type=\"checkbox\" checked> System names\n            </label>\n        </div>\n        <div class=\"field\">\n            <label>\n                <input id=\"toggle-links\" type=\"checkbox\" checked> System links\n            </label>\n        </div>\n        <div class=\"field\">\n            <label>\n                <input id=\"toggle-wormholes\" type=\"checkbox\" checked> System wormholes\n            </label>\n        </div>\n        <div class=\"field\">\n            <label>\n                <input id=\"toggle-hidden-wormholes\" type=\"checkbox\"> Show hidden wormholes\n            </label>\n        </div>\n    </div>\n</div>`;\n\nexport const systemDetails = \n`<div class=\"container view-galaxy\">\n    <div class=\"title\">\n        Star system info\n    </div>\n    <div class=\"body vertical-stack\">\n        <div id=\"system-name\" class=\"field\">Name: <span class=\"value\"></span></div>\n        <div id=\"system-position\" class=\"field\">Position (x, y): <span class=\"value\"></span></div>\n        <div id=\"system-government\" class=\"field\">Government: <span class=\"value\"></span></div>\n        <div id=\"system-attributes\" class=\"field\">Attributes: <span class=\"value\"></span></div>\n    </div>\n</div>`;\n","import { loadImage } from \"../utils\";\n\nexport class SpriteList {\n    sprites: Map<string, File> = new Map();\n    loadedSprites: Map<string, HTMLImageElement> = new Map();\n\n    constructor() {}\n\n    async load(spriteName: string, file: File) {\n        let img = await loadImage(file);\n        this.loadedSprites.set(spriteName, img);\n        return img;\n    }\n}\n\nexport function printSprite(filename: string, image: HTMLImageElement, scale: number, ctx: CanvasRenderingContext2D) {\n    let [name, _] = filename.split('.');\n\n    // additive -> lighter\n    switch (name.at(-1)) {\n        case '+':\n        case '~':\n            ctx.globalCompositeOperation = 'lighter';\n    }\n\n    let printWidth = image.width * scale;\n    let printHeight = image.height * scale;\n\n    ctx.drawImage(\n        image,\n        - (printWidth/2),\n        - (printHeight/2),\n        printWidth,\n        printHeight\n    );\n    \n    ctx.globalCompositeOperation = 'source-over';\n}\n","import { SystemObject } from \"es-data-parser\";\nimport { SpriteList, printSprite } from \"./sprites\";\n\nexport async function renderObjectOrbit(object: SystemObject, ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.arc(0, 0, object.distance, 0, 2 * Math.PI);\n    ctx.stroke();\n    \n    let angle = 90;\n    angle += object.offset;\n    angle *= Math.PI / 180;\n\n    ctx.rotate(angle);\n    ctx.translate(0, -object.distance);\n\n    for (let child of object.objects) {\n        await renderObjectOrbit(child, ctx);\n    }\n\n    ctx.translate(0, object.distance);\n    ctx.rotate(-angle);\n}\n\nexport async function renderObject(object: SystemObject, spriteList: SpriteList, ctx: CanvasRenderingContext2D) {\n    // Render the sprite\n    if (object.sprite == null) {\n        return;\n    }\n\n    let spriteImage : HTMLImageElement | undefined = spriteList.loadedSprites.get(object.sprite.name);\n    const spriteFile = spriteList.sprites.get(object.sprite.name);\n\n    if (!spriteFile) {\n        console.error(`Sprite ${object.sprite} not found`);\n        return;\n    }\n\n    // The sprite image isn't loaded\n    if (!spriteImage) {\n        spriteImage = await spriteList.load(object.sprite.name, spriteFile);\n    }\n\n    // Draw the planet/star\n    let angle = 90;\n    angle += object.offset;\n    angle *= Math.PI / 180;\n\n    ctx.save();\n    if (object.distance > 0)\n        ctx.rotate(angle);\n    ctx.translate(0, -object.distance);\n\n    printSprite(\n        spriteFile.name,\n        spriteImage,\n        object.sprite.scale,\n        ctx\n    );\n\n    if (object.distance > 0)\n        ctx.rotate(-angle);\n\n    for (let child of object.objects) {\n        await renderObject(child, spriteList, ctx);\n    }\n\n    ctx.restore();\n}\n","import { ParsedData, System } from \"es-data-parser\";\nimport { View } from \"./abstract\";\nimport { SpriteList } from \"../game-functions/sprites\";\nimport { CanvasLib } from \"@andreadev/canvas-lib\";\nimport { RenderingProp } from \"@andreadev/canvas-lib/dist/main\";\nimport { renderObject, renderObjectOrbit } from \"../game-functions/object\";\nimport { getState, loadTemplate } from \"../utils\";\nimport { systemViewOptions, systemsList } from \"./templates/systemTemplates\";\n\nexport class SystemView extends EventTarget implements View {\n    system: System | null = null;\n    shouldRenderOrbits = true;\n    shouldRenderObjects = true;\n\n    constructor(private esData: ParsedData, private spriteList: SpriteList, private canvasLib: CanvasLib) {\n        super();\n\n        this.esData = esData;\n        this.canvasLib = canvasLib;\n\n        this.createAndBindUI(esData, canvasLib);\n    }\n\n    createAndBindUI(esData: ParsedData, lib: CanvasLib) {\n        loadTemplate(systemViewOptions, '.left-bar .middle');\n        loadTemplate(systemsList, '.top-bar .middle');\n\n        document.getElementById('toggle-orbits')?.addEventListener('change', this.toggleOrbits.bind(this));\n        document.getElementById('toggle-objects')?.addEventListener('change', this.toggleObjects.bind(this));\n\n        // Add all systems to the list\n        let systemSelect = document.getElementById('system-selection')!;\n        for (let systemName of esData.starSystems.keys()) {\n            let opt = document.createElement('option');\n            opt.value = systemName;\n            opt.innerText = systemName;\n            systemSelect.appendChild(opt);\n        }\n\n        systemSelect.addEventListener('change', (e) => {\n            let systemName = (<HTMLSelectElement>e.target).selectedOptions[0]?.value;\n            this.setSystem(systemName);\n            lib.paint();\n        });\n    }\n\n    async setSystem(systemName: string) {\n        if (!this.esData.starSystems.has(systemName)) {\n            throw new Error(\"System name not found\");\n        }\n\n        this.system = this.esData.starSystems.get(systemName)!;\n\n        await this.preloadObjectsSprites();\n    }\n\n    async activate(lib: CanvasLib) {\n        let systemList = <HTMLSelectElement> document.getElementById('system-selection');\n\n        let state = getState();\n        if (state?.selectedSystem) {\n            this.setSystem(state.selectedSystem);\n            systemList.value = state.selectedSystem;\n        }\n\n\n        await this.preloadObjectsSprites();\n\n        lib.addLayer('background', 0);\n        lib.addLayer('boundaries', 1);\n        lib.addLayer('objects', 2);\n\n        lib.on('objects', this.renderOrbits.bind(this));\n        lib.on('objects', this.renderObjects.bind(this));\n    }\n\n    async deactivate(lib: CanvasLib) {\n        lib.removeLayer('background');\n        lib.removeLayer('boundaries');\n        lib.removeLayer('objects');\n    }\n\n    async preloadObjectsSprites() {\n        if (!this.system) return;\n\n        for (let object of this.system.objects.values()) {\n            if (!object.sprite) continue;\n\n            let spriteFile = this.spriteList.sprites.get(object.sprite.name);\n            if (!spriteFile) continue;\n\n            await this.spriteList.load(object.sprite.name, spriteFile);\n        }\n    }\n\n    toggleOrbits(e: Event) {\n        this.shouldRenderOrbits = (<HTMLInputElement>e.target).checked;\n        this.canvasLib.paint();\n    }\n\n    toggleObjects(e: Event) {\n        this.shouldRenderObjects = (<HTMLInputElement>e.target).checked;\n        this.canvasLib.paint();\n    }\n\n    async renderOrbits({ context }: RenderingProp) {\n        if (!this.esData || !this.system) return;\n\n        if (!this.shouldRenderOrbits) return;\n\n        context.strokeStyle = 'blue';\n        for (let object of this.system.objects.values()) {\n            await renderObjectOrbit(object, context);\n        }\n        // reset to default\n        context.strokeStyle = '#000';\n    }\n\n    async renderObjects({ context }: RenderingProp) {\n        if (!this.esData || !this.system) return;\n\n        if (!this.shouldRenderObjects) return;\n\n        for (let object of this.system.objects.values()) {\n            await renderObject(object, this.spriteList, context);\n        }\n    }\n}\n","export const systemViewOptions = \n`<div class=\"container view-system\">\n    <div class=\"title\">\n        System View\n    </div>\n    <div class=\"body vertical-stack\">\n        <div class=\"field\">\n            <label>\n                <input id=\"toggle-orbits\" type=\"checkbox\" checked> Orbits\n            </label>\n        </div>\n        <div class=\"field\">\n            <label>\n                <input id=\"toggle-objects\" type=\"checkbox\" checked> Planets / Stars\n            </label>\n        </div>\n    </div>\n</div>`;\n\nexport const systemsList = \n`<div class=\"container view-system\">\n    <div class=\"body\">\n        <label>System: \n            <select id=\"system-selection\"><option value=\"-\">---</option></select>\n        </label>\n    </div>\n</div>`;\n","import { CanvasLib } from \"@andreadev/canvas-lib\";\nimport { PanZoomPlugin } from \"@andreadev/canvas-lib/dist/modules/pan-zoom-plugin\";\nimport { View } from \"./views/abstract\";\nimport { GalaxyView } from \"./views/galaxy\";\nimport { SystemView } from \"./views/system\";\nimport { ParsedData } from \"es-data-parser\";\nimport { SpriteList } from \"./game-functions/sprites\";\n\nconst views: Record<string, View | null>= {\n    galaxy: null,\n    system: null,\n};\nlet currentView: View | null = null;\n\nexport function initCanvasLib(canvas: HTMLCanvasElement) {\n    // Fix canvas dimensions\n    let canvasBCR = canvas.getBoundingClientRect();\n    canvas.width = canvasBCR.width;\n    canvas.height = canvasBCR.height;\n\n    const canvasLib = new CanvasLib(canvas);\n    canvasLib.use(PanZoomPlugin, {});\n\n    return canvasLib;\n}\n\nexport async function setCurrentView(lib: CanvasLib, viewName: string) {\n    if (!(viewName in views)) {\n        throw new Error(`'${viewName}' is not a valid view.`);\n    }\n\n    for (let name of Object.keys(views)) {\n        document.body.classList.remove(`active-${name}`);\n    }\n    document.body.classList.add(`active-${viewName}`);\n\n    let view = views[viewName]!;\n\n    // Deactivate the previous view\n    await currentView?.deactivate(lib);\n\n    // Reset zoom and panning\n    let panZoomPlug = lib.getPlugin(PanZoomPlugin)!;\n    panZoomPlug.currentZoom = 1;\n    panZoomPlug.cameraOffset = {x: 0, y: 0};\n\n    // Set the new view\n    currentView = view;\n    await currentView.activate(lib);\n\n    await lib.paint();\n}\n\nexport async function filesLoaded(lib: CanvasLib, sprites: SpriteList, data: ParsedData) {\n    views.system = views.system ?? new SystemView(data, sprites, lib);\n    views.galaxy = views.galaxy ?? new GalaxyView(data, sprites, lib);\n\n    await setCurrentView(lib, 'galaxy');\n\n    await lib.paint();\n}\n","import { parseFiles } from 'es-data-parser';\nimport { filesLoaded, initCanvasLib } from './scripts/setupCanvasLib';\nimport { openDirectory } from './scripts/utils';\nimport { CanvasLib } from '@andreadev/canvas-lib';\nimport { bindUI } from './scripts/ui';\nimport { SpriteList } from './scripts/game-functions/sprites';\n\nlet lib: CanvasLib | null = null;\n\nasync function initApp() {\n    const filesInfo = await openDirectory();\n\n    const dataFiles = filesInfo.filter(file => file.webkitRelativePath.match(/^([^\\/]*\\/)?data\\//) != null);\n\n    const data = await parseFiles(dataFiles);\n    const sprites = extractSprites(filesInfo);\n\n    let canvas = document.getElementById('viewer') as HTMLCanvasElement;\n\n    lib = initCanvasLib(canvas);\n    \n    filesLoaded(lib, sprites, data);\n\n    bindUI(lib, data);\n};\n\nfunction extractSprites(files: File[]) {\n    const spriteList = new SpriteList();\n    for (let file of files) {\n        if (file.webkitRelativePath.includes('images/')) {\n            let spriteName = file.webkitRelativePath.split('images/')[1];\n            spriteName = spriteName.replace(/([+\\-~])?\\.\\w+$/, '');\n            spriteList.sprites.set(spriteName, file);\n        }\n    }\n    return spriteList;\n}\n\n// Bind open project button\ndocument.getElementById('select-file')?.addEventListener('click', () => {\n    initApp();\n});\n","import { CanvasLib } from \"@andreadev/canvas-lib\";\nimport { PanZoomPlugin } from \"@andreadev/canvas-lib/dist/modules/pan-zoom-plugin\";\nimport { ParsedData } from \"es-data-parser\";\nimport { setCurrentView } from \"./setupCanvasLib\";\n\nexport function bindUI(lib: CanvasLib, data: ParsedData) {\n    // Setup event listeners for the UI\n    document.getElementById('zoom-in')?.addEventListener('click', () => {\n        const panZoomPlugin = lib.getPlugin(PanZoomPlugin);\n\n        if (!panZoomPlugin) return;\n\n        panZoomPlugin.zoom(0.2);\n    });\n\n    document.getElementById('zoom-out')?.addEventListener('click', () => {\n        const panZoomPlugin = lib.getPlugin(PanZoomPlugin);\n\n        if (!panZoomPlugin) return;\n\n        panZoomPlugin.zoom(-0.2);\n    });\n\n    document.getElementById('galaxy-tab')?.addEventListener('click', () => {\n        setCurrentView(lib, 'galaxy');\n    });\n\n    document.getElementById('system-tab')?.addEventListener('click', () => {\n        setCurrentView(lib, 'system');\n    });\n}\n"],"names":["$99bfa59d38df383e$export$aa361464e3df6895","constructor","this","galaxies","Map","starSystems","colors","governments","planets","wormholes","phrases","starAttributes","minables","addGalaxy","galaxy","set","name","addStarSystem","starSystem","addColor","color","addGovernment","gov","addPlanet","planet","addWormhole","wormhole","addPhrase","phrase","has","get","push","addStarAttribute","star","addMinable","minable","$337ce6bb1758e6c4$export$17d680238e50603e","tokens","indentation","children","toString","tokensText","text","token","includes","$337ce6bb1758e6c4$export$bd97b5a17cbaafd5","filename","super","isRoot","$ef95d5cd1d9b2c46$export$19b172c586f937c9","data","root","isQuoteOpen","isComment","currentQuote","currentLine","currentToken","parentLevels","i","length","c","nextLine","Error","join","slice","$7c17fe23b29ab67c$export$3075603db8e6204c","scale","static","dataLine","sprite","parseFloat","$42081142e05f9fad$export$60567d376fdb67d","esData","distance","period","offset","objects","systemObject","child","fromLine","parseInt","$d7000da56fc36485$export$b14f3b3295ec384f","link","jump","$c374312e443832e2$export$9150a07a26b3ea04","universal","addend","multiplier","ramscoop","$ac8d86e8dcc0cd23$export$e1dae5660003ffa7","pos","links","government","attributes","inaccessible","hidden","shrouded","music","arrival","departure","habitable","belt","weight","invisibleFence","jumpRange","haze","asteroids","trades","fleets","raids","noRaid","hazards","starfieldDensity","isSelected","position","system","x","y","foundPos","count","energy","commodity","cost","fleet","minAttraction","maxAttraction","$44da9c5917743933$export$6509ed3b9b17fe1b","$e94deb5aa1153640$export$892596cec99bc70e","r","g","b","a","_","label","fromPercentages","govName","$760006205ac68494$export$fb8111228a5af09a","$3c0ccd2c909c51b8$export$965755fbf184a8fc","$e47b6753f85a69af$export$645f900b05e343d7","isMappable","mappable","$02f9d3b91a7b3c74$export$1ee6d718c47c2db0","texts","_a","wordObj","$0a96984b111d2343$export$2de05273c39f87d0","pieces","replacements","phrasesNamesFromLine","replacementsFromLine","names","map","line","$fa145b65c5f0df02$export$1644ba17714857f1","power","wind","$82a4baa0881ac478$export$316687c62122cd34","outfit","maxDrops","dropRate","toughness","payload","$6581698b23e839c9$export$198a2c826e7521d1","displayName","noun","hull","randomHull","payloads","explosions","effect","$bb6b0f859218c7ce$export$98e6a39c04603d36","previousData","parsedData","unparsed","Set","add","$bac36dab1317959b$export$72c04af63de9061a","file","Promise","resolve","reader","FileReader","onload","result","readAsText","async","$63c474847aee9276$export$f1c553d4f1a2351","$63c474847aee9276$export$e57ba765b62dbdcf","files","webkitRelativePath","$d4b14e8110a203a1$export$493b9b82400bc18","listeners","addListener","event","listener","removeListener","index","findIndex","splice","clearListeners","clearAllListeners","clear","details","val","promises","ret","all","fireEventSync","$0f55f752fe3cfaec$export$17e8e0f5ce5db525","canvas","plugins","layers","layersActions","ctx","getContext","context","paint","window","requestAnimationFrame","renderCycle","use","PluginClass","settings","plugin","getPlugin","values","shouldClear","prepareContext","prop","fireEvent","layer","resetTransform","clearRect","width","height","translate","Math","floor","addLayer","order","sort","removeLayer","l","on","callback","remove","startRendering","$cd2915ddbfd8b047$export$de363e709c412c8a","func","wait","timeout","isThrottled","args","arguments","apply","clearTimeout","setTimeout","$f7e9087d61420905$export$4d5de249200f86f7","app","_b","_c","currentZoom","minZoom","maxZoom","panButton","cameraOffset","isPanning","startedPanningOffset","startedPanningPosition","throttle","bindEvents","throttledPaint","bind","left","middle","right","any","transformCanvas","addEventListener","onPointerDown","onPointerUp","onPointerMove","onScroll","screenToLocalPoint","hw","hh","tx","ty","z","zoom","amount","min","max","updateRender","e","button","clientX","clientY","deltaY","matrix","scaleX","scaleY","d","translateX","translateY","f","skewX","skewY","number","direction","getDataFromMatrix","getTransform","$26e7e2369f1a689b$var$pinSize","$26e7e2369f1a689b$var$pinLineWidth","$26e7e2369f1a689b$var$tagNameOffset","$26e7e2369f1a689b$var$tagNameColor","$26e7e2369f1a689b$var$tagNameFontSize","$26e7e2369f1a689b$export$cde84772a8df2b55","sqrt","pow","$26e7e2369f1a689b$export$f47381ba8d3300b4","beginPath","fillStyle","strokeStyle","lineWidth","fixedNumber","ellipse","PI","fill","stroke","$26e7e2369f1a689b$export$27a31ba080489ba7","fromGovernment","fixedSize","$26e7e2369f1a689b$export$686ee88157844317","fontSize","font","fillText","$6c4e838e46d8f176$export$a5180499ba1db227","spriteList","spriteImage","loadedSprites","spriteFile","sprites","console","error","load","drawImage","$b25678c505cad7eb$export$942f0b26f9f32b84","input","document","createElement","type","webkitdirectory","Array","from","HTMLInputElement","prototype","showPicker","click","$b25678c505cad7eb$export$fe58198efe02b173","reject","img","Image","onerror","src","URL","createObjectURL","$b25678c505cad7eb$export$b90a5f136230fd4b","template","parentSelector","parent","querySelector","templateEl","innerHTML","node","content","firstChild","cloneNode","appendChild","$70d5af9933590103$export$bbb64adae9205aa7","EventTarget","canvasLib","shouldRenderNames","shouldRenderLinks","shouldRenderDots","shouldRenderGalaxies","shouldRenderWormholeLinks","shouldRenderHiddenWormholes","currentlySelected","systemLinksCache","savedZoom","savedPosition","onCanvasClick","createAndBindUI","getElementById","toggleGalaxies","toggleDots","toggleNames","toggleLinks","toggleWormholes","toggleHiddenWormholes","lib","buildSystemLinksCache","preloadGalaxySprites","renderGalaxies","renderLinks","renderWormholeLinks","renderSystems","panZoomPlug","target","checked","panZoomPlugin","point","closest","closestDistance","minimumDistance","selectSystem","removeSelection","state","updateStarSystemInfo","selectedSystem","history","pushState","textContent","linked","linkTxt","reverseLinkTxt","originName","targetName","split","origin","moveTo","lineTo","$90284e86e303b8f3$export$9f3b7a07f9b7bd8d","spriteName","$90284e86e303b8f3$export$f148262f49615347","image","at","globalCompositeOperation","printWidth","printHeight","$b5fb312fe2285bbc$export$906b2951ef09afc1","object","arc","angle","rotate","$b5fb312fe2285bbc$export$63d1ee4825773ed4","save","restore","$61295e1e1068147c$export$c0ce323ef3bb4cb4","shouldRenderOrbits","shouldRenderObjects","toggleOrbits","toggleObjects","systemSelect","systemName","keys","opt","value","innerText","selectedOptions","setSystem","preloadObjectsSprites","systemList","renderOrbits","renderObjects","$a5bb27ff3d01271c$var$views","$a5bb27ff3d01271c$var$currentView","$a5bb27ff3d01271c$export$78cda6c44323997e","canvasBCR","getBoundingClientRect","$a5bb27ff3d01271c$export$f090a900c52a5279","viewName","Object","body","classList","view","deactivate","activate","$a5bb27ff3d01271c$export$c64188370d7959c6","$ad2bcec7a0192558$var$lib","$ad2bcec7a0192558$var$initApp","filesInfo","dataFiles","filter","match","replace","$ad2bcec7a0192558$var$extractSprites"],"version":3,"file":"index.71c8ad61.js.map"}