{"mappings":"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","sources":["node_modules/es-data-parser/dist/index.js","node_modules/es-data-parser/dist/main.js","node_modules/es-data-parser/dist/es-objects/ParsedData.js","node_modules/es-data-parser/dist/lexer.js","node_modules/es-data-parser/dist/structures.js","node_modules/es-data-parser/dist/parser.js","node_modules/es-data-parser/dist/es-objects/System.js","node_modules/es-data-parser/dist/es-objects/SystemObject.js","node_modules/es-data-parser/dist/es-objects/Galaxy.js","node_modules/es-data-parser/dist/es-objects/Color.js","node_modules/es-data-parser/dist/es-objects/Government.js","node_modules/es-data-parser/dist/es-objects/Planet.js","node_modules/es-data-parser/dist/es-objects/Wormhole.js","node_modules/es-data-parser/dist/utils.js","node_modules/@andreadev/custom-event-target/dist/CustomEventTarget.js","node_modules/@andreadev/canvas-lib/dist/main.js","node_modules/@andreadev/canvas-lib/dist/utils.js","node_modules/@andreadev/canvas-lib/dist/modules/pan-zoom-plugin.js","src/scripts/game-functions/system.ts","src/scripts/game-functions/galaxy.ts","src/scripts/views/galaxy.ts","src/scripts/setupCanvasLib.ts","src/scripts/utils.ts","src/scripts/game-functions/sprites.ts","src/main.ts","src/scripts/ui.ts"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Wormhole = exports.SystemObject = exports.System = exports.Planet = exports.ParsedData = exports.Government = exports.Galaxy = exports.Color = exports.parseFiles = exports.parseFile = void 0;\nvar main_1 = require(\"./main\");\nObject.defineProperty(exports, \"parseFile\", { enumerable: true, get: function () { return main_1.parseFile; } });\nObject.defineProperty(exports, \"parseFiles\", { enumerable: true, get: function () { return main_1.parseFiles; } });\nvar Color_1 = require(\"./es-objects/Color\");\nObject.defineProperty(exports, \"Color\", { enumerable: true, get: function () { return Color_1.Color; } });\nvar Galaxy_1 = require(\"./es-objects/Galaxy\");\nObject.defineProperty(exports, \"Galaxy\", { enumerable: true, get: function () { return Galaxy_1.Galaxy; } });\nvar Government_1 = require(\"./es-objects/Government\");\nObject.defineProperty(exports, \"Government\", { enumerable: true, get: function () { return Government_1.Government; } });\nvar ParsedData_1 = require(\"./es-objects/ParsedData\");\nObject.defineProperty(exports, \"ParsedData\", { enumerable: true, get: function () { return ParsedData_1.ParsedData; } });\nvar Planet_1 = require(\"./es-objects/Planet\");\nObject.defineProperty(exports, \"Planet\", { enumerable: true, get: function () { return Planet_1.Planet; } });\nvar System_1 = require(\"./es-objects/System\");\nObject.defineProperty(exports, \"System\", { enumerable: true, get: function () { return System_1.System; } });\nvar SystemObject_1 = require(\"./es-objects/SystemObject\");\nObject.defineProperty(exports, \"SystemObject\", { enumerable: true, get: function () { return SystemObject_1.SystemObject; } });\nvar Wormhole_1 = require(\"./es-objects/Wormhole\");\nObject.defineProperty(exports, \"Wormhole\", { enumerable: true, get: function () { return Wormhole_1.Wormhole; } });\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parseFiles = exports.parseFile = void 0;\n// import { parse } from \"./parser\";\nconst ParsedData_1 = require(\"./es-objects/ParsedData\");\nconst lexer_1 = require(\"./lexer\");\nconst parser_1 = require(\"./parser\");\nconst utils_1 = require(\"./utils\");\nasync function parseFile(file, filename, previousData) {\n    const parsedData = previousData !== null && previousData !== void 0 ? previousData : new ParsedData_1.ParsedData();\n    let fileContent = await (0, utils_1.readFile)(file);\n    let data = (0, lexer_1.lex)(fileContent, filename);\n    (0, parser_1.parse)(data, parsedData);\n    return parsedData;\n}\nexports.parseFile = parseFile;\nasync function parseFiles(files) {\n    const parsedData = new ParsedData_1.ParsedData();\n    for (let file of files) {\n        await parseFile(file, file.webkitRelativePath, parsedData);\n    }\n    return parsedData;\n}\nexports.parseFiles = parseFiles;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParsedData = void 0;\nclass ParsedData {\n    constructor() {\n        this.galaxies = new Map();\n        this.starSystems = new Map();\n        this.colors = new Map();\n        this.governments = new Map();\n        this.planets = new Map();\n        this.wormholes = new Map();\n    }\n    addGalaxy(galaxy) {\n        this.galaxies.set(galaxy.name, galaxy);\n    }\n    addStarSystem(starSystem) {\n        this.starSystems.set(starSystem.name, starSystem);\n    }\n    addColor(color) {\n        this.colors.set(color.name, color);\n    }\n    addGovernment(gov) {\n        this.governments.set(gov.name, gov);\n    }\n    addPlanet(planet) {\n        this.planets.set(planet.name, planet);\n    }\n    addWormhole(wormhole) {\n        this.wormholes.set(wormhole.name, wormhole);\n    }\n}\nexports.ParsedData = ParsedData;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.lex = void 0;\nconst structures_1 = require(\"./structures\");\nfunction lex(data, filename = \"\") {\n    const root = new structures_1.FileRoot([], 0, filename);\n    let isQuoteOpen = false;\n    let isComment = false;\n    let currentQuote = \"\";\n    let currentLine = new structures_1.Line([], 0);\n    let currentToken = \"\";\n    let parentLevels = [root];\n    for (let i = 0; i < data.length; i++) {\n        const c = data[i];\n        let nextLine = null;\n        if (isComment && c != '\\n')\n            continue;\n        switch (c) {\n            // handle comments\n            case '#':\n                if (currentToken.length == 0 && !isQuoteOpen) {\n                    isComment = true;\n                }\n                break;\n            // handle quotes\n            case '\"':\n            case '`':\n                if (isQuoteOpen && c == currentQuote) {\n                    isQuoteOpen = false;\n                    if (currentToken.length == 0) {\n                        currentLine.tokens.push('');\n                    }\n                    break;\n                }\n                if (!isQuoteOpen && currentToken.length == 0) {\n                    isQuoteOpen = true;\n                    currentQuote = c;\n                    break;\n                }\n                if (!isQuoteOpen) {\n                    throw new Error(`Unescaped quote in string after ${currentToken}`);\n                }\n                break;\n            // handle newlines\n            case '\\n':\n                if (currentToken != '' && !isComment) {\n                    currentLine.tokens.push(currentToken);\n                }\n                currentToken = '';\n                isComment = false;\n                nextLine = new structures_1.Line([], 0);\n                // ignore blank lines\n                if (currentLine.tokens.length == 0) {\n                    currentLine = nextLine;\n                    continue;\n                }\n                // handle too much indentation\n                if (currentLine.indentation > parentLevels.length - 1) {\n                    throw new Error(`Unexpected indentation for line ${currentLine.tokens.join(' ')}`);\n                }\n                // adding the line as children to its parent based on indentation\n                if (currentLine.indentation >= 0) {\n                    parentLevels[currentLine.indentation].children.push(currentLine);\n                }\n                // adding new line as parent level for following data\n                if (currentLine.indentation == parentLevels.length - 1) {\n                    parentLevels.push(currentLine);\n                }\n                else {\n                    // if indentation is smaller then the number of parents, it means that\n                    // previous deeper nested parents has ended their block, so we delete them\n                    parentLevels = parentLevels.slice(0, currentLine.indentation + 1);\n                    parentLevels.push(currentLine);\n                }\n                if (isQuoteOpen) {\n                    throw new Error(`A quote was left open near: '${currentToken}'`);\n                }\n                currentLine = nextLine;\n                break;\n            // handle spaces\n            case ' ':\n                if (!isQuoteOpen) {\n                    if (currentToken.length > 0) {\n                        currentLine.tokens.push(currentToken);\n                        currentToken = \"\";\n                    }\n                }\n                else {\n                    currentToken += \" \";\n                }\n                break;\n            // handle tabs\n            case '\\t':\n                if (!isQuoteOpen &&\n                    currentLine.tokens.length == 0 &&\n                    currentToken.length == 0) {\n                    currentLine.indentation++;\n                }\n                else if (!isQuoteOpen && currentToken.length > 0) {\n                    // Add tabs as token separators too to avoid the error in some official files\n                    currentLine.tokens.push(currentToken);\n                    currentToken = \"\";\n                }\n                else {\n                    currentToken += \"\\t\";\n                }\n                break;\n            // handle other characters\n            default:\n                currentToken += c;\n        }\n    }\n    return root;\n}\nexports.lex = lex;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.FileRoot = exports.Line = void 0;\nclass Line {\n    constructor(tokens, indentation) {\n        this.tokens = tokens;\n        this.indentation = indentation;\n        this.children = [];\n    }\n    toString() {\n        const tokensText = [...this.tokens];\n        let text = \"\";\n        for (const token of tokensText) {\n            if (token.includes(' ')) {\n                if (token.includes('\"')) {\n                    text += \"`\" + token + \"`\";\n                }\n                else {\n                    text += `\"${token}\"`;\n                }\n            }\n            else {\n                text += token + \" \";\n            }\n        }\n        return text;\n    }\n}\nexports.Line = Line;\nclass FileRoot extends Line {\n    constructor(tokens, indentation, filename) {\n        super(tokens, indentation);\n        this.tokens = tokens;\n        this.indentation = indentation;\n        this.isRoot = true;\n        this.filename = filename;\n    }\n}\nexports.FileRoot = FileRoot;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = void 0;\nconst ParsedData_1 = require(\"./es-objects/ParsedData\");\nconst System_1 = require(\"./es-objects/System\");\nconst Galaxy_1 = require(\"./es-objects/Galaxy\");\nconst Color_1 = require(\"./es-objects/Color\");\nconst Government_1 = require(\"./es-objects/Government\");\nconst Planet_1 = require(\"./es-objects/Planet\");\nconst Wormhole_1 = require(\"./es-objects/Wormhole\");\nfunction parse(root, previousData = null) {\n    const parsedData = previousData !== null && previousData !== void 0 ? previousData : new ParsedData_1.ParsedData();\n    for (let child of root.children) {\n        if (child.tokens[0] == 'system') {\n            parsedData.addStarSystem(System_1.System.fromLine(parsedData, child));\n        }\n        else if (child.tokens[0] == 'galaxy') {\n            parsedData.addGalaxy(Galaxy_1.Galaxy.fromLine(parsedData, child));\n        }\n        else if (child.tokens[0] == 'color') {\n            parsedData.addColor(Color_1.Color.fromLine(parsedData, child));\n        }\n        else if (child.tokens[0] == 'government') {\n            parsedData.addGovernment(Government_1.Government.fromLine(parsedData, child));\n        }\n        else if (child.tokens[0] == 'planet') {\n            parsedData.addPlanet(Planet_1.Planet.fromLine(parsedData, child));\n        }\n        else if (child.tokens[0] == 'wormhole') {\n            parsedData.addWormhole(Wormhole_1.Wormhole.fromLine(parsedData, child));\n        }\n    }\n    return parsedData;\n}\nexports.parse = parse;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.System = void 0;\nconst SystemObject_1 = require(\"./SystemObject\");\nclass System {\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'system') {\n            throw new Error(\"Not a system\");\n        }\n        const name = dataLine.tokens[1];\n        let pos = { x: 0, y: 0 };\n        let foundPos = false;\n        let links = [];\n        let government = \"\";\n        let attributes = [];\n        const objects = [];\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                // Extract the position\n                case 'pos':\n                    pos = {\n                        x: parseInt(child.tokens[1]),\n                        y: parseInt(child.tokens[2])\n                    };\n                    foundPos = true;\n                    break;\n                // Extract the links\n                case 'link':\n                    links.push(child.tokens[1]);\n                    break;\n                // Set the system government\n                case 'government':\n                    government = child.tokens[1];\n                    break;\n                // Save a list of attributes\n                case 'attributes':\n                    attributes = child.tokens.slice(1);\n                    break;\n                // Parse the objects in the system\n                case 'object':\n                    objects.push(SystemObject_1.SystemObject.fromLine(data, child));\n            }\n        }\n        if (!foundPos) {\n            throw new Error(\"No position found for this system\");\n        }\n        const system = new System(data, name, pos);\n        system.links = links;\n        system.government = government;\n        system.attributes = attributes;\n        system.objects = objects;\n        return system;\n    }\n    constructor(data, name, pos) {\n        this.links = [];\n        this.government = \"\";\n        this.attributes = [];\n        this.objects = [];\n        this.isSelected = false;\n        this.name = name;\n        this.position = pos;\n        this.esData = data;\n    }\n}\nexports.System = System;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SystemObject = void 0;\nclass SystemObject {\n    constructor(esData, distance, period, offset = 0) {\n        this.esData = esData;\n        this.name = \"\";\n        this.sprite = \"\";\n        this.offset = 0;\n        this.objects = [];\n        this.distance = distance;\n        this.period = period;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'object') {\n            throw new Error(\"Not an object\");\n        }\n        const name = (dataLine.tokens.length == 2) ? dataLine.tokens[1] : \"\";\n        let sprite = \"\";\n        let distance = 0;\n        let period = 0;\n        let offset = 0;\n        const objects = [];\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                case 'sprite':\n                    sprite = child.tokens[1];\n                    break;\n                case 'distance':\n                    distance = parseFloat(child.tokens[1]);\n                    break;\n                case 'period':\n                    period = parseFloat(child.tokens[1]);\n                    break;\n                case 'offset':\n                    offset = parseFloat(child.tokens[1]);\n                    break;\n                case 'object':\n                    objects.push(SystemObject.fromLine(data, child));\n            }\n        }\n        const systemObject = new SystemObject(data, distance, period, offset);\n        systemObject.name = name;\n        systemObject.objects = objects;\n        systemObject.sprite = sprite;\n        return systemObject;\n    }\n}\nexports.SystemObject = SystemObject;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Galaxy = void 0;\nclass Galaxy {\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'galaxy') {\n            throw new Error(\"Not a galaxy\");\n        }\n        const name = dataLine.tokens[1];\n        let pos = { x: 0, y: 0 };\n        let foundPos = false;\n        let sprite = \"\";\n        for (let child of dataLine.children) {\n            if (child.tokens[0] == 'pos') {\n                pos = {\n                    x: parseInt(child.tokens[1]),\n                    y: parseInt(child.tokens[2])\n                };\n                foundPos = true;\n                continue;\n            }\n            if (child.tokens[0] == 'sprite') {\n                sprite = child.tokens[1];\n            }\n        }\n        if (!foundPos) {\n            throw new Error(\"No position found for this system\");\n        }\n        const galaxy = new Galaxy(data, name, pos);\n        galaxy.sprite = sprite;\n        return galaxy;\n    }\n    constructor(data, name, pos) {\n        this.position = { x: 0, y: 0 };\n        this.sprite = \"\";\n        this.name = name;\n        this.position = pos;\n        this.esData = data;\n    }\n}\nexports.Galaxy = Galaxy;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Color = void 0;\nclass Color {\n    constructor(name, r, g, b, a = 255) {\n        this.name = name;\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    toString() {\n        if (this.a == 255) {\n            return `rgb(${this.r}, ${this.g}, ${this.b})`;\n        }\n        return `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`;\n    }\n    // The first argument is important to allow standardization across the different game objects\n    static fromLine(_, dataLine) {\n        let label = dataLine.tokens[1];\n        let r = parseFloat(dataLine.tokens[2]);\n        let g = parseFloat(dataLine.tokens[3]);\n        let b = parseFloat(dataLine.tokens[4]);\n        let a = 255;\n        if (dataLine.tokens.length == 6) {\n            a = parseFloat(dataLine.tokens[5]);\n        }\n        return Color.fromPercentages(label, r, g, b, a);\n    }\n    static fromPercentages(label, r, g, b, a) {\n        return new Color(label, r * 255, g * 255, b * 255, a * 255);\n    }\n    static fromGovernment(data, govName) {\n        let government = data.governments.get(govName);\n        if (!government) {\n            return null;\n        }\n        if (government.color instanceof Color) {\n            return government.color;\n        }\n        let color = data.colors.get(government.color);\n        if (!color) {\n            return null;\n        }\n        return color;\n    }\n}\nexports.Color = Color;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Government = void 0;\nconst Color_1 = require(\"./Color\");\nclass Government {\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'government') {\n            throw new Error(\"Not a government\");\n        }\n        const name = dataLine.tokens[1];\n        let color = \"\";\n        for (let child of dataLine.children) {\n            if (child.tokens[0] == 'color') {\n                if (child.tokens.length == 2) {\n                    color = child.tokens[1];\n                }\n                else {\n                    let r = parseFloat(dataLine.tokens[1]);\n                    let g = parseFloat(dataLine.tokens[2]);\n                    let b = parseFloat(dataLine.tokens[3]);\n                    let a = 255;\n                    if (dataLine.tokens.length == 5) {\n                        a = parseFloat(dataLine.tokens[4]);\n                    }\n                    color = Color_1.Color.fromPercentages('', r, g, b, a);\n                }\n            }\n        }\n        const government = new Government(data, name);\n        government.color = color;\n        return government;\n    }\n    constructor(data, name) {\n        this.color = \"\";\n        this.esData = data;\n        this.name = name;\n    }\n}\nexports.Government = Government;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Planet = void 0;\nclass Planet {\n    constructor(esData, name) {\n        this.esData = esData;\n        this.name = name;\n        this.wormhole = \"\";\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'planet') {\n            throw new Error(\"Not a planet\");\n        }\n        const name = dataLine.tokens[1];\n        let wormhole = \"\";\n        for (let child of dataLine.children) {\n            if (child.tokens[0] == 'wormhole') {\n                wormhole = child.tokens[1];\n            }\n        }\n        let planet = new Planet(data, name);\n        planet.wormhole = wormhole;\n        return planet;\n    }\n}\nexports.Planet = Planet;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Wormhole = void 0;\nconst Color_1 = require(\"./Color\");\nclass Wormhole {\n    constructor(esData, name) {\n        this.esData = esData;\n        this.name = name;\n        this.isMappable = false;\n        this.links = [];\n        this.color = \"\";\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'wormhole') {\n            throw new Error(\"Not a wormhole\");\n        }\n        const name = dataLine.tokens[1];\n        let mappable = false;\n        let color = \"\";\n        let links = [];\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                case 'color':\n                    if (child.tokens.length == 2) {\n                        color = child.tokens[1];\n                    }\n                    else {\n                        let r = parseFloat(dataLine.tokens[1]);\n                        let g = parseFloat(dataLine.tokens[2]);\n                        let b = parseFloat(dataLine.tokens[3]);\n                        let a = 255;\n                        if (dataLine.tokens.length == 5) {\n                            a = parseFloat(dataLine.tokens[4]);\n                        }\n                        color = Color_1.Color.fromPercentages('', r, g, b, a);\n                    }\n                    break;\n                case 'link':\n                    links.push([child.tokens[1], child.tokens[2]]);\n                    break;\n                case 'mappable':\n                    mappable = true;\n                    break;\n            }\n        }\n        const wormhole = new Wormhole(data, name);\n        wormhole.isMappable = mappable;\n        wormhole.color = color;\n        wormhole.links = links;\n        return wormhole;\n    }\n}\nexports.Wormhole = Wormhole;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.readFile = void 0;\nfunction readFile(file) {\n    return new Promise((resolve, _) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            resolve(reader.result);\n        };\n        reader.readAsText(file);\n    });\n}\nexports.readFile = readFile;\n","export class CustomEventTarget {\n    listeners;\n    constructor() {\n        this.listeners = new Map();\n    }\n    addListener(event, listener) {\n        if (!this.listeners.has(event)) {\n            this.listeners.set(event, []);\n        }\n        this.listeners.get(event).push(listener);\n    }\n    removeListener(event, listener) {\n        if (!this.listeners.has(event))\n            return;\n        let listeners = this.listeners.get(event);\n        let index = listeners.findIndex((x) => x === listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n        this.listeners.set(event, listeners);\n    }\n    /**\n     * Call all the listeners for a specific event in a synchronous way.\n     * If an async listener is found, it gets awaited before continuing.\n     */\n    async fireEvent(event, details) {\n        if (!this.listeners.has(event))\n            return;\n        for (let listener of this.listeners.get(event)) {\n            let val = listener(details);\n            if (val instanceof Promise) {\n                await val;\n            }\n        }\n    }\n    /**\n     * Call all the listeners for a specific event in an asynchronous way.\n     * All the async listeners found are awaited using Promise.all().\n     */\n    async fireEventAsync(event, details) {\n        if (!this.listeners.has(event))\n            return;\n        let promises = [];\n        for (let listener of this.listeners.get(event)) {\n            let ret = listener(details);\n            if (ret instanceof Promise) {\n                promises.push(ret);\n            }\n        }\n        await Promise.all(promises);\n    }\n    /**\n     * Call all the listeners for a specific event as if they were all\n     * synchronous functions. Not recommended, since it doesn't handle\n     * async at all. Only use it when all listeners are synchronous.\n     */\n    fireEventSync(event, details) {\n        if (!this.listeners.has(event))\n            return;\n        for (let listener of this.listeners.get(event)) {\n            listener(details);\n        }\n    }\n}\n","import { CustomEventTarget } from \"@andreadev/custom-event-target\";\nexport class CanvasLib extends CustomEventTarget {\n    constructor(canvas) {\n        super();\n        this.canvas = canvas;\n        this.plugins = new Map();\n        this.layers = [];\n        this.layersActions = new CustomEventTarget();\n        const ctx = this.canvas.getContext(\"2d\");\n        if (ctx == null) {\n            throw ('Could not get the context for the canvas');\n        }\n        this.context = ctx;\n    }\n    async renderCycle() {\n        await this.paint();\n        window.requestAnimationFrame(() => this.renderCycle());\n    }\n    use(PluginClass, settings) {\n        const plugin = new PluginClass(this, settings);\n        this.plugins.set(plugin.name, plugin);\n    }\n    getPlugin(PluginClass) {\n        for (let plugin of this.plugins.values()) {\n            if (plugin instanceof PluginClass) {\n                return plugin;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Main paint function for the canvas\n     *\n     * @param shouldClear If true, clear the canvas before painting\n     */\n    async paint(shouldClear = true) {\n        this.prepareContext(shouldClear);\n        const prop = { context: this.context };\n        await this.layersActions.fireEvent('_prerender', prop);\n        for (let layer of this.layers) {\n            await this.layersActions.fireEvent(layer.name, prop);\n        }\n        await this.layersActions.fireEvent('_postrender', prop);\n    }\n    prepareContext(shouldClear = true) {\n        this.context.resetTransform();\n        if (shouldClear) {\n            this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n        this.context.translate(Math.floor(this.canvas.width / 2), Math.floor(this.canvas.height / 2));\n    }\n    /**\n     * Add a new layer to handle drawing on multiple levels\n     */\n    addLayer(name, order) {\n        this.layers.push({\n            name,\n            order\n        });\n        this.layers.sort((a, b) => a.order - b.order);\n    }\n    /**\n     * Remove a layer\n     */\n    removeLayer(name) {\n        this.layers.splice(this.layers.findIndex((l) => l.name == name), 1);\n    }\n    /**\n     * Just a utility function to make the user code less heavy\n     */\n    on(layer, callback) {\n        this.layersActions.addListener(layer, callback);\n    }\n    remove(layer, callback) {\n        this.layersActions.removeListener(layer, callback);\n    }\n    startRendering() {\n        window.requestAnimationFrame(() => this.renderCycle());\n    }\n}\n","export function throttle(func, wait) {\n    let timeout;\n    let isThrottled = false;\n    return function () {\n        if (isThrottled) {\n            return;\n        }\n        const context = this;\n        const args = arguments;\n        func.apply(context, args);\n        clearTimeout(timeout);\n        timeout = setTimeout(() => (isThrottled = false), wait);\n        isThrottled = true;\n    };\n}\n","import { throttle } from \"../utils\";\nexport class PanZoomPlugin {\n    constructor(app, settings) {\n        var _a, _b, _c;\n        this.app = app;\n        this.settings = settings;\n        this.name = \"PanZoom\";\n        this.currentZoom = 1;\n        this.minZoom = 0.1;\n        this.maxZoom = 10;\n        this.panButton = 1; // Middle\n        this.cameraOffset = { x: 0, y: 0 };\n        this.isPanning = false;\n        this.startedPanningOffset = { x: 0, y: 0 };\n        this.startedPanningPosition = { x: 0, y: 0 };\n        this.throttle = -1;\n        this.bindEvents();\n        this.minZoom = (_a = settings.minZoom) !== null && _a !== void 0 ? _a : this.minZoom;\n        this.maxZoom = (_b = settings.maxZoom) !== null && _b !== void 0 ? _b : this.maxZoom;\n        this.throttle = (_c = settings.throttle) !== null && _c !== void 0 ? _c : this.throttle;\n        this.throttledPaint = throttle(this.app.paint.bind(this.app), this.throttle);\n        let mouseButtons = {\n            'left': 0,\n            'middle': 1,\n            'right': 2,\n            'any': -1\n        };\n        if (settings.panButton)\n            this.panButton = mouseButtons[settings.panButton];\n    }\n    bindEvents() {\n        this.app.on('_prerender', this.transformCanvas.bind(this));\n        this.app.canvas.addEventListener('pointerdown', this.onPointerDown.bind(this));\n        this.app.canvas.addEventListener('pointerup', this.onPointerUp.bind(this));\n        this.app.canvas.addEventListener('pointermove', this.onPointerMove.bind(this));\n        this.app.canvas.addEventListener('pointerleave', this.onPointerUp.bind(this));\n        this.app.canvas.addEventListener('wheel', this.onScroll.bind(this));\n    }\n    screenToLocalPoint(x, y) {\n        let hw = this.app.canvas.width / 2;\n        let hh = this.app.canvas.height / 2;\n        let tx = this.cameraOffset.x;\n        let ty = this.cameraOffset.y;\n        let z = this.currentZoom;\n        // center\n        x = x - hw;\n        y = y - hh;\n        // scale\n        x = x / z;\n        y = y / z;\n        // trnaslate\n        x = x - tx;\n        y = y - ty;\n        return { x, y };\n    }\n    zoom(amount) {\n        this.currentZoom += amount;\n        this.currentZoom = Math.min(Math.max(this.minZoom, this.currentZoom), this.maxZoom);\n        this.currentZoom = Math.floor(this.currentZoom * 1000) / 1000;\n        this.updateRender();\n    }\n    transformCanvas(prop) {\n        prop.context.scale(this.currentZoom, this.currentZoom);\n        prop.context.translate(this.cameraOffset.x, this.cameraOffset.y);\n    }\n    onPointerDown(e) {\n        if (e.button == this.panButton || this.panButton == -1) {\n            this.isPanning = true;\n            this.startedPanningOffset = this.cameraOffset;\n            this.startedPanningPosition = { x: e.clientX, y: e.clientY };\n        }\n    }\n    onPointerUp(_) {\n        this.isPanning = false;\n    }\n    onPointerMove(e) {\n        if (this.isPanning) {\n            this.cameraOffset = {\n                x: this.startedPanningOffset.x + ((e.clientX - this.startedPanningPosition.x) / this.currentZoom),\n                y: this.startedPanningOffset.y + ((e.clientY - this.startedPanningPosition.y) / this.currentZoom),\n            };\n            this.updateRender();\n        }\n    }\n    onScroll(e) {\n        this.zoom(e.deltaY / 1000);\n    }\n    updateRender() {\n        if (this.throttle > 0) {\n            this.throttledPaint();\n        }\n        else {\n            this.app.paint();\n        }\n    }\n    static getDataFromMatrix(matrix) {\n        return {\n            scaleX: matrix.a,\n            scaleY: matrix.d,\n            translateX: matrix.e,\n            translateY: matrix.f,\n            skewX: matrix.b,\n            skewY: matrix.c\n        };\n    }\n    static fixedNumber(number, context, direction = 'x') {\n        let { scaleX, scaleY } = this.getDataFromMatrix(context.getTransform());\n        return direction == 'x' ? number * (1 / scaleX) : number * (1 / scaleY);\n    }\n    static fixedSize(width, height, context) {\n        let { scaleX, scaleY } = this.getDataFromMatrix(context.getTransform());\n        return {\n            width: width * (1 / scaleX),\n            height: height * (1 / scaleY)\n        };\n    }\n}\n","import { System } from 'es-data-parser';\nimport { PanZoomPlugin } from '@andreadev/canvas-lib/dist/modules/pan-zoom-plugin';\nimport { Color } from 'es-data-parser';\nimport { Point } from 'es-data-parser';\n\nconst pinSize = 3;\nconst pinLineWidth = 2;\nconst linkColor = 'rgba(255,255,255,0.2)';\nconst tagNameOffset = 4;\nconst tagNameColor = 'rgba(255,255,255,0.3)';\nconst tagNameFontSize = 12;\n\n/**\n * Calculate the distance of a point to a star system\n */\nexport function distanceFromSystem(system: System, position: Point): number {\n    return Math.sqrt(\n        Math.pow(system.position.x - position.x, 2) +\n        Math.pow(system.position.y - position.y, 2)\n    );\n}\n\n/**\n * Rendering function for the endless sky systems\n */\nexport function renderSystem(system: System, ctx: CanvasRenderingContext2D) {\n    // renderSystemSelection(system, ctx);\n    renderSystemLinks(system, ctx);\n    renderSystemPin(system, ctx);\n    renderSystemName(system, ctx);\n}\n\nexport function renderSystemSelection(system: System, ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.fillStyle = 'rgba(100,100,255,0.2)';\n    ctx.strokeStyle = 'darkblue';\n    ctx.lineWidth = PanZoomPlugin.fixedNumber(1, ctx);\n    let width = PanZoomPlugin.fixedNumber(15, ctx);\n    ctx.ellipse(\n        system.position.x,\n        system.position.y,\n        width,\n        width,\n        0, 0, 2 * Math.PI\n    );\n    ctx.fill();\n    ctx.stroke();\n}\n\nexport function renderSystemLinks(system: System, ctx: CanvasRenderingContext2D) {\n    // Render the links\n    ctx.lineWidth = PanZoomPlugin.fixedNumber(1, ctx);\n    ctx.strokeStyle = linkColor;\n\n    for (let link of system.links) {\n        ctx.beginPath();\n        ctx.moveTo(system.position.x, system.position.y);\n\n        const targetSystem = system.esData.starSystems.get(link);\n        if (!targetSystem)\n            continue;\n\n        ctx.lineTo(targetSystem.position.x, targetSystem.position.y);\n        ctx.stroke();\n    }\n}\n\nexport function renderSystemPin(system: System, ctx: CanvasRenderingContext2D) {\n    // Render the circle\n    // Get the government color\n    let color = Color.fromGovernment(system.esData, system.government)?.toString();\n    if (!color) {\n        color = '#aaa';\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = 'black';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = PanZoomPlugin.fixedNumber(pinLineWidth, ctx);\n    let {width, height} = PanZoomPlugin.fixedSize(pinSize, pinSize, ctx);\n    ctx.ellipse(system.position.x, system.position.y, width, height, 0, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.stroke();\n}\n\nexport function renderSystemName(system: System, ctx: CanvasRenderingContext2D) {\n    // Render the name\n    let { scaleX: scale } = PanZoomPlugin.getDataFromMatrix(ctx.getTransform());\n    // If it's too small to render the name, interrupt the export function\n    if (scale < 0.5) {\n        return;\n    }\n\n    let fontSize = PanZoomPlugin.fixedNumber(tagNameFontSize, ctx)\n    ctx.font = `${fontSize}px Arial`;\n    ctx.fillStyle = tagNameColor;\n    let offset = PanZoomPlugin.fixedNumber(tagNameOffset, ctx);\n    let {width, height} = PanZoomPlugin.fixedSize(pinSize, pinSize, ctx);\n    ctx.fillText(system.name, system.position.x + width + offset, system.position.y + height);\n}\n","import { Galaxy } from \"es-data-parser\";\nimport { SpriteList } from \"./sprites\";\n\nexport async function renderGalaxy(galaxy: Galaxy, spriteList: SpriteList, ctx: CanvasRenderingContext2D) {\n    // Render the sprite\n    if (galaxy.sprite == '') {\n        return;\n    }\n\n    let spriteImage : HTMLImageElement | undefined = spriteList.loadedSprites.get(galaxy.sprite);\n\n    // The sprite image isn't loaded\n    if (!spriteImage) {\n        const spriteFile = spriteList.sprites.get(galaxy.sprite);\n\n        if (!spriteFile) {\n            console.error(`Sprite ${galaxy.sprite} not found`);\n            return;\n        }\n\n        spriteImage = await spriteList.load(galaxy.sprite, spriteFile);\n    }\n\n    ctx.drawImage(\n        spriteImage,\n        galaxy.position.x - (spriteImage.width / 2),\n        galaxy.position.y - (spriteImage.height / 2)\n    );\n}\n","import { ParsedData, SystemObject } from \"es-data-parser\";\nimport { PanZoomPlugin } from \"@andreadev/canvas-lib/dist/modules/pan-zoom-plugin\";\nimport { View } from \"./abstract\";\nimport { CanvasLib } from \"@andreadev/canvas-lib\";\nimport { System } from \"es-data-parser\";\nimport { distanceFromSystem } from \"../game-functions/system\";\nimport { renderSystemSelection, renderSystemPin, renderSystemLinks, renderSystemName } from \"../game-functions/system\";\nimport { renderGalaxy } from \"../game-functions/galaxy\";\nimport { SpriteList } from \"../game-functions/sprites\";\nimport { RenderingProp } from \"@andreadev/canvas-lib/dist/main\";\n\n\nexport class GalaxyView extends EventTarget implements View {\n\n    shouldRenderNames = true;\n    shouldRenderLinks = true;\n    shouldRenderDots  = true;\n    shouldRenderGalaxies = true;\n    shouldRenderWormholeLinks = true;\n    shouldRenderHiddenWormholes = false;\n    currentlySelected: System | null = null;\n    systemLinksCache: Set<string> = new Set();\n\n    constructor(private esData: ParsedData, private spriteList: SpriteList, private canvasLib: CanvasLib) { \n        super();\n\n        this.esData = esData;\n        this.canvasLib.canvas.addEventListener('pointerdown', this.onCanvasClick.bind(this));\n    }\n\n    async activate(lib: CanvasLib) {\n        document.getElementById('toggle-galaxies')?.addEventListener('change', this.toggleGalaxies.bind(this))\n        document.getElementById('toggle-pins')?.addEventListener('change', this.toggleDots.bind(this))\n        document.getElementById('toggle-names')?.addEventListener('change', this.toggleNames.bind(this))\n        document.getElementById('toggle-links')?.addEventListener('change', this.toggleLinks.bind(this))\n        document.getElementById('toggle-wormholes')?.addEventListener('change', this.toggleWormholes.bind(this))\n        document.getElementById('toggle-hidden-wormholes')?.addEventListener('change', this.toggleHiddenWormholes.bind(this))\n\n        this.buildSystemLinksCache();\n\n        await this.preloadGalaxySprites();\n\n        lib.addLayer('galaxies', 0);\n        lib.addLayer('links', 1);\n        lib.addLayer('wormhole-links', 2);\n        lib.addLayer('systems', 3);\n\n        lib.on('galaxies', this.renderGalaxies.bind(this));\n        lib.on('links', this.renderLinks.bind(this));\n        lib.on('wormhole-links', this.renderWormholeLinks.bind(this));\n        lib.on('systems', this.renderSystems.bind(this));\n    }\n\n    async deactivate(lib: CanvasLib) {\n        // Removing event listeners will not work because of \"bind\"\n        // document.getElementById('toggle-galaxies')?.removeEventListener('change', this.toggleGalaxies)\n        // document.getElementById('toggle-pins')?.addEventListener('change', this.toggleDots)\n        // document.getElementById('toggle-names')?.addEventListener('change', this.toggleNames)\n        // document.getElementById('toggle-links')?.addEventListener('change', this.toggleLinks)\n        lib.removeLayer('galaxies');\n        lib.removeLayer('links');\n        lib.removeLayer('wormhole-links');\n        lib.removeLayer('systems');\n    }\n\n    toggleNames(e: Event) {\n        this.shouldRenderNames = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleLinks(e: Event) {\n        this.shouldRenderLinks = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleDots(e: Event) {\n        this.shouldRenderDots = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleGalaxies(e: Event) {\n        this.shouldRenderGalaxies = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleWormholes(e: Event) {\n        this.shouldRenderWormholeLinks = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleHiddenWormholes(e: Event) {\n        this.shouldRenderHiddenWormholes = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n\n    onCanvasClick(e: PointerEvent) {\n        if (e.button !== 0) return;\n\n        let panZoomPlugin = this.canvasLib.getPlugin(PanZoomPlugin);\n        if (!panZoomPlugin) return;\n\n        let point = panZoomPlugin.screenToLocalPoint(e.clientX, e.clientY);\n\n        let closest: System | null = null;\n        let closestDistance = 10000; // High number\n        let minimumDistance = 10;\n        let ctx = this.canvasLib.canvas.getContext('2d');\n        if (ctx) {\n            minimumDistance = PanZoomPlugin.fixedNumber(10, ctx);\n        }\n\n        for (let system of this.esData.starSystems.values()) {\n            let d = distanceFromSystem(system, point);\n            if (d > minimumDistance) continue;\n\n            if (!closest || d < closestDistance) {\n                closest = system;\n                closestDistance = d;\n            }\n        }\n\n        if (!closest) {\n            this.removeSelection();\n            return;\n        }\n\n        this.selectSystem(closest);\n    }\n\n    removeSelection() {\n        if (!this.currentlySelected) return;\n\n        this.currentlySelected.isSelected = false;\n        this.currentlySelected = null;\n\n        this.canvasLib.paint();\n    }\n\n    selectSystem(system: System) {\n        this.currentlySelected = system;\n        this.updateStarSystemInfo(system);\n        \n        this.canvasLib.paint();\n    }\n\n    updateStarSystemInfo(system: System) {\n        document.querySelector('#system-name .value')!.textContent = system.name;\n        document.querySelector('#system-position .value')!.textContent = `${system.position.x} - ${system.position.y}`;\n        document.querySelector('#system-government .value')!.textContent = system.government;\n        document.querySelector('#system-attributes .value')!.textContent = system.attributes.join(', ');\n    }\n\n    buildSystemLinksCache() {\n        this.systemLinksCache = new Set();\n        for (let system of this.esData.starSystems.values()) {\n            for (let linked of system.links) {\n                let linkTxt = `${system.name}___${linked}`;\n                let reverseLinkTxt = `${linked}___${system.name}`;\n\n                if (this.systemLinksCache.has(reverseLinkTxt)) continue;\n\n                this.systemLinksCache.add(linkTxt);\n            }\n        }\n    }\n\n    async preloadGalaxySprites() {\n        for (let galaxy of this.esData.galaxies.values()) {\n            let spriteFile = this.spriteList.sprites.get(galaxy.sprite);\n            if (!spriteFile) continue;\n\n            await this.spriteList.load(galaxy.sprite, spriteFile);\n        }\n    }\n\n    async renderGalaxies({ context }: RenderingProp) {\n        if (!this.esData) return;\n\n        // Draw all galaxies\n        if (this.shouldRenderGalaxies) {\n            for (let galaxy of this.esData.galaxies.values()) {\n                await renderGalaxy(galaxy, this.spriteList, context);\n            }\n        }\n    }\n\n    async renderLinks({ context }: RenderingProp) {\n        if (!this.esData || !this.shouldRenderLinks) return;\n\n        // Draw all links\n        context.lineWidth = PanZoomPlugin.fixedNumber(1, context);\n        context.strokeStyle = 'rgba(255,255,255,0.2)';\n        for (let link of this.systemLinksCache.values()) {\n            let [originName, targetName] = link.split('___');\n\n            let origin = this.esData.starSystems.get(originName);\n            let target = this.esData.starSystems.get(targetName);\n\n            if (!target || !origin)\n                continue;\n\n            context.beginPath();\n            context.moveTo(origin.position.x, origin.position.y);\n\n            context.lineTo(target.position.x, target.position.y);\n            context.stroke();\n        }\n    }\n\n    async renderWormholeLinks({ context }: RenderingProp) {\n        if (!this.esData || !this.shouldRenderWormholeLinks) return;\n\n        // Draw all links\n        context.lineWidth = PanZoomPlugin.fixedNumber(1, context);\n        context.strokeStyle = 'rgba(100,100,255,0.5)';\n        for (let wormhole of this.esData.wormholes.values()) {\n            if (!wormhole.isMappable && !this.shouldRenderHiddenWormholes) continue;\n\n            for (let link of wormhole.links) {\n                let [originName, targetName] = link;\n\n                let origin = this.esData.starSystems.get(originName);\n                let target = this.esData.starSystems.get(targetName);\n\n                if (!target || !origin)\n                    continue;\n\n                context.beginPath();\n                context.moveTo(origin.position.x, origin.position.y);\n\n                context.lineTo(target.position.x, target.position.y);\n                context.stroke();\n            }\n        }\n    }\n\n    async renderSystems({ context }: RenderingProp) {\n        if (!this.esData) return;\n\n        // Draw all systems\n        for (let system of this.esData.starSystems.values()) {\n            if (this.currentlySelected == system)\n                renderSystemSelection(system, context);\n\n            if (this.shouldRenderDots) {\n                renderSystemPin(system, context);\n            }\n\n            if (this.shouldRenderNames) {\n                renderSystemName(system, context);\n            }\n        }\n    }\n}\n","import { CanvasLib } from \"@andreadev/canvas-lib\";\nimport { PanZoomPlugin } from \"@andreadev/canvas-lib/dist/modules/pan-zoom-plugin\";\nimport { View } from \"./views/abstract\";\nimport { GalaxyView } from \"./views/galaxy\";\nimport { ParsedData } from \"es-data-parser\";\nimport { SpriteList } from \"./game-functions/sprites\";\n\nconst views: Record<string, View | null>= {\n    galaxy: null\n};\nlet currentView: View | null = null;\n\nexport function initCanvasLib(canvas: HTMLCanvasElement) {\n    // Fix canvas dimensions\n    let canvasBCR = canvas.getBoundingClientRect();\n    canvas.width = canvasBCR.width;\n    canvas.height = canvasBCR.height;\n\n    const canvasLib = new CanvasLib(canvas);\n    canvasLib.use(PanZoomPlugin, {});\n\n    return canvasLib;\n}\n\nexport async function setCurrentView(lib: CanvasLib, view: View) {\n    await currentView?.deactivate(lib);\n    currentView = view;\n    await currentView.activate(lib);\n}\n\nexport async function filesLoaded(lib: CanvasLib, sprites: SpriteList, data: ParsedData) {\n    views.galaxy = new GalaxyView(data, sprites, lib);\n    await setCurrentView(lib, views.galaxy);\n\n    await lib.paint();\n}\n","export const openDirectory = async (): Promise<File[]> => {\n    // Use older apis because File System Access API seems to be working unnaturally\n    return new Promise((resolve) => {\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.webkitdirectory = true;\n        \n        input.addEventListener('change', () => {\n            let files = Array.from(input.files as FileList);\n            resolve(files);\n        });\n        if ('showPicker' in HTMLInputElement.prototype) {\n            input.showPicker();\n        } else {\n            input.click();\n        }\n    });\n};\n\n// Probabilmente è qualcosa che andrebbe piuttosto impostato nella libreria CanvasLib.\nexport const throttle = (fn: Function, wait: number = 300) => {\n    let inThrottle: boolean;\n    let lastFn: ReturnType<typeof setTimeout>;\n    let lastTime: number;\n\n    return function (this: any) {\n        const context = this,\n        args = arguments;\n        if (!inThrottle) {\n            fn.apply(context, args);\n            lastTime = Date.now();\n            inThrottle = true;\n        } else {\n            clearTimeout(lastFn);\n            lastFn = setTimeout(() => {\n                if (Date.now() - lastTime >= wait) {\n                    fn.apply(context, args);\n                    lastTime = Date.now();\n                }\n            }, Math.max(wait - (Date.now() - lastTime), 0));\n        }\n    };\n};\n\n// Load image\nexport function loadImage(file: File): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        let img = new Image();\n        img.onload = () => {\n            resolve(img);\n        }\n        img.onerror = () => {\n            reject();\n        }\n        img.src = URL.createObjectURL(file);\n    });\n}\n","import { loadImage } from \"../utils\";\n\nexport class SpriteList {\n    sprites: Map<string, File> = new Map();\n    loadedSprites: Map<string, HTMLImageElement> = new Map();\n\n    constructor() {}\n\n    async load(spriteName: string, file: File) {\n        let img = await loadImage(file);\n        this.loadedSprites.set(spriteName, img);\n        return img;\n    }\n}\n","import { parseFiles } from 'es-data-parser';\nimport { filesLoaded, initCanvasLib } from './scripts/setupCanvasLib';\nimport { openDirectory } from './scripts/utils';\nimport { CanvasLib } from '@andreadev/canvas-lib';\nimport { bindUI } from './scripts/ui';\nimport { SpriteList } from './scripts/game-functions/sprites';\n\nlet lib: CanvasLib | null = null;\n\nasync function initApp() {\n    const filesInfo = await openDirectory();\n\n    const dataFiles = filesInfo.filter(file => file.webkitRelativePath.match(/^([^\\/]*\\/)?data\\//) != null);\n\n    const data = await parseFiles(dataFiles);\n    const sprites = extractSprites(filesInfo);\n\n    let canvas = document.getElementById('viewer') as HTMLCanvasElement;\n\n    lib = initCanvasLib(canvas);\n    \n    filesLoaded(lib, sprites, data);\n\n    bindUI(lib);\n};\n\nfunction extractSprites(files: File[]) {\n    const spriteList = new SpriteList();\n    for (let file of files) {\n        if (file.webkitRelativePath.includes('images/')) {\n            let spriteName = file.webkitRelativePath.split('images/')[1];\n            spriteName = spriteName.replace(/([+\\-~])?\\.\\w+$/, '');\n            spriteList.sprites.set(spriteName, file);\n        }\n    }\n    return spriteList;\n}\n\n// Bind open project button\ndocument.getElementById('select-file')?.addEventListener('click', () => {\n    initApp();\n});\n","import { CanvasLib } from \"@andreadev/canvas-lib\";\nimport { PanZoomPlugin } from \"@andreadev/canvas-lib/dist/modules/pan-zoom-plugin\";\n\n\nexport function bindUI(lib: CanvasLib) {\n    // Setup event listeners for the UI\n    document.getElementById('zoom-in')?.addEventListener('click', () => {\n        const panZoomPlugin = lib.getPlugin(PanZoomPlugin);\n\n        if (!panZoomPlugin) return;\n\n        panZoomPlugin.zoom(0.2);\n    });\n\n    document.getElementById('zoom-out')?.addEventListener('click', () => {\n        const panZoomPlugin = lib.getPlugin(PanZoomPlugin);\n\n        if (!panZoomPlugin) return;\n\n        panZoomPlugin.zoom(-0.2);\n    });\n\n    document.getElementById('viewer')?.addEventListener('pointerdown', (e) => {\n        const panZoomPlugin = lib.getPlugin(PanZoomPlugin);\n\n        if (!panZoomPlugin) return;\n\n        console.log(panZoomPlugin.screenToLocalPoint(e.clientX, e.clientY));\n    })\n}\n"],"names":["Object","defineProperty","$cf4feb574650d713$exports","value","Wormhole","SystemObject","System","Planet","ParsedData","Government","Galaxy","Color","parseFiles","parseFile","$9d3a7279cdd13e71$exports","$fd8083cced5c82f4$exports","constructor","this","galaxies","Map","starSystems","colors","governments","planets","wormholes","addGalaxy","galaxy","set","name","addStarSystem","starSystem","addColor","color","addGovernment","gov","addPlanet","planet","addWormhole","wormhole","$fd89a3ee34d455e6$exports","lex","$d0007d77b5ce0bdd$exports","FileRoot","Line","$d0007d77b5ce0bdd$var$Line","tokens","indentation","children","toString","tokensText","text","token","includes","filename","super","isRoot","data","root","isQuoteOpen","isComment","currentQuote","currentLine","currentToken","parentLevels","i","length","c","nextLine","push","Error","join","slice","$b678679497541d9e$exports","parse","$1f9e811e3d505c17$exports","$8fc71618476cd4d1$exports","$8fc71618476cd4d1$var$SystemObject","esData","distance","period","offset","sprite","objects","static","dataLine","child","parseFloat","fromLine","systemObject","$1f9e811e3d505c17$var$System","pos","x","y","foundPos","links","government","attributes","parseInt","system","isSelected","position","$06805aeeafd6d99e$exports","$06805aeeafd6d99e$var$Galaxy","$add32f04b2a446b5$exports","$add32f04b2a446b5$var$Color","r","g","b","a","_","label","fromPercentages","govName","get","$4a31641ed55e6fa2$exports","$4a31641ed55e6fa2$var$Government","$4352cc84caf8a8f6$exports","$4352cc84caf8a8f6$var$Planet","$febb4e6c99c4498f$exports","$febb4e6c99c4498f$var$Wormhole","isMappable","mappable","previousData","parsedData","async","$9d3a7279cdd13e71$var$parseFile","file","fileContent","$58fb92024830bb66$exports","readFile","Promise","resolve","reader","FileReader","onload","result","readAsText","files","webkitRelativePath","enumerable","$d4b14e8110a203a1$export$493b9b82400bc18","listeners","addListener","event","listener","has","removeListener","index","findIndex","splice","details","val","promises","ret","all","fireEventSync","$0f55f752fe3cfaec$export$17e8e0f5ce5db525","canvas","plugins","layers","layersActions","ctx","getContext","context","paint","window","requestAnimationFrame","renderCycle","use","PluginClass","settings","plugin","getPlugin","values","shouldClear","prepareContext","prop","fireEvent","layer","resetTransform","clearRect","width","height","translate","Math","floor","addLayer","order","sort","removeLayer","l","on","callback","remove","startRendering","$cd2915ddbfd8b047$export$de363e709c412c8a","func","wait","timeout","isThrottled","args","arguments","apply","clearTimeout","setTimeout","$f7e9087d61420905$export$4d5de249200f86f7","app","_a","_b","_c","currentZoom","minZoom","maxZoom","panButton","cameraOffset","isPanning","startedPanningOffset","startedPanningPosition","throttle","bindEvents","throttledPaint","bind","left","middle","right","any","transformCanvas","addEventListener","onPointerDown","onPointerUp","onPointerMove","onScroll","screenToLocalPoint","hw","hh","tx","ty","z","zoom","amount","min","max","updateRender","scale","e","button","clientX","clientY","deltaY","matrix","scaleX","scaleY","d","translateX","translateY","f","skewX","skewY","number","direction","getDataFromMatrix","getTransform","$26e7e2369f1a689b$var$pinSize","$26e7e2369f1a689b$var$pinLineWidth","$26e7e2369f1a689b$var$tagNameOffset","$26e7e2369f1a689b$var$tagNameColor","$26e7e2369f1a689b$var$tagNameFontSize","$26e7e2369f1a689b$export$cde84772a8df2b55","sqrt","pow","$26e7e2369f1a689b$export$f47381ba8d3300b4","beginPath","fillStyle","strokeStyle","lineWidth","fixedNumber","ellipse","PI","fill","stroke","$26e7e2369f1a689b$export$27a31ba080489ba7","fromGovernment","fixedSize","$26e7e2369f1a689b$export$686ee88157844317","fontSize","font","fillText","$6c4e838e46d8f176$export$a5180499ba1db227","spriteList","spriteImage","loadedSprites","spriteFile","sprites","console","error","load","drawImage","$70d5af9933590103$export$bbb64adae9205aa7","EventTarget","canvasLib","shouldRenderNames","shouldRenderLinks","shouldRenderDots","shouldRenderGalaxies","shouldRenderWormholeLinks","shouldRenderHiddenWormholes","currentlySelected","systemLinksCache","Set","onCanvasClick","lib","document","getElementById","toggleGalaxies","toggleDots","toggleNames","toggleLinks","toggleWormholes","toggleHiddenWormholes","buildSystemLinksCache","preloadGalaxySprites","renderGalaxies","renderLinks","renderWormholeLinks","renderSystems","target","checked","panZoomPlugin","point","closest","closestDistance","minimumDistance","selectSystem","removeSelection","updateStarSystemInfo","querySelector","textContent","linked","linkTxt","reverseLinkTxt","add","link","originName","targetName","split","origin","moveTo","lineTo","$a5bb27ff3d01271c$var$views","$a5bb27ff3d01271c$var$currentView","$a5bb27ff3d01271c$export$78cda6c44323997e","canvasBCR","getBoundingClientRect","$a5bb27ff3d01271c$export$c64188370d7959c6","view","deactivate","activate","$a5bb27ff3d01271c$export$f090a900c52a5279","$b25678c505cad7eb$export$942f0b26f9f32b84","input","createElement","type","webkitdirectory","Array","from","HTMLInputElement","prototype","showPicker","click","$b25678c505cad7eb$export$fe58198efe02b173","reject","img","Image","onerror","src","URL","createObjectURL","$90284e86e303b8f3$export$9f3b7a07f9b7bd8d","spriteName","$ad2bcec7a0192558$var$lib","$ad2bcec7a0192558$var$initApp","filesInfo","dataFiles","filter","match","replace","$ad2bcec7a0192558$var$extractSprites","log"],"version":3,"file":"index.73d7fa4e.js.map"}