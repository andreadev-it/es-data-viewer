{"mappings":"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","sources":["src/es-data/ParsedData.ts","../canvas-lib/dist/utils.js","../canvas-lib/dist/modules/pan-zoom-plugin.js","src/es-data/Color.ts","src/es-data/StarSystem.ts","src/es-data/Galaxies.ts","../data-parser/dist/structures.js","../data-parser/dist/parser.js","../data-parser/dist/main.js","src/es-data/Government.ts","src/src/parse.ts","../canvas-lib/dist/main.js","src/src/views/galaxy.ts","src/src/setupCanvasLib.ts","src/utils.ts","src/main.ts","src/src/ui.ts"],"sourcesContent":["import { Color } from \"./Color\";\nimport { Galaxy } from \"./Galaxies\";\nimport { Government } from \"./Government\";\nimport { StarSystem, SystemLink } from \"./StarSystem\";\n\nexport class ParsedData {\n    galaxies: Map<string, Galaxy> = new Map();\n    starSystems: Map<string, StarSystem> = new Map();\n    colors: Map<string, Color> = new Map();\n    sprites: Map<string, File> = new Map();\n    governments: Map<string, Government> = new Map();\n    starSystemsLinks: Set<string> = new Set();\n\n    constructor() {}\n\n    addGalaxy(galaxy: Galaxy) {\n        this.galaxies.set(galaxy.name, galaxy);\n    }\n\n    addStarSystem(starSystem: StarSystem) {\n        this.starSystems.set(starSystem.name, starSystem);\n        for (let link of starSystem.links) {\n            let linkedSystem = this.starSystems.get(link);\n            if (linkedSystem) {\n                let linkString = `${starSystem.name}___${linkedSystem.name}`;\n                let reverseLinkString = `${linkedSystem.name}___${starSystem.name}`;\n                if (!this.starSystems.has(reverseLinkString))\n                    this.starSystemsLinks.add(linkString);\n            }\n        }\n    }\n\n    addSprite(path: string, sprite: File) {\n        this.sprites.set(path, sprite);\n    }\n\n    addColor(color: Color) {\n        this.colors.set(color.name, color);\n    }\n\n    addGovernment(gov: Government) {\n        this.governments.set(gov.name, gov);\n    }\n}\n","export function throttle(func, wait) {\n    let timeout;\n    let isThrottled = false;\n    return function () {\n        if (isThrottled) {\n            return;\n        }\n        const context = this;\n        const args = arguments;\n        func.apply(context, args);\n        clearTimeout(timeout);\n        timeout = setTimeout(() => (isThrottled = false), wait);\n        isThrottled = true;\n    };\n}\n","import { throttle } from \"../utils\";\nexport class PanZoomPlugin {\n    constructor(app, settings) {\n        var _a, _b, _c;\n        this.app = app;\n        this.settings = settings;\n        this.name = \"PanZoom\";\n        this.currentZoom = 1;\n        this.minZoom = 0.1;\n        this.maxZoom = 10;\n        this.cameraOffset = { x: 0, y: 0 };\n        this.isPanning = false;\n        this.startedPanningOffset = { x: 0, y: 0 };\n        this.startedPanningPosition = { x: 0, y: 0 };\n        this.throttle = -1;\n        this.bindEvents();\n        this.minZoom = (_a = settings.minZoom) !== null && _a !== void 0 ? _a : this.minZoom;\n        this.maxZoom = (_b = settings.maxZoom) !== null && _b !== void 0 ? _b : this.maxZoom;\n        this.throttle = (_c = settings.throttle) !== null && _c !== void 0 ? _c : this.throttle;\n        this.throttledPaint = throttle(this.app.paint.bind(this.app), this.throttle);\n    }\n    bindEvents() {\n        this.app.on('prerender', this.transformCanvas.bind(this));\n        this.app.canvas.addEventListener('pointerdown', this.onPointerDown.bind(this));\n        this.app.canvas.addEventListener('pointerup', this.onPointerUp.bind(this));\n        this.app.canvas.addEventListener('pointermove', this.onPointerMove.bind(this));\n        this.app.canvas.addEventListener('pointerleave', this.onPointerUp.bind(this));\n        this.app.canvas.addEventListener('wheel', this.onScroll.bind(this));\n    }\n    screenToLocalPoint(x, y) {\n        let hw = this.app.canvas.width / 2;\n        let hh = this.app.canvas.height / 2;\n        let tx = this.cameraOffset.x;\n        let ty = this.cameraOffset.y;\n        let z = this.currentZoom;\n        // center\n        x = x - hw;\n        y = y - hh;\n        // scale\n        x = x / z;\n        y = y / z;\n        // trnaslate\n        x = x - tx;\n        y = y - ty;\n        return { x, y };\n    }\n    zoom(amount) {\n        this.currentZoom += amount;\n        this.currentZoom = Math.min(Math.max(this.minZoom, this.currentZoom), this.maxZoom);\n        this.currentZoom = Math.floor(this.currentZoom * 1000) / 1000;\n        this.updateRender();\n    }\n    transformCanvas(e) {\n        e.detail.context.scale(this.currentZoom, this.currentZoom);\n        e.detail.context.translate(this.cameraOffset.x, this.cameraOffset.y);\n    }\n    onPointerDown(e) {\n        this.isPanning = true;\n        this.startedPanningOffset = this.cameraOffset;\n        this.startedPanningPosition = { x: e.clientX, y: e.clientY };\n    }\n    onPointerUp(_) {\n        this.isPanning = false;\n    }\n    onPointerMove(e) {\n        if (this.isPanning) {\n            this.cameraOffset = {\n                x: this.startedPanningOffset.x + ((e.clientX - this.startedPanningPosition.x) / this.currentZoom),\n                y: this.startedPanningOffset.y + ((e.clientY - this.startedPanningPosition.y) / this.currentZoom),\n            };\n            this.updateRender();\n        }\n    }\n    onScroll(e) {\n        this.zoom(e.deltaY / 1000);\n    }\n    updateRender() {\n        if (this.throttle > 0) {\n            this.throttledPaint();\n        }\n        else {\n            this.app.paint();\n        }\n    }\n    static getDataFromMatrix(matrix) {\n        return {\n            scaleX: matrix.a,\n            scaleY: matrix.d,\n            translateX: matrix.e,\n            translateY: matrix.f,\n            skewX: matrix.b,\n            skewY: matrix.c\n        };\n    }\n    static fixedNumber(number, context, direction = 'x') {\n        let { scaleX, scaleY } = this.getDataFromMatrix(context.getTransform());\n        return direction == 'x' ? number * (1 / scaleX) : number * (1 / scaleY);\n    }\n    static fixedSize(width, height, context) {\n        let { scaleX, scaleY } = this.getDataFromMatrix(context.getTransform());\n        return {\n            width: width * (1 / scaleX),\n            height: height * (1 / scaleY)\n        };\n    }\n}\n","import { Line } from \"es-data-parser/dist/structures\";\nimport { ParsedData } from \"./ParsedData\";\n\nexport class Color {\n    constructor(public name: string, public r: number, public g: number, public b: number, public a: number = 255) {}\n\n    toString() {\n        if (this.a == 255) {\n            return `rgb(${this.r}, ${this.g}, ${this.b})`;\n        }\n        return `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`;\n    }\n\n    static fromLine(dataLine: Line) {\n        let label = dataLine.tokens[1];\n        let r = parseFloat(dataLine.tokens[2]);\n        let g = parseFloat(dataLine.tokens[3]);\n        let b = parseFloat(dataLine.tokens[4]);\n        let a = 255\n        if (dataLine.tokens.length == 6) {\n            a = parseFloat(dataLine.tokens[5]);\n        }\n\n        return Color.fromPercentages(label, r, g, b, a);\n    }\n\n    static fromPercentages(label: string, r: number, g: number, b: number, a: number) {\n        return new Color(label, r * 255, g * 255, b * 255, a * 255);\n    }\n\n    static fromGovernment(data: ParsedData, govName: string) {\n        let government = data.governments.get(govName);\n        if (!government) {\n            return null;\n        }\n\n        if (government.color instanceof Color) {\n            return government.color;\n        }\n\n        let color = data.colors.get(government.color);\n        if (!color) {\n            return null;\n        }\n\n        return color;\n    }\n}\n","import { Line } from \"es-data-parser/dist/structures\";\nimport { PanZoomPlugin } from \"@andreadev/canvas-lib/dist/modules/pan-zoom-plugin\";\nimport { Drawable, Point, BoundingClientRect } from \"@andreadev/canvas-lib/dist/modules/drawables\";\nimport { ParsedData } from \"./ParsedData\";\nimport { Color } from \"./Color\";\n\nexport type SystemLink = [Point, Point];\n\nexport const starSystemsMap = new Map<string, StarSystem>();\n\nexport class StarSystem implements Drawable {\n    name: string;\n    position: Point;\n    links: string[] = [];\n    government: string = \"\";\n    esData: ParsedData;\n\n    static fromLine(data: ParsedData, dataLine: Line) {\n        if (dataLine.tokens[0] != 'system') {\n            throw new Error(\"Not a system\");\n        }\n\n        const name = dataLine.tokens[1];\n        let pos: Point = {x:0, y:0};\n        let foundPos = false;\n        let links: string[] = [];\n        let government = \"\";\n        for (let child of dataLine.children) {\n            if (child.tokens[0] == 'pos') {\n                pos = {\n                    x: parseInt(child.tokens[1]),\n                    y: parseInt(child.tokens[2])\n                };\n                foundPos = true;\n                continue;\n            }\n            \n            if (child.tokens[0] == 'link') {\n                links.push(child.tokens[1]);\n            }\n\n            if (child.tokens[0] == 'government') {\n                government = child.tokens[1];\n            }\n        }\n\n        if (!foundPos) {\n            throw new Error(\"No position found for this system\");\n        }\n\n        const system = new StarSystem(data, name, pos);\n        system.links = links;\n        system.government = government;\n        \n        starSystemsMap.set(name, system);\n\n        return system;\n    }\n\n    constructor(data: ParsedData, name: string, pos: Point) {\n        this.name = name;\n        this.position = pos;\n        this.esData = data;\n\n        starSystemsMap.set(name, this);\n    }\n\n    getBCR(): BoundingClientRect {\n        return {\n            top: this.position.y - 3,\n            bottom: this.position.y + 3,\n            left: this.position.x - 3,\n            right: this.position.x + 3,\n            width: 6,\n            height: 6\n        };\n    }\n\n    render(ctx: CanvasRenderingContext2D) {\n        this.renderLinks(ctx);\n        this.renderDot(ctx);\n        this.renderName(ctx);\n    }\n\n    renderLinks(ctx: CanvasRenderingContext2D) {\n        // Render the links\n        ctx.lineWidth = PanZoomPlugin.fixedNumber(1, ctx);\n        ctx.strokeStyle = 'rgba(255,255,255,0.2)';\n        for (let link of this.links) {\n            ctx.beginPath();\n            ctx.moveTo(this.position.x, this.position.y);\n\n            const targetSystem = starSystemsMap.get(link);\n            if (!targetSystem)\n                continue;\n\n            ctx.lineTo(targetSystem.position.x, targetSystem.position.y);\n            ctx.stroke();\n        }\n    }\n\n    renderDot(ctx: CanvasRenderingContext2D) {\n        // Render the circle\n        // Get the government color\n        let color = Color.fromGovernment(this.esData, this.government)?.toString();\n        if (!color) {\n            color = '#aaa';\n        }\n\n        ctx.beginPath();\n        ctx.fillStyle = 'black';\n        ctx.strokeStyle = color;\n        ctx.lineWidth = PanZoomPlugin.fixedNumber(2, ctx);\n        let {width, height} = PanZoomPlugin.fixedSize(3, 3, ctx);\n        ctx.ellipse(this.position.x, this.position.y, width, height, 0, 0, 2 * Math.PI);\n        ctx.fill();\n        ctx.stroke();\n    }\n\n    renderName(ctx: CanvasRenderingContext2D) {\n        // Render the name\n        let { scaleX: scale } = PanZoomPlugin.getDataFromMatrix(ctx.getTransform());\n        // If it's too small to render the name, interrupt the function\n        if (scale < 0.5) {\n            return;\n        }\n\n        let fontSize = PanZoomPlugin.fixedNumber(12, ctx)\n        ctx.font = `${fontSize}px Arial`;\n        ctx.fillStyle = 'rgba(255,255,255,0.3)';\n        let offset = PanZoomPlugin.fixedNumber(4, ctx);\n        let {width, height} = PanZoomPlugin.fixedSize(3, 3, ctx);\n        ctx.fillText(this.name, this.position.x + width + offset, this.position.y + height);\n    }\n}\n","import { Line } from \"es-data-parser/dist/structures\";\nimport { ParsedData } from \"./ParsedData\";\nimport { Point } from \"@andreadev/canvas-lib/dist/modules/drawables\";\n\nexport class Galaxy {\n    esData: ParsedData;\n\n    name: string;\n    position: Point = {x:0, y:0};\n    sprite = \"\";\n    spriteImage: HTMLImageElement | null = null;\n\n    static fromLine(data: ParsedData, dataLine: Line) {\n        if (dataLine.tokens[0] != 'galaxy') {\n            throw new Error(\"Not a galaxy\");\n        }\n\n        const name = dataLine.tokens[1];\n        let pos: Point = {x:0, y:0};\n        let foundPos = false;\n        let sprite: string = \"\";\n        for (let child of dataLine.children) {\n            if (child.tokens[0] == 'pos') {\n                pos = {\n                    x: parseInt(child.tokens[1]),\n                    y: parseInt(child.tokens[2])\n                };\n                foundPos = true;\n                continue;\n            }\n            \n            if (child.tokens[0] == 'sprite') {\n                sprite = child.tokens[1];\n            }\n        }\n\n        if (!foundPos) {\n            throw new Error(\"No position found for this system\");\n        }\n\n        const galaxy = new Galaxy(data, name, pos);\n\n        if (sprite != \"\") {\n            galaxy.sprite = sprite;\n        }\n\n        return galaxy;\n    }\n\n    constructor(data: ParsedData, name: string, pos: Point) {\n        this.name = name;\n        this.position = pos;\n        this.esData = data;\n    }\n\n    loadImage(): Promise<void> {\n        if (this.spriteImage) return Promise.resolve();\n        if (this.sprite == '') return Promise.resolve();\n\n        return new Promise((resolve, reject) => {\n            let sprite = this.esData.sprites.get(this.sprite)\n\n            // In case the image file isn't available\n            if (!sprite) {\n                resolve();\n                return;\n            }\n\n            let url = URL.createObjectURL(sprite);\n            let img = new Image();\n\n            img.onload = () => {\n                this.spriteImage = img;\n                resolve();\n            }\n            \n            img.onerror = () => {\n                reject()\n            }\n\n            img.src = url;\n            \n        })\n    }\n\n    render(ctx: CanvasRenderingContext2D) {\n        // Render the sprite\n        if (this.sprite == '') {\n            return;\n        }\n\n        if (this.spriteImage == null) {\n            console.error(\"Sprite image used before loading!\");\n        }\n        else {\n            ctx.drawImage(\n                this.spriteImage,\n                this.position.x - (this.spriteImage.width / 2),\n                this.position.y - (this.spriteImage.height / 2)\n            );\n        }\n    }\n}\n","export class Line {\n    constructor(tokens, indentation) {\n        this.tokens = tokens;\n        this.indentation = indentation;\n        this.children = [];\n    }\n    toString() {\n        const tokensText = [...this.tokens];\n        let text = \"\";\n        for (const token of tokensText) {\n            if (token.includes(' ')) {\n                if (token.includes('\"')) {\n                    text += \"`\" + token + \"`\";\n                }\n                else {\n                    text += `\"${token}\"`;\n                }\n            }\n            else {\n                text += token + \" \";\n            }\n        }\n        return text;\n    }\n}\nexport class FileRoot extends Line {\n    constructor(tokens, indentation, filename) {\n        super(tokens, indentation);\n        this.tokens = tokens;\n        this.indentation = indentation;\n        this.isRoot = true;\n        this.filename = filename;\n    }\n}\n","import { Line, FileRoot } from \"./structures\";\nexport function parse(data, filename = \"\") {\n    const root = new FileRoot([], 0, filename);\n    let isQuoteOpen = false;\n    let isComment = false;\n    let currentQuote = \"\";\n    let currentLine = new Line([], 0);\n    let currentToken = \"\";\n    let parentLevels = [root];\n    for (let i = 0; i < data.length; i++) {\n        const c = data[i];\n        let nextLine = null;\n        if (isComment && c != '\\n')\n            continue;\n        switch (c) {\n            // handle comments\n            case '#':\n                if (currentToken.length == 0 && !isQuoteOpen) {\n                    isComment = true;\n                }\n                break;\n            // handle quotes\n            case '\"':\n            case '`':\n                if (isQuoteOpen && c == currentQuote) {\n                    isQuoteOpen = false;\n                    if (currentToken.length == 0) {\n                        currentLine.tokens.push('');\n                    }\n                    break;\n                }\n                if (!isQuoteOpen && currentToken.length == 0) {\n                    isQuoteOpen = true;\n                    currentQuote = c;\n                    break;\n                }\n                if (!isQuoteOpen) {\n                    throw new Error(`Unescaped quote in string after ${currentToken}`);\n                }\n                break;\n            // handle newlines\n            case '\\n':\n                if (currentToken != '' && !isComment) {\n                    currentLine.tokens.push(currentToken);\n                }\n                currentToken = '';\n                isComment = false;\n                nextLine = new Line([], 0);\n                // ignore blank lines\n                if (currentLine.tokens.length == 0) {\n                    currentLine = nextLine;\n                    continue;\n                }\n                // handle too much indentation\n                if (currentLine.indentation > parentLevels.length - 1) {\n                    throw new Error(`Unexpected indentation for line ${currentLine.tokens.join(' ')}`);\n                }\n                // adding the line as children to its parent based on indentation\n                if (currentLine.indentation >= 0) {\n                    parentLevels[currentLine.indentation].children.push(currentLine);\n                }\n                // adding new line as parent level for following data\n                if (currentLine.indentation == parentLevels.length - 1) {\n                    parentLevels.push(currentLine);\n                }\n                else {\n                    // if indentation is smaller then the number of parents, it means that\n                    // previous deeper nested parents has ended their block, so we delete them\n                    parentLevels = parentLevels.slice(0, currentLine.indentation + 1);\n                    parentLevels.push(currentLine);\n                }\n                if (isQuoteOpen) {\n                    throw new Error(`A quote was left open near: '${currentToken}'`);\n                }\n                currentLine = nextLine;\n                break;\n            // handle spaces\n            case ' ':\n                if (!isQuoteOpen) {\n                    if (currentToken.length > 0) {\n                        currentLine.tokens.push(currentToken);\n                        currentToken = \"\";\n                    }\n                }\n                else {\n                    currentToken += \" \";\n                }\n                break;\n            // handle tabs\n            case '\\t':\n                if (!isQuoteOpen &&\n                    currentLine.tokens.length == 0 &&\n                    currentToken.length == 0) {\n                    currentLine.indentation++;\n                }\n                else if (!isQuoteOpen && currentToken.length > 0) {\n                    // Add tabs as token separators too to avoid the error in some official files\n                    currentLine.tokens.push(currentToken);\n                    currentToken = \"\";\n                }\n                else {\n                    currentToken += \"\\t\";\n                }\n                break;\n            // handle other characters\n            default:\n                currentToken += c;\n        }\n    }\n    return root;\n}\n","import { parse } from \"./parser\";\nexport function parseFile(file, filename) {\n    return new Promise((resolve, _) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            const data = reader.result;\n            resolve(parse(data, filename));\n        };\n        reader.readAsText(file);\n    });\n}\nexport function parseText(data, filename) {\n    return parse(data, filename);\n}\n","import { Line } from \"es-data-parser/dist/structures\";\nimport { Color } from \"./Color\";\nimport { ParsedData } from \"./ParsedData\";\n\nexport class Government {\n    esData: ParsedData;\n\n    name: string;\n    color: string | Color = \"\";\n\n    static fromLine(data: ParsedData, dataLine: Line) {\n        if (dataLine.tokens[0] != 'government') {\n            throw new Error(\"Not a government\");\n        }\n\n        const name = dataLine.tokens[1];\n\n        let color: string | Color = \"\";\n\n        for (let child of dataLine.children) {\n            if (child.tokens[0] == 'color') {\n                if (child.tokens.length == 2) {\n                    color = child.tokens[1];\n                }\n                else {\n                    let r = parseFloat(dataLine.tokens[1]);\n                    let g = parseFloat(dataLine.tokens[2]);\n                    let b = parseFloat(dataLine.tokens[3]);\n                    let a = 255\n                    if (dataLine.tokens.length == 5) {\n                        a = parseFloat(dataLine.tokens[4]);\n                    }\n                    color = Color.fromPercentages('', r, g, b, a);\n                }\n            }\n        }\n\n        const government = new Government(data, name);\n        government.color = color;\n\n        return government;\n    }\n\n    constructor(data: ParsedData, name: string) {\n        this.esData = data;\n        this.name = name;\n    }\n}\n","import { ParsedData } from \"../es-data/ParsedData\";\nimport { StarSystem } from \"../es-data/StarSystem\";\nimport { Galaxy } from \"../es-data/Galaxies\";\nimport { FileRoot } from \"es-data-parser/dist/structures\";\nimport { parseFile } from \"es-data-parser\";\nimport { Color } from \"../es-data/Color\";\nimport { Government } from \"../es-data/Government\";\n\n\nexport async function parse(files: File[]) {\n    const parsedData = new ParsedData();\n    const roots: FileRoot[] = [];\n\n    for (let file of files) {\n        if (\n            file.webkitRelativePath.match(/^([^\\/]+\\/)?data\\//) !== null) {\n            let fileroot = await parseFile(file, file.webkitRelativePath);\n\n            roots.push(fileroot);\n\n            for (let child of fileroot.children) {\n                if (child.tokens[0] == 'system') {\n                    parsedData.addStarSystem(StarSystem.fromLine(parsedData, child));\n                }\n                else if (child.tokens[0] == 'galaxy') {\n                    const galaxy = Galaxy.fromLine(parsedData, child)\n                    await galaxy.loadImage();\n                    parsedData.addGalaxy(galaxy);\n                }\n                else if (child.tokens[0] == 'color') {\n                    parsedData.addColor(Color.fromLine(child));\n                }\n                else if (child.tokens[0] == 'government') {\n                    parsedData.addGovernment(Government.fromLine(parsedData, child));\n                }\n            }\n        }\n        else if (file.webkitRelativePath.includes('/images/')) {\n            let relativePath = file.webkitRelativePath.split('/images/')[1];\n\n            // remove extension (i.e. .png) from relative path\n            relativePath = relativePath.split('.')[0];\n\n            if (\n                relativePath.at(-1) == '+' ||\n                relativePath.at(-1) == '~' ||\n                relativePath.at(-1) == '-'\n            ) {\n                relativePath = relativePath.slice(0, -1);\n            }\n\n            if (!relativePath) continue;\n\n            parsedData.addSprite(relativePath, file);\n        }\n    }\n\n    console.log(parsedData);\n    return parsedData;\n}\n","export class CanvasLib extends EventTarget {\n    constructor(canvas) {\n        super();\n        this.canvas = canvas;\n        this.plugins = new Map();\n        const ctx = this.canvas.getContext(\"2d\");\n        if (ctx == null) {\n            throw ('Could not get the context for the canvas');\n        }\n        this.context = ctx;\n    }\n    renderCycle() {\n        this.paint();\n        window.requestAnimationFrame(() => this.renderCycle());\n    }\n    use(PluginClass, settings) {\n        const plugin = new PluginClass(this, settings);\n        this.plugins.set(plugin.name, plugin);\n    }\n    getPlugin(PluginClass) {\n        for (let plugin of this.plugins.values()) {\n            if (plugin instanceof PluginClass) {\n                return plugin;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Main paint function for the canvas\n     *\n     * @param shouldClear If true, clear the canvas before painting\n     */\n    paint(shouldClear = true) {\n        this.prepareContext(shouldClear);\n        const prop = { context: this.context };\n        this.preRender(prop);\n        this.render(prop);\n        this.postRender(prop);\n    }\n    prepareContext(shouldClear = true) {\n        this.context.resetTransform();\n        if (shouldClear) {\n            this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n        this.context.translate(Math.floor(this.canvas.width / 2), Math.floor(this.canvas.height / 2));\n    }\n    /**\n     * Just a utility function to make the user code less heavy\n     */\n    on(event, callback) {\n        this.addEventListener(event, callback);\n    }\n    startRendering() {\n        window.requestAnimationFrame(() => this.renderCycle());\n    }\n    preRender(eventProp) {\n        const e = new CustomEvent('prerender', { detail: eventProp });\n        this.dispatchEvent(e);\n    }\n    render(eventProp) {\n        const e = new CustomEvent('render', { detail: eventProp });\n        this.dispatchEvent(e);\n    }\n    postRender(eventProp) {\n        const e = new CustomEvent('postrender', { detail: eventProp });\n        this.dispatchEvent(e);\n    }\n}\n","import { ParsedData } from \"../../es-data/ParsedData\";\nimport { PanZoomPlugin } from \"@andreadev/canvas-lib/dist/modules/pan-zoom-plugin\";\nimport { View } from \"./abstract\";\nimport { CanvasLib } from \"@andreadev/canvas-lib\";\n\n\nexport class GalaxyView extends EventTarget implements View {\n\n    shouldRenderNames = true;\n    shouldRenderLinks = true;\n    shouldRenderDots  = true;\n    shouldRenderGalaxies = true;\n\n    constructor(private esData: ParsedData, private canvasLib: CanvasLib) { super(); }\n\n    activate() {\n        document.getElementById('toggle-galaxies')?.addEventListener('change', this.toggleGalaxies.bind(this))\n        document.getElementById('toggle-pins')?.addEventListener('change', this.toggleDots.bind(this))\n        document.getElementById('toggle-names')?.addEventListener('change', this.toggleNames.bind(this))\n        document.getElementById('toggle-links')?.addEventListener('change', this.toggleLinks.bind(this))\n    }\n\n    deactivate() {\n        // Removing event listeners will not work because of \"bind\"\n        // document.getElementById('toggle-galaxies')?.removeEventListener('change', this.toggleGalaxies)\n        // document.getElementById('toggle-pins')?.addEventListener('change', this.toggleDots)\n        // document.getElementById('toggle-names')?.addEventListener('change', this.toggleNames)\n        // document.getElementById('toggle-links')?.addEventListener('change', this.toggleLinks)\n    }\n\n    toggleNames(e: Event) {\n        this.shouldRenderNames = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleLinks(e: Event) {\n        this.shouldRenderLinks = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleDots(e: Event) {\n        this.shouldRenderDots = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleGalaxies(e: Event) {\n        this.shouldRenderGalaxies = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n\n    preRender(ctx: CanvasRenderingContext2D) {\n        if (!this.esData) return;\n\n        // Draw all galaxies\n        if (this.shouldRenderGalaxies) {\n            for (let galaxy of this.esData.galaxies.values()) {\n                galaxy.render(ctx);\n            }\n        }\n\n        if (this.shouldRenderLinks) {\n            // Draw all links\n            ctx.lineWidth = PanZoomPlugin.fixedNumber(1, ctx);\n            ctx.strokeStyle = 'rgba(255,255,255,0.2)';\n            for (let link of this.esData.starSystemsLinks.values()) {\n                let [originName, targetName] = link.split('___');\n\n                let origin = this.esData.starSystems.get(originName);\n                let target = this.esData.starSystems.get(targetName);\n\n                if (!target || !origin)\n                    continue;\n\n                ctx.beginPath();\n                ctx.moveTo(origin.position.x, origin.position.y);\n\n                ctx.lineTo(target.position.x, target.position.y);\n                ctx.stroke();\n            }\n        }\n    }\n\n    render(ctx: CanvasRenderingContext2D) {\n        if (!this.esData) return;\n\n        // Draw all systems\n        for (let system of this.esData.starSystems.values()) {\n            if (this.shouldRenderDots) {\n                system.renderDot(ctx);\n            }\n            if (this.shouldRenderNames) {\n                system.renderName(ctx);\n            }\n        }\n    }\n\n    postRender(ctx: CanvasRenderingContext2D) {\n\n    }\n}\n","import { CanvasLib } from \"@andreadev/canvas-lib\";\nimport { PanZoomPlugin } from \"@andreadev/canvas-lib/dist/modules/pan-zoom-plugin\";\nimport { ParsedData } from \"../es-data/ParsedData\";\nimport { View } from \"./views/abstract\";\nimport { GalaxyView } from \"./views/galaxy\";\nimport { RenderingEvent } from \"@andreadev/canvas-lib/dist/main\";\n\nconst views: Record<string, View | null>= {\n    galaxy: null\n};\nlet currentView: View | null = null;\n\nexport function initCanvasLib(canvas: HTMLCanvasElement) {\n    // Fix canvas dimensions\n    let canvasBCR = canvas.getBoundingClientRect();\n    canvas.width = canvasBCR.width;\n    canvas.height = canvasBCR.height;\n\n    const canvasLib = new CanvasLib(canvas);\n    canvasLib.use(PanZoomPlugin, {});\n\n    // Setup rendering functions for the view\n    const preRender = (event: RenderingEvent) => {\n        currentView?.preRender(event.detail.context);\n    }\n    const render = async (event: RenderingEvent) => {\n        currentView?.render(event.detail.context);\n    }\n    const postRender = async (event: RenderingEvent) => {\n        currentView?.render(event.detail.context);\n    }\n    canvasLib.on('prerender', preRender);\n    canvasLib.on('render', render);\n    canvasLib.on('postrender', postRender);\n\n    return canvasLib;\n}\n\nexport function setCurrentView(view: View) {\n    currentView?.deactivate();\n    currentView = view;\n    currentView.activate();\n}\n\nexport function filesLoaded(lib: CanvasLib, data: ParsedData) {\n    views.galaxy = new GalaxyView(data, lib);\n    setCurrentView(views.galaxy);\n\n    lib.paint();\n}\n","export const openDirectory = async (): Promise<File[]> => {\n    // Use older apis because File System Access API seems to be working unnaturally\n    return new Promise((resolve) => {\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.webkitdirectory = true;\n        \n        input.addEventListener('change', () => {\n            let files = Array.from(input.files as FileList);\n            resolve(files);\n        });\n        if ('showPicker' in HTMLInputElement.prototype) {\n            input.showPicker();\n        } else {\n            input.click();\n        }\n    });\n};\n\n// Probabilmente è qualcosa che andrebbe piuttosto impostato nella libreria CanvasLib.\nexport const throttle = (fn: Function, wait: number = 300) => {\n    let inThrottle: boolean;\n    let lastFn: ReturnType<typeof setTimeout>;\n    let lastTime: number;\n\n    return function (this: any) {\n        const context = this,\n        args = arguments;\n        if (!inThrottle) {\n            fn.apply(context, args);\n            lastTime = Date.now();\n            inThrottle = true;\n        } else {\n            clearTimeout(lastFn);\n            lastFn = setTimeout(() => {\n                if (Date.now() - lastTime >= wait) {\n                    fn.apply(context, args);\n                    lastTime = Date.now();\n                }\n            }, Math.max(wait - (Date.now() - lastTime), 0));\n        }\n    };\n};\n\n","import { parse } from './src/parse';\nimport { filesLoaded, initCanvasLib } from './src/setupCanvasLib';\nimport { openDirectory } from './utils';\nimport { CanvasLib } from '@andreadev/canvas-lib';\nimport { bindUI } from './src/ui';\n\nlet lib: CanvasLib | null = null;\n\nasync function initApp() {\n    const filesInfo = await openDirectory();\n\n    const data = await parse(filesInfo);\n\n    let canvas = document.getElementById('viewer') as HTMLCanvasElement;\n\n    lib = initCanvasLib(canvas);\n    \n    filesLoaded(lib, data);\n\n    bindUI(lib);\n};\n\n// Bind open project button\ndocument.getElementById('select-file')?.addEventListener('click', () => {\n    initApp();\n});\n","import { CanvasLib } from \"@andreadev/canvas-lib\";\nimport { PanZoomPlugin } from \"@andreadev/canvas-lib/dist/modules/pan-zoom-plugin\";\n\n\nexport function bindUI(lib: CanvasLib) {\n    // Setup event listeners for the UI\n    document.getElementById('zoom-in')?.addEventListener('click', () => {\n        const panZoomPlugin = lib.getPlugin(PanZoomPlugin);\n\n        if (!panZoomPlugin) return;\n\n        panZoomPlugin.zoom(0.2);\n    });\n\n    document.getElementById('zoom-out')?.addEventListener('click', () => {\n        const panZoomPlugin = lib.getPlugin(PanZoomPlugin);\n\n        if (!panZoomPlugin) return;\n\n        panZoomPlugin.zoom(-0.2);\n    });\n\n    document.getElementById('viewer')?.addEventListener('pointerdown', (e) => {\n        const panZoomPlugin = lib.getPlugin(PanZoomPlugin);\n\n        if (!panZoomPlugin) return;\n\n        console.log(panZoomPlugin.screenToLocalPoint(e.clientX, e.clientY));\n    })\n}\n"],"names":["$f1123154cef67b66$export$aa361464e3df6895","galaxies","Map","starSystems","colors","sprites","governments","starSystemsLinks","Set","constructor","addGalaxy","galaxy","this","set","name","addStarSystem","starSystem","link","links","linkedSystem","get","linkString","reverseLinkString","has","add","addSprite","path","sprite","addColor","color","addGovernment","gov","$ac7a4858d2a8992b$export$de363e709c412c8a","func","wait","timeout","isThrottled","args","arguments","apply","clearTimeout","setTimeout","$994b89504fcb0ca2$export$4d5de249200f86f7","app","settings","_a","_b","_c","currentZoom","minZoom","maxZoom","cameraOffset","x","y","isPanning","startedPanningOffset","startedPanningPosition","throttle","bindEvents","throttledPaint","paint","bind","on","transformCanvas","canvas","addEventListener","onPointerDown","onPointerUp","onPointerMove","onScroll","screenToLocalPoint","hw","width","hh","height","tx","ty","z","zoom","amount","Math","min","max","floor","updateRender","e","detail","context","scale","translate","clientX","clientY","_","deltaY","static","matrix","scaleX","a","scaleY","d","translateX","translateY","f","skewX","b","skewY","c","number","direction","getDataFromMatrix","getTransform","$f1f0f5c6d9eed29b$export$892596cec99bc70e","r","g","toString","dataLine","label","tokens","parseFloat","length","fromPercentages","data","govName","government","$c5ca37d8b9da03d5$export$ea149fec8837f72b","$c5ca37d8b9da03d5$export$804913e4ec6e385f","Error","pos","foundPos","child","children","push","parseInt","system","position","esData","getBCR","top","bottom","left","right","render","ctx","renderLinks","renderDot","renderName","lineWidth","fixedNumber","strokeStyle","beginPath","moveTo","targetSystem","lineTo","stroke","fromGovernment","fillStyle","fixedSize","ellipse","PI","fill","fontSize","font","offset","fillText","$b494b04b16341b2a$export$6509ed3b9b17fe1b","spriteImage","loadImage","Promise","resolve","reject","url","URL","createObjectURL","img","Image","onload","onerror","src","console","error","drawImage","$97a2f824b02b75ca$export$17d680238e50603e","indentation","tokensText","text","token","includes","$97a2f824b02b75ca$export$bd97b5a17cbaafd5","filename","super","isRoot","$acc3472be033e1d0$export$98e6a39c04603d36","root","isQuoteOpen","isComment","currentQuote","currentLine","currentToken","parentLevels","i","nextLine","join","slice","$ea7d98d7be25fca1$export$f1c553d4f1a2351","file","reader","FileReader","result","readAsText","$ab59d5a7cd9e0c18$export$fb8111228a5af09a","async","$59e043c0f225063d$export$98e6a39c04603d36","files","parsedData","roots","webkitRelativePath","match","fileroot","fromLine","relativePath","split","at","log","$b5a9132486fa5f88$export$17e8e0f5ce5db525","EventTarget","plugins","getContext","renderCycle","window","requestAnimationFrame","use","PluginClass","plugin","getPlugin","values","shouldClear","prepareContext","prop","preRender","postRender","resetTransform","clearRect","event","callback","startRendering","eventProp","CustomEvent","dispatchEvent","$7a23650d329d929d$export$bbb64adae9205aa7","canvasLib","shouldRenderNames","shouldRenderLinks","shouldRenderDots","shouldRenderGalaxies","activate","document","getElementById","toggleGalaxies","toggleDots","toggleNames","toggleLinks","deactivate","target","checked","originName","targetName","origin","$b788cc96538733ff$var$views","$b788cc96538733ff$var$currentView","$b788cc96538733ff$export$78cda6c44323997e","canvasBCR","getBoundingClientRect","$b788cc96538733ff$export$c64188370d7959c6","lib","view","$df5bef30413a053b$export$942f0b26f9f32b84","input","createElement","type","webkitdirectory","Array","from","HTMLInputElement","prototype","showPicker","click","$ad2bcec7a0192558$var$lib","$ad2bcec7a0192558$var$initApp","filesInfo","panZoomPlugin"],"version":3,"file":"index.27f9c368.js.map"}