{"mappings":"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","sources":["../es-data-parser/dist/es-objects/ParsedData.js","../es-data-parser/dist/structures.js","../es-data-parser/dist/lexer.js","../es-data-parser/dist/es-objects/Sprite.js","../es-data-parser/dist/es-objects/SystemObject.js","../es-data-parser/dist/es-objects/TravelDistance.js","../es-data-parser/dist/es-objects/RamscoopModifier.js","../es-data-parser/dist/es-objects/System.js","../es-data-parser/dist/es-objects/Galaxy.js","../es-data-parser/dist/es-objects/Color.js","../es-data-parser/dist/es-objects/Government.js","../es-data-parser/dist/es-objects/Planet.js","../es-data-parser/dist/es-objects/Wormhole.js","../es-data-parser/dist/parser.js","../es-data-parser/dist/utils.js","../es-data-parser/dist/main.js","node_modules/@andreadev/custom-event-target/dist/CustomEventTarget.js","node_modules/@andreadev/canvas-lib/dist/main.js","node_modules/@andreadev/canvas-lib/dist/utils.js","node_modules/@andreadev/canvas-lib/dist/modules/pan-zoom-plugin.js","src/scripts/game-functions/system.ts","src/scripts/game-functions/galaxy.ts","src/scripts/views/galaxy.ts","src/scripts/utils.ts","src/scripts/game-functions/sprites.ts","src/scripts/game-functions/object.ts","src/scripts/views/system.ts","src/scripts/setupCanvasLib.ts","src/scripts/ui.ts","src/main.ts"],"sourcesContent":["export class ParsedData {\n    constructor() {\n        this.galaxies = new Map();\n        this.starSystems = new Map();\n        this.colors = new Map();\n        this.governments = new Map();\n        this.planets = new Map();\n        this.wormholes = new Map();\n    }\n    addGalaxy(galaxy) {\n        this.galaxies.set(galaxy.name, galaxy);\n    }\n    addStarSystem(starSystem) {\n        this.starSystems.set(starSystem.name, starSystem);\n    }\n    addColor(color) {\n        this.colors.set(color.name, color);\n    }\n    addGovernment(gov) {\n        this.governments.set(gov.name, gov);\n    }\n    addPlanet(planet) {\n        this.planets.set(planet.name, planet);\n    }\n    addWormhole(wormhole) {\n        this.wormholes.set(wormhole.name, wormhole);\n    }\n}\n","export class Line {\n    constructor(tokens, indentation) {\n        this.tokens = tokens;\n        this.indentation = indentation;\n        this.children = [];\n    }\n    toString() {\n        const tokensText = [...this.tokens];\n        let text = \"\";\n        for (const token of tokensText) {\n            if (token.includes(' ')) {\n                if (token.includes('\"')) {\n                    text += \"`\" + token + \"`\";\n                }\n                else {\n                    text += `\"${token}\"`;\n                }\n            }\n            else {\n                text += token + \" \";\n            }\n        }\n        return text;\n    }\n}\nexport class FileRoot extends Line {\n    constructor(tokens, indentation, filename) {\n        super(tokens, indentation);\n        this.tokens = tokens;\n        this.indentation = indentation;\n        this.isRoot = true;\n        this.filename = filename;\n    }\n}\n","import { Line, FileRoot } from \"./structures\";\nexport function lex(data, filename = \"\") {\n    const root = new FileRoot([], 0, filename);\n    let isQuoteOpen = false;\n    let isComment = false;\n    let currentQuote = \"\";\n    let currentLine = new Line([], 0);\n    let currentToken = \"\";\n    let parentLevels = [root];\n    for (let i = 0; i < data.length; i++) {\n        const c = data[i];\n        let nextLine = null;\n        if (isComment && c != '\\n')\n            continue;\n        switch (c) {\n            // handle comments\n            case '#':\n                if (currentToken.length == 0 && !isQuoteOpen) {\n                    isComment = true;\n                }\n                break;\n            // handle quotes\n            case '\"':\n            case '`':\n                if (isQuoteOpen && c == currentQuote) {\n                    isQuoteOpen = false;\n                    if (currentToken.length == 0) {\n                        currentLine.tokens.push('');\n                    }\n                    break;\n                }\n                if (!isQuoteOpen && currentToken.length == 0) {\n                    isQuoteOpen = true;\n                    currentQuote = c;\n                    break;\n                }\n                if (!isQuoteOpen) {\n                    throw new Error(`Unescaped quote in string after ${currentToken}`);\n                }\n                break;\n            // handle newlines\n            case '\\n':\n                if (currentToken != '' && !isComment) {\n                    currentLine.tokens.push(currentToken);\n                }\n                currentToken = '';\n                isComment = false;\n                nextLine = new Line([], 0);\n                // ignore blank lines\n                if (currentLine.tokens.length == 0) {\n                    currentLine = nextLine;\n                    continue;\n                }\n                // handle too much indentation\n                if (currentLine.indentation > parentLevels.length - 1) {\n                    throw new Error(`Unexpected indentation for line ${currentLine.tokens.join(' ')}`);\n                }\n                // adding the line as children to its parent based on indentation\n                if (currentLine.indentation >= 0) {\n                    parentLevels[currentLine.indentation].children.push(currentLine);\n                }\n                // adding new line as parent level for following data\n                if (currentLine.indentation == parentLevels.length - 1) {\n                    parentLevels.push(currentLine);\n                }\n                else {\n                    // if indentation is smaller then the number of parents, it means that\n                    // previous deeper nested parents has ended their block, so we delete them\n                    parentLevels = parentLevels.slice(0, currentLine.indentation + 1);\n                    parentLevels.push(currentLine);\n                }\n                if (isQuoteOpen) {\n                    throw new Error(`A quote was left open near: '${currentToken}'`);\n                }\n                currentLine = nextLine;\n                break;\n            // handle spaces\n            case ' ':\n                if (!isQuoteOpen) {\n                    if (currentToken.length > 0) {\n                        currentLine.tokens.push(currentToken);\n                        currentToken = \"\";\n                    }\n                }\n                else {\n                    currentToken += \" \";\n                }\n                break;\n            // handle tabs\n            case '\\t':\n                if (!isQuoteOpen &&\n                    currentLine.tokens.length == 0 &&\n                    currentToken.length == 0) {\n                    currentLine.indentation++;\n                }\n                else if (!isQuoteOpen && currentToken.length > 0) {\n                    // Add tabs as token separators too to avoid the error in some official files\n                    currentLine.tokens.push(currentToken);\n                    currentToken = \"\";\n                }\n                else {\n                    currentToken += \"\\t\";\n                }\n                break;\n            // handle other characters\n            default:\n                currentToken += c;\n        }\n    }\n    return root;\n}\n","export class Sprite {\n    constructor() {\n        this.name = \"\";\n        this.scale = 1;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'sprite') {\n            throw new Error('Not a sprite');\n        }\n        let sprite = new Sprite();\n        sprite.name = dataLine.tokens[1];\n        // check if there's a scaling for the sprite\n        if (dataLine.children.length > 0) {\n            if (dataLine.children[0].tokens[0] == 'scale') {\n                sprite.scale = parseFloat(dataLine.children[0].tokens[1]);\n            }\n        }\n        return sprite;\n    }\n}\n","import { Sprite } from \"./Sprite\";\nexport class SystemObject {\n    constructor(esData) {\n        this.esData = esData;\n        this.name = \"\";\n        this.sprite = null;\n        this.distance = 0;\n        this.period = 0;\n        this.offset = 0;\n        this.objects = [];\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'object') {\n            throw new Error(\"Not an object\");\n        }\n        const systemObject = new SystemObject(data);\n        systemObject.name = (dataLine.tokens.length == 2) ? dataLine.tokens[1] : \"\";\n        const objects = [];\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                case 'sprite':\n                    systemObject.sprite = Sprite.fromLine(data, child);\n                    break;\n                case 'distance':\n                    systemObject.distance = parseFloat(child.tokens[1]);\n                    break;\n                case 'period':\n                    systemObject.period = parseFloat(child.tokens[1]);\n                    break;\n                case 'offset':\n                    systemObject.offset = parseInt(child.tokens[1]);\n                    break;\n                case 'object':\n                    objects.push(SystemObject.fromLine(data, child));\n            }\n        }\n        systemObject.objects = objects;\n        return systemObject;\n    }\n}\n","export class TravelDistance {\n    constructor() {\n        this.link = 0;\n        this.jump = 0;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'arrival' &&\n            dataLine.tokens[0] != 'departure') {\n            throw new Error(\"Not a travel distance (either 'arrival' or 'departure')\");\n        }\n        let link = 0;\n        let jump = 0;\n        if (dataLine.tokens[1]) {\n            link = jump = parseInt(dataLine.tokens[1]);\n        }\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                // Extract link distance\n                case 'link':\n                    link = parseInt(child.tokens[1]);\n                    break;\n                // Extract jump distance\n                case 'jump':\n                    jump = parseInt(child.tokens[1]);\n                    break;\n            }\n        }\n        const distance = new TravelDistance();\n        distance.link = link;\n        distance.jump = jump;\n        return distance;\n    }\n}\n","export class RamscoopModifier {\n    constructor() {\n        this.universal = 1;\n        this.addend = 0;\n        this.multiplier = 1;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'ramscoop') {\n            throw new Error(\"Not a ramscoop data\");\n        }\n        let universal = 1;\n        let addend = 0;\n        let multiplier = 1;\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                case 'universal':\n                    universal = parseFloat(child.tokens[1]);\n                    break;\n                case 'addend':\n                    addend = parseFloat(child.tokens[1]);\n                    break;\n                case 'multiplier':\n                    multiplier = parseFloat(child.tokens[1]);\n                    break;\n            }\n        }\n        const ramscoop = new RamscoopModifier();\n        ramscoop.universal = universal;\n        ramscoop.addend = addend;\n        ramscoop.multiplier = multiplier;\n        return ramscoop;\n    }\n}\n","import { SystemObject } from \"./SystemObject\";\nimport { TravelDistance } from \"./TravelDistance\";\nimport { RamscoopModifier } from \"./RamscoopModifier\";\nexport class System {\n    constructor(data, name, pos) {\n        this.links = [];\n        this.government = \"\";\n        this.attributes = [];\n        this.objects = [];\n        this.inaccessible = false;\n        this.hidden = false;\n        this.shrouded = false;\n        this.music = \"\";\n        this.arrival = new TravelDistance();\n        this.departure = new TravelDistance();\n        this.ramscoop = new RamscoopModifier();\n        this.habitable = 0;\n        this.belt = { distance: 0, weight: 1 };\n        this.invisibleFence = 10000;\n        this.jumpRange = 0;\n        this.haze = \"\";\n        this.asteroids = [];\n        this.minables = [];\n        this.trades = [];\n        this.fleets = [];\n        this.raids = [];\n        this.noRaid = false;\n        this.hazards = [];\n        this.starfieldDensity = 1;\n        this.isSelected = false;\n        this.name = name;\n        this.position = pos;\n        this.esData = data;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'system') {\n            throw new Error(\"Not a system\");\n        }\n        const name = dataLine.tokens[1];\n        const system = new System(data, name, { x: 0, y: 0 });\n        let foundPos = false;\n        let links = [];\n        const objects = [];\n        let asteroids = [];\n        let minables = [];\n        let trades = [];\n        let fleets = [];\n        let raids = [];\n        let hazards = [];\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                // Extract the position\n                case 'pos':\n                    system.position = {\n                        x: parseInt(child.tokens[1]),\n                        y: parseInt(child.tokens[2])\n                    };\n                    foundPos = true;\n                    break;\n                // Extract the links\n                case 'link':\n                    links.push(child.tokens[1]);\n                    break;\n                // Set the system government\n                case 'government':\n                    system.government = child.tokens[1];\n                    break;\n                // Save a list of attributes\n                case 'attributes':\n                    system.attributes = child.tokens.slice(1);\n                    break;\n                // Parse the objects in the system\n                case 'object':\n                    objects.push(SystemObject.fromLine(data, child));\n                    break;\n                // Parse the arrival distance\n                case 'arrival':\n                    system.arrival = TravelDistance.fromLine(data, child);\n                    break;\n                // Parse the departure distance\n                case 'departure':\n                    system.departure = TravelDistance.fromLine(data, child);\n                    break;\n                // Inaccessible system\n                case 'inaccessible':\n                    system.inaccessible = true;\n                    break;\n                // Hidden system\n                case 'hidden':\n                    system.hidden = true;\n                    break;\n                // Shrouded system\n                case 'shrouded':\n                    system.shrouded = true;\n                    break;\n                // Music for this specific system\n                case 'music':\n                    system.music = child.tokens[1];\n                    break;\n                // Changes to how the ramscoop works in this system\n                case 'ramscoop':\n                    system.ramscoop = RamscoopModifier.fromLine(data, child);\n                    break;\n                // Habitable zone\n                case 'habitable':\n                    system.habitable = parseInt(child.tokens[1]);\n                    break;\n                // Data for the asteroid belt\n                case 'belt':\n                    system.belt = {\n                        distance: parseInt(child.tokens[1]),\n                        weight: (child.tokens[2])\n                            ? parseFloat(child.tokens[2])\n                            : 1\n                    };\n                    break;\n                // Invisible fence distance for the NPCs\n                case 'invisible fence':\n                    system.invisibleFence = parseInt(child.tokens[1]);\n                    break;\n                // Jump range\n                case 'jump range':\n                    system.jumpRange = parseInt(child.tokens[1]);\n                    break;\n                // Haze sprite\n                case 'haze':\n                    system.haze = child.tokens[1];\n                    break;\n                // Asteroid type data\n                case 'asteroids':\n                    asteroids.push({\n                        name: child.tokens[1],\n                        count: parseInt(child.tokens[2]),\n                        energy: parseFloat(child.tokens[3])\n                    });\n                    break;\n                // Mineable type data\n                case 'minables':\n                    minables.push({\n                        name: child.tokens[1],\n                        count: parseInt(child.tokens[2]),\n                        energy: parseFloat(child.tokens[3])\n                    });\n                    break;\n                // Trade info\n                case 'trade':\n                    trades.push({\n                        commodity: child.tokens[1],\n                        cost: parseInt(child.tokens[2])\n                    });\n                    break;\n                // Fleets that will spawn\n                case 'fleet':\n                    fleets.push({\n                        name: child.tokens[1],\n                        period: parseInt(child.tokens[2])\n                    });\n                    break;\n                // Raids coming into the system\n                case 'raid':\n                    raids.push({\n                        fleet: child.tokens[1],\n                        minAttraction: parseInt(child.tokens[2]),\n                        maxAttraction: parseInt(child.tokens[3])\n                    });\n                    break;\n                case 'no raid':\n                    system.noRaid = true;\n                    break;\n                // Hazards present in the system\n                case 'hazard':\n                    hazards.push({\n                        name: child.tokens[1],\n                        period: parseInt(child.tokens[2])\n                    });\n                    break;\n                // Density of the stars in the background\n                case 'starfield density':\n                    system.starfieldDensity = parseFloat(child.tokens[1]);\n                    break;\n            }\n        }\n        if (!foundPos) {\n            throw new Error(\"No position found for this system\");\n        }\n        system.links = links;\n        system.objects = objects;\n        system.asteroids = asteroids;\n        system.minables = minables;\n        system.trades = trades;\n        system.fleets = fleets;\n        system.raids = raids;\n        system.hazards = hazards;\n        return system;\n    }\n}\n","export class Galaxy {\n    constructor(data, name, pos) {\n        this.position = { x: 0, y: 0 };\n        this.sprite = \"\";\n        this.name = name;\n        this.position = pos;\n        this.esData = data;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'galaxy') {\n            throw new Error(\"Not a galaxy\");\n        }\n        const name = dataLine.tokens[1];\n        let pos = { x: 0, y: 0 };\n        let foundPos = false;\n        let sprite = \"\";\n        for (let child of dataLine.children) {\n            if (child.tokens[0] == 'pos') {\n                pos = {\n                    x: parseInt(child.tokens[1]),\n                    y: parseInt(child.tokens[2])\n                };\n                foundPos = true;\n                continue;\n            }\n            if (child.tokens[0] == 'sprite') {\n                sprite = child.tokens[1];\n            }\n        }\n        if (!foundPos) {\n            throw new Error(\"No position found for this system\");\n        }\n        const galaxy = new Galaxy(data, name, pos);\n        galaxy.sprite = sprite;\n        return galaxy;\n    }\n}\n","export class Color {\n    constructor(name, r, g, b, a = 255) {\n        this.name = name;\n        this.r = r;\n        this.g = g;\n        this.b = b;\n        this.a = a;\n    }\n    toString() {\n        if (this.a == 255) {\n            return `rgb(${this.r}, ${this.g}, ${this.b})`;\n        }\n        return `rgba(${this.r}, ${this.g}, ${this.b}, ${this.a})`;\n    }\n    // The first argument is important to allow standardization across the different game objects\n    static fromLine(_, dataLine) {\n        let label = dataLine.tokens[1];\n        let r = parseFloat(dataLine.tokens[2]);\n        let g = parseFloat(dataLine.tokens[3]);\n        let b = parseFloat(dataLine.tokens[4]);\n        let a = 255;\n        if (dataLine.tokens.length == 6) {\n            a = parseFloat(dataLine.tokens[5]);\n        }\n        return Color.fromPercentages(label, r, g, b, a);\n    }\n    static fromPercentages(label, r, g, b, a) {\n        return new Color(label, r * 255, g * 255, b * 255, a * 255);\n    }\n    static fromGovernment(data, govName) {\n        let government = data.governments.get(govName);\n        if (!government) {\n            return null;\n        }\n        if (government.color instanceof Color) {\n            return government.color;\n        }\n        let color = data.colors.get(government.color);\n        if (!color) {\n            return null;\n        }\n        return color;\n    }\n}\n","import { Color } from \"./Color\";\nexport class Government {\n    constructor(data, name) {\n        this.color = \"\";\n        this.esData = data;\n        this.name = name;\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'government') {\n            throw new Error(\"Not a government\");\n        }\n        const name = dataLine.tokens[1];\n        let color = \"\";\n        for (let child of dataLine.children) {\n            if (child.tokens[0] == 'color') {\n                if (child.tokens.length == 2) {\n                    color = child.tokens[1];\n                }\n                else {\n                    let r = parseFloat(dataLine.tokens[1]);\n                    let g = parseFloat(dataLine.tokens[2]);\n                    let b = parseFloat(dataLine.tokens[3]);\n                    let a = 255;\n                    if (dataLine.tokens.length == 5) {\n                        a = parseFloat(dataLine.tokens[4]);\n                    }\n                    color = Color.fromPercentages('', r, g, b, a);\n                }\n            }\n        }\n        const government = new Government(data, name);\n        government.color = color;\n        return government;\n    }\n}\n","export class Planet {\n    constructor(esData, name) {\n        this.esData = esData;\n        this.name = name;\n        this.wormhole = \"\";\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'planet') {\n            throw new Error(\"Not a planet\");\n        }\n        const name = dataLine.tokens[1];\n        let wormhole = \"\";\n        for (let child of dataLine.children) {\n            if (child.tokens[0] == 'wormhole') {\n                wormhole = child.tokens[1];\n            }\n        }\n        let planet = new Planet(data, name);\n        planet.wormhole = wormhole;\n        return planet;\n    }\n}\n","import { Color } from \"./Color\";\nexport class Wormhole {\n    constructor(esData, name) {\n        this.esData = esData;\n        this.name = name;\n        this.isMappable = false;\n        this.links = [];\n        this.color = \"\";\n    }\n    static fromLine(data, dataLine) {\n        if (dataLine.tokens[0] != 'wormhole') {\n            throw new Error(\"Not a wormhole\");\n        }\n        const name = dataLine.tokens[1];\n        let mappable = false;\n        let color = \"\";\n        let links = [];\n        for (let child of dataLine.children) {\n            switch (child.tokens[0]) {\n                case 'color':\n                    if (child.tokens.length == 2) {\n                        color = child.tokens[1];\n                    }\n                    else {\n                        let r = parseFloat(dataLine.tokens[1]);\n                        let g = parseFloat(dataLine.tokens[2]);\n                        let b = parseFloat(dataLine.tokens[3]);\n                        let a = 255;\n                        if (dataLine.tokens.length == 5) {\n                            a = parseFloat(dataLine.tokens[4]);\n                        }\n                        color = Color.fromPercentages('', r, g, b, a);\n                    }\n                    break;\n                case 'link':\n                    links.push([child.tokens[1], child.tokens[2]]);\n                    break;\n                case 'mappable':\n                    mappable = true;\n                    break;\n            }\n        }\n        const wormhole = new Wormhole(data, name);\n        wormhole.isMappable = mappable;\n        wormhole.color = color;\n        wormhole.links = links;\n        return wormhole;\n    }\n}\n","import { ParsedData } from \"./es-objects/ParsedData\";\nimport { System } from \"./es-objects/System\";\nimport { Galaxy } from \"./es-objects/Galaxy\";\nimport { Color } from \"./es-objects/Color\";\nimport { Government } from \"./es-objects/Government\";\nimport { Planet } from \"./es-objects/Planet\";\nimport { Wormhole } from \"./es-objects/Wormhole\";\nexport function parse(root, previousData = null) {\n    const parsedData = previousData !== null && previousData !== void 0 ? previousData : new ParsedData();\n    for (let child of root.children) {\n        if (child.tokens[0] == 'system') {\n            parsedData.addStarSystem(System.fromLine(parsedData, child));\n        }\n        else if (child.tokens[0] == 'galaxy') {\n            parsedData.addGalaxy(Galaxy.fromLine(parsedData, child));\n        }\n        else if (child.tokens[0] == 'color') {\n            parsedData.addColor(Color.fromLine(parsedData, child));\n        }\n        else if (child.tokens[0] == 'government') {\n            parsedData.addGovernment(Government.fromLine(parsedData, child));\n        }\n        else if (child.tokens[0] == 'planet') {\n            parsedData.addPlanet(Planet.fromLine(parsedData, child));\n        }\n        else if (child.tokens[0] == 'wormhole') {\n            parsedData.addWormhole(Wormhole.fromLine(parsedData, child));\n        }\n    }\n    return parsedData;\n}\n","export function readFile(file) {\n    return new Promise((resolve, _) => {\n        const reader = new FileReader();\n        reader.onload = () => {\n            resolve(reader.result);\n        };\n        reader.readAsText(file);\n    });\n}\n","// import { parse } from \"./parser\";\nimport { ParsedData } from \"./es-objects/ParsedData\";\nimport { lex } from \"./lexer\";\nimport { parse } from \"./parser\";\nimport { readFile } from \"./utils\";\nexport async function parseFile(file, filename, previousData) {\n    const parsedData = previousData !== null && previousData !== void 0 ? previousData : new ParsedData();\n    let fileContent = await readFile(file);\n    let data = lex(fileContent, filename);\n    parse(data, parsedData);\n    return parsedData;\n}\nexport async function parseFiles(files) {\n    const parsedData = new ParsedData();\n    for (let file of files) {\n        await parseFile(file, file.webkitRelativePath, parsedData);\n    }\n    return parsedData;\n}\n","export class CustomEventTarget {\n    listeners;\n    constructor() {\n        this.listeners = new Map();\n    }\n    addListener(event, listener) {\n        if (!this.listeners.has(event)) {\n            this.listeners.set(event, []);\n        }\n        this.listeners.get(event).push(listener);\n    }\n    removeListener(event, listener) {\n        if (!this.listeners.has(event))\n            return;\n        let listeners = this.listeners.get(event);\n        let index = listeners.findIndex((x) => x === listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n        this.listeners.set(event, listeners);\n    }\n    /**\n     * Clear all listeners for the specified event\n     */\n    clearListeners(event) {\n        if (!this.listeners.has(event))\n            return;\n        this.listeners.set(event, []);\n    }\n    /**\n     * Clear all listeners for all the events\n     */\n    clearAllListeners() {\n        this.listeners.clear();\n    }\n    /**\n     * Call all the listeners for a specific event in a synchronous way.\n     * If an async listener is found, it gets awaited before continuing.\n     */\n    async fireEvent(event, details) {\n        if (!this.listeners.has(event))\n            return;\n        for (let listener of this.listeners.get(event)) {\n            let val = listener(details);\n            if (val instanceof Promise) {\n                await val;\n            }\n        }\n    }\n    /**\n     * Call all the listeners for a specific event in an asynchronous way.\n     * All the async listeners found are awaited using Promise.all().\n     */\n    async fireEventAsync(event, details) {\n        if (!this.listeners.has(event))\n            return;\n        let promises = [];\n        for (let listener of this.listeners.get(event)) {\n            let ret = listener(details);\n            if (ret instanceof Promise) {\n                promises.push(ret);\n            }\n        }\n        await Promise.all(promises);\n    }\n    /**\n     * Call all the listeners for a specific event as if they were all\n     * synchronous functions. Not recommended, since it doesn't handle\n     * async at all. Only use it when all listeners are synchronous.\n     */\n    fireEventSync(event, details) {\n        if (!this.listeners.has(event))\n            return;\n        for (let listener of this.listeners.get(event)) {\n            listener(details);\n        }\n    }\n}\n","import { CustomEventTarget } from \"@andreadev/custom-event-target\";\nexport class CanvasLib extends CustomEventTarget {\n    constructor(canvas) {\n        super();\n        this.canvas = canvas;\n        this.plugins = new Map();\n        this.layers = [];\n        this.layersActions = new CustomEventTarget();\n        const ctx = this.canvas.getContext(\"2d\");\n        if (ctx == null) {\n            throw ('Could not get the context for the canvas');\n        }\n        this.context = ctx;\n    }\n    async renderCycle() {\n        await this.paint();\n        window.requestAnimationFrame(() => this.renderCycle());\n    }\n    use(PluginClass, settings) {\n        const plugin = new PluginClass(this, settings);\n        this.plugins.set(plugin.name, plugin);\n    }\n    getPlugin(PluginClass) {\n        for (let plugin of this.plugins.values()) {\n            if (plugin instanceof PluginClass) {\n                return plugin;\n            }\n        }\n        return undefined;\n    }\n    /**\n     * Main paint function for the canvas\n     *\n     * @param shouldClear If true, clear the canvas before painting\n     */\n    async paint(shouldClear = true) {\n        this.prepareContext(shouldClear);\n        const prop = { context: this.context };\n        await this.layersActions.fireEvent('_prerender', prop);\n        for (let layer of this.layers) {\n            await this.layersActions.fireEvent(layer.name, prop);\n        }\n        await this.layersActions.fireEvent('_postrender', prop);\n    }\n    prepareContext(shouldClear = true) {\n        this.context.resetTransform();\n        if (shouldClear) {\n            this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);\n        }\n        this.context.translate(Math.floor(this.canvas.width / 2), Math.floor(this.canvas.height / 2));\n    }\n    /**\n     * Add a new layer to handle drawing on multiple levels\n     */\n    addLayer(name, order) {\n        this.layers.push({\n            name,\n            order\n        });\n        this.layers.sort((a, b) => a.order - b.order);\n    }\n    /**\n     * Remove a layer\n     */\n    removeLayer(name) {\n        this.layers.splice(this.layers.findIndex((l) => l.name == name), 1);\n        this.layersActions.clearListeners(name);\n    }\n    /**\n     * Just a utility function to make the user code less heavy\n     */\n    on(layer, callback) {\n        this.layersActions.addListener(layer, callback);\n    }\n    remove(layer, callback) {\n        this.layersActions.removeListener(layer, callback);\n    }\n    startRendering() {\n        window.requestAnimationFrame(() => this.renderCycle());\n    }\n}\n","export function throttle(func, wait) {\n    let timeout;\n    let isThrottled = false;\n    return function () {\n        if (isThrottled) {\n            return;\n        }\n        const context = this;\n        const args = arguments;\n        func.apply(context, args);\n        clearTimeout(timeout);\n        timeout = setTimeout(() => (isThrottled = false), wait);\n        isThrottled = true;\n    };\n}\n","import { throttle } from \"../utils\";\nexport class PanZoomPlugin {\n    constructor(app, settings) {\n        var _a, _b, _c;\n        this.app = app;\n        this.settings = settings;\n        this.name = \"PanZoom\";\n        this.currentZoom = 1;\n        this.minZoom = 0.1;\n        this.maxZoom = 10;\n        this.panButton = 1; // Middle\n        this.cameraOffset = { x: 0, y: 0 };\n        this.isPanning = false;\n        this.startedPanningOffset = { x: 0, y: 0 };\n        this.startedPanningPosition = { x: 0, y: 0 };\n        this.throttle = -1;\n        this.bindEvents();\n        this.minZoom = (_a = settings.minZoom) !== null && _a !== void 0 ? _a : this.minZoom;\n        this.maxZoom = (_b = settings.maxZoom) !== null && _b !== void 0 ? _b : this.maxZoom;\n        this.throttle = (_c = settings.throttle) !== null && _c !== void 0 ? _c : this.throttle;\n        this.throttledPaint = throttle(this.app.paint.bind(this.app), this.throttle);\n        let mouseButtons = {\n            'left': 0,\n            'middle': 1,\n            'right': 2,\n            'any': -1\n        };\n        if (settings.panButton)\n            this.panButton = mouseButtons[settings.panButton];\n    }\n    bindEvents() {\n        this.app.on('_prerender', this.transformCanvas.bind(this));\n        this.app.canvas.addEventListener('pointerdown', this.onPointerDown.bind(this));\n        this.app.canvas.addEventListener('pointerup', this.onPointerUp.bind(this));\n        this.app.canvas.addEventListener('pointermove', this.onPointerMove.bind(this));\n        this.app.canvas.addEventListener('pointerleave', this.onPointerUp.bind(this));\n        this.app.canvas.addEventListener('wheel', this.onScroll.bind(this));\n    }\n    screenToLocalPoint(x, y) {\n        let hw = this.app.canvas.width / 2;\n        let hh = this.app.canvas.height / 2;\n        let tx = this.cameraOffset.x;\n        let ty = this.cameraOffset.y;\n        let z = this.currentZoom;\n        // center\n        x = x - hw;\n        y = y - hh;\n        // scale\n        x = x / z;\n        y = y / z;\n        // trnaslate\n        x = x - tx;\n        y = y - ty;\n        return { x, y };\n    }\n    zoom(amount) {\n        this.currentZoom += amount;\n        this.currentZoom = Math.min(Math.max(this.minZoom, this.currentZoom), this.maxZoom);\n        this.currentZoom = Math.floor(this.currentZoom * 1000) / 1000;\n        this.updateRender();\n    }\n    transformCanvas(prop) {\n        prop.context.scale(this.currentZoom, this.currentZoom);\n        prop.context.translate(this.cameraOffset.x, this.cameraOffset.y);\n    }\n    onPointerDown(e) {\n        if (e.button == this.panButton || this.panButton == -1) {\n            this.isPanning = true;\n            this.startedPanningOffset = this.cameraOffset;\n            this.startedPanningPosition = { x: e.clientX, y: e.clientY };\n        }\n    }\n    onPointerUp(_) {\n        this.isPanning = false;\n    }\n    onPointerMove(e) {\n        if (this.isPanning) {\n            this.cameraOffset = {\n                x: this.startedPanningOffset.x + ((e.clientX - this.startedPanningPosition.x) / this.currentZoom),\n                y: this.startedPanningOffset.y + ((e.clientY - this.startedPanningPosition.y) / this.currentZoom),\n            };\n            this.updateRender();\n        }\n    }\n    onScroll(e) {\n        this.zoom(e.deltaY / 1000);\n    }\n    updateRender() {\n        if (this.throttle > 0) {\n            this.throttledPaint();\n        }\n        else {\n            this.app.paint();\n        }\n    }\n    static getDataFromMatrix(matrix) {\n        return {\n            scaleX: matrix.a,\n            scaleY: matrix.d,\n            translateX: matrix.e,\n            translateY: matrix.f,\n            skewX: matrix.b,\n            skewY: matrix.c\n        };\n    }\n    static fixedNumber(number, context, direction = 'x') {\n        let { scaleX, scaleY } = this.getDataFromMatrix(context.getTransform());\n        return direction == 'x' ? number * (1 / scaleX) : number * (1 / scaleY);\n    }\n    static fixedSize(width, height, context) {\n        let { scaleX, scaleY } = this.getDataFromMatrix(context.getTransform());\n        return {\n            width: width * (1 / scaleX),\n            height: height * (1 / scaleY)\n        };\n    }\n}\n","import { System } from 'es-data-parser';\nimport { PanZoomPlugin } from '@andreadev/canvas-lib/dist/modules/pan-zoom-plugin';\nimport { Color } from 'es-data-parser';\nimport { Point } from 'es-data-parser';\n\nconst pinSize = 3;\nconst pinLineWidth = 2;\nconst linkColor = 'rgba(255,255,255,0.2)';\nconst tagNameOffset = 4;\nconst tagNameColor = 'rgba(255,255,255,0.3)';\nconst tagNameFontSize = 12;\n\n/**\n * Calculate the distance of a point to a star system\n */\nexport function distanceFromSystem(system: System, position: Point): number {\n    return Math.sqrt(\n        Math.pow(system.position.x - position.x, 2) +\n        Math.pow(system.position.y - position.y, 2)\n    );\n}\n\n/**\n * Rendering function for the endless sky systems\n */\nexport function renderSystem(system: System, ctx: CanvasRenderingContext2D) {\n    // renderSystemSelection(system, ctx);\n    renderSystemLinks(system, ctx);\n    renderSystemPin(system, ctx);\n    renderSystemName(system, ctx);\n}\n\nexport function renderSystemSelection(system: System, ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.fillStyle = 'rgba(100,100,255,0.2)';\n    ctx.strokeStyle = 'darkblue';\n    ctx.lineWidth = PanZoomPlugin.fixedNumber(1, ctx);\n    let width = PanZoomPlugin.fixedNumber(15, ctx);\n    ctx.ellipse(\n        system.position.x,\n        system.position.y,\n        width,\n        width,\n        0, 0, 2 * Math.PI\n    );\n    ctx.fill();\n    ctx.stroke();\n}\n\nexport function renderSystemLinks(system: System, ctx: CanvasRenderingContext2D) {\n    // Render the links\n    ctx.lineWidth = PanZoomPlugin.fixedNumber(1, ctx);\n    ctx.strokeStyle = linkColor;\n\n    for (let link of system.links) {\n        ctx.beginPath();\n        ctx.moveTo(system.position.x, system.position.y);\n\n        const targetSystem = system.esData.starSystems.get(link);\n        if (!targetSystem)\n            continue;\n\n        ctx.lineTo(targetSystem.position.x, targetSystem.position.y);\n        ctx.stroke();\n    }\n}\n\nexport function renderSystemPin(system: System, ctx: CanvasRenderingContext2D) {\n    // Render the circle\n    // Get the government color\n    let color = Color.fromGovernment(system.esData, system.government)?.toString();\n    if (!color) {\n        color = '#aaa';\n    }\n\n    ctx.beginPath();\n    ctx.fillStyle = 'black';\n    ctx.strokeStyle = color;\n    ctx.lineWidth = PanZoomPlugin.fixedNumber(pinLineWidth, ctx);\n    let {width, height} = PanZoomPlugin.fixedSize(pinSize, pinSize, ctx);\n    ctx.ellipse(system.position.x, system.position.y, width, height, 0, 0, 2 * Math.PI);\n    ctx.fill();\n    ctx.stroke();\n}\n\nexport function renderSystemName(system: System, ctx: CanvasRenderingContext2D) {\n    // Render the name\n    let { scaleX: scale } = PanZoomPlugin.getDataFromMatrix(ctx.getTransform());\n    // If it's too small to render the name, interrupt the export function\n    if (scale < 0.5) {\n        return;\n    }\n\n    let fontSize = PanZoomPlugin.fixedNumber(tagNameFontSize, ctx)\n    ctx.font = `${fontSize}px Arial`;\n    ctx.fillStyle = tagNameColor;\n    let offset = PanZoomPlugin.fixedNumber(tagNameOffset, ctx);\n    let {width, height} = PanZoomPlugin.fixedSize(pinSize, pinSize, ctx);\n    ctx.fillText(system.name, system.position.x + width + offset, system.position.y + height);\n}\n","import { Galaxy } from \"es-data-parser\";\nimport { SpriteList } from \"./sprites\";\n\nexport async function renderGalaxy(galaxy: Galaxy, spriteList: SpriteList, ctx: CanvasRenderingContext2D) {\n    // Render the sprite\n    if (galaxy.sprite == '') {\n        return;\n    }\n\n    let spriteImage : HTMLImageElement | undefined = spriteList.loadedSprites.get(galaxy.sprite);\n\n    // The sprite image isn't loaded\n    if (!spriteImage) {\n        const spriteFile = spriteList.sprites.get(galaxy.sprite);\n\n        if (!spriteFile) {\n            console.error(`Sprite ${galaxy.sprite} not found`);\n            return;\n        }\n\n        spriteImage = await spriteList.load(galaxy.sprite, spriteFile);\n    }\n\n    ctx.drawImage(\n        spriteImage,\n        galaxy.position.x - (spriteImage.width / 2),\n        galaxy.position.y - (spriteImage.height / 2)\n    );\n}\n","import { ParsedData, SystemObject } from \"es-data-parser\";\nimport { PanZoomPlugin } from \"@andreadev/canvas-lib/dist/modules/pan-zoom-plugin\";\nimport { View } from \"./abstract\";\nimport { CanvasLib } from \"@andreadev/canvas-lib\";\nimport { System } from \"es-data-parser\";\nimport { distanceFromSystem } from \"../game-functions/system\";\nimport { renderSystemSelection, renderSystemPin, renderSystemLinks, renderSystemName } from \"../game-functions/system\";\nimport { renderGalaxy } from \"../game-functions/galaxy\";\nimport { SpriteList } from \"../game-functions/sprites\";\nimport { RenderingProp } from \"@andreadev/canvas-lib/dist/main\";\n\n\nexport class GalaxyView extends EventTarget implements View {\n\n    shouldRenderNames = true;\n    shouldRenderLinks = true;\n    shouldRenderDots  = true;\n    shouldRenderGalaxies = true;\n    shouldRenderWormholeLinks = true;\n    shouldRenderHiddenWormholes = false;\n    currentlySelected: System | null = null;\n    systemLinksCache: Set<string> = new Set();\n    savedZoom: number = 1;\n    savedPosition = {x: 0, y: 0};\n\n    constructor(private esData: ParsedData, private spriteList: SpriteList, private canvasLib: CanvasLib) { \n        super();\n\n        this.esData = esData;\n        this.canvasLib.canvas.addEventListener('pointerdown', this.onCanvasClick.bind(this));\n    }\n\n    async activate(lib: CanvasLib) {\n        document.getElementById('toggle-galaxies')?.addEventListener('change', this.toggleGalaxies.bind(this))\n        document.getElementById('toggle-pins')?.addEventListener('change', this.toggleDots.bind(this))\n        document.getElementById('toggle-names')?.addEventListener('change', this.toggleNames.bind(this))\n        document.getElementById('toggle-links')?.addEventListener('change', this.toggleLinks.bind(this))\n        document.getElementById('toggle-wormholes')?.addEventListener('change', this.toggleWormholes.bind(this))\n        document.getElementById('toggle-hidden-wormholes')?.addEventListener('change', this.toggleHiddenWormholes.bind(this))\n\n        this.buildSystemLinksCache();\n\n        await this.preloadGalaxySprites();\n\n        lib.addLayer('galaxies', 0);\n        lib.addLayer('links', 1);\n        lib.addLayer('wormhole-links', 2);\n        lib.addLayer('systems', 3);\n\n        lib.on('galaxies', this.renderGalaxies.bind(this));\n        lib.on('links', this.renderLinks.bind(this));\n        lib.on('wormhole-links', this.renderWormholeLinks.bind(this));\n        lib.on('systems', this.renderSystems.bind(this));\n\n        // Reset lib zoom and position as when the view was left\n        let panZoomPlug = lib.getPlugin(PanZoomPlugin)!;\n        panZoomPlug.currentZoom = this.savedZoom;\n        panZoomPlug.cameraOffset = this.savedPosition;\n    }\n\n    async deactivate(lib: CanvasLib) {\n        // Removing event listeners will not work because of \"bind\"\n        // document.getElementById('toggle-galaxies')?.removeEventListener('change', this.toggleGalaxies)\n        // document.getElementById('toggle-pins')?.addEventListener('change', this.toggleDots)\n        // document.getElementById('toggle-names')?.addEventListener('change', this.toggleNames)\n        // document.getElementById('toggle-links')?.addEventListener('change', this.toggleLinks)\n        lib.removeLayer('galaxies');\n        lib.removeLayer('links');\n        lib.removeLayer('wormhole-links');\n        lib.removeLayer('systems');\n\n        let panZoomPlug = lib.getPlugin(PanZoomPlugin)!;\n        this.savedZoom = panZoomPlug.currentZoom;\n        this.savedPosition = panZoomPlug.cameraOffset;\n    }\n\n    toggleNames(e: Event) {\n        this.shouldRenderNames = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleLinks(e: Event) {\n        this.shouldRenderLinks = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleDots(e: Event) {\n        this.shouldRenderDots = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleGalaxies(e: Event) {\n        this.shouldRenderGalaxies = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleWormholes(e: Event) {\n        this.shouldRenderWormholeLinks = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n    toggleHiddenWormholes(e: Event) {\n        this.shouldRenderHiddenWormholes = (<HTMLInputElement>e.target).checked; \n        this.canvasLib.paint();\n    }\n\n    onCanvasClick(e: PointerEvent) {\n        if (e.button !== 0) return;\n\n        let panZoomPlugin = this.canvasLib.getPlugin(PanZoomPlugin);\n        if (!panZoomPlugin) return;\n\n        let point = panZoomPlugin.screenToLocalPoint(e.clientX, e.clientY);\n\n        let closest: System | null = null;\n        let closestDistance = 10000; // High number\n        let minimumDistance = 10;\n        let ctx = this.canvasLib.canvas.getContext('2d');\n        if (ctx) {\n            minimumDistance = PanZoomPlugin.fixedNumber(10, ctx);\n        }\n\n        for (let system of this.esData.starSystems.values()) {\n            let d = distanceFromSystem(system, point);\n            if (d > minimumDistance) continue;\n\n            if (!closest || d < closestDistance) {\n                closest = system;\n                closestDistance = d;\n            }\n        }\n\n        if (!closest) {\n            this.removeSelection();\n            return;\n        }\n\n        this.selectSystem(closest);\n    }\n\n    removeSelection() {\n        if (!this.currentlySelected) return;\n\n        this.currentlySelected.isSelected = false;\n        this.currentlySelected = null;\n\n        this.canvasLib.paint();\n    }\n\n    selectSystem(system: System) {\n        this.currentlySelected = system;\n        this.updateStarSystemInfo(system);\n\n        let systemList = <HTMLSelectElement> document.getElementById('system-selection');\n        systemList.value = system.name;\n        \n        this.canvasLib.paint();\n    }\n\n    updateStarSystemInfo(system: System) {\n        document.querySelector('#system-name .value')!.textContent = system.name;\n        document.querySelector('#system-position .value')!.textContent = `${system.position.x}, ${system.position.y}`;\n        document.querySelector('#system-government .value')!.textContent = system.government;\n        document.querySelector('#system-attributes .value')!.textContent = system.attributes.join(', ');\n    }\n\n    buildSystemLinksCache() {\n        this.systemLinksCache = new Set();\n        for (let system of this.esData.starSystems.values()) {\n            for (let linked of system.links) {\n                let linkTxt = `${system.name}___${linked}`;\n                let reverseLinkTxt = `${linked}___${system.name}`;\n\n                if (this.systemLinksCache.has(reverseLinkTxt)) continue;\n\n                this.systemLinksCache.add(linkTxt);\n            }\n        }\n    }\n\n    async preloadGalaxySprites() {\n        for (let galaxy of this.esData.galaxies.values()) {\n            let spriteFile = this.spriteList.sprites.get(galaxy.sprite);\n            if (!spriteFile) continue;\n\n            await this.spriteList.load(galaxy.sprite, spriteFile);\n        }\n    }\n\n    async renderGalaxies({ context }: RenderingProp) {\n        if (!this.esData) return;\n\n        // Draw all galaxies\n        if (this.shouldRenderGalaxies) {\n            for (let galaxy of this.esData.galaxies.values()) {\n                await renderGalaxy(galaxy, this.spriteList, context);\n            }\n        }\n    }\n\n    async renderLinks({ context }: RenderingProp) {\n        if (!this.esData || !this.shouldRenderLinks) return;\n\n        // Draw all links\n        context.lineWidth = PanZoomPlugin.fixedNumber(1, context);\n        context.strokeStyle = 'rgba(255,255,255,0.2)';\n        for (let link of this.systemLinksCache.values()) {\n            let [originName, targetName] = link.split('___');\n\n            let origin = this.esData.starSystems.get(originName);\n            let target = this.esData.starSystems.get(targetName);\n\n            if (!target || !origin)\n                continue;\n\n            context.beginPath();\n            context.moveTo(origin.position.x, origin.position.y);\n\n            context.lineTo(target.position.x, target.position.y);\n            context.stroke();\n        }\n    }\n\n    async renderWormholeLinks({ context }: RenderingProp) {\n        if (!this.esData || !this.shouldRenderWormholeLinks) return;\n\n        // Draw all links\n        context.lineWidth = PanZoomPlugin.fixedNumber(1, context);\n        context.strokeStyle = 'rgba(100,100,255,0.5)';\n        for (let wormhole of this.esData.wormholes.values()) {\n            if (!wormhole.isMappable && !this.shouldRenderHiddenWormholes) continue;\n\n            for (let link of wormhole.links) {\n                let [originName, targetName] = link;\n\n                let origin = this.esData.starSystems.get(originName);\n                let target = this.esData.starSystems.get(targetName);\n\n                if (!target || !origin)\n                    continue;\n\n                context.beginPath();\n                context.moveTo(origin.position.x, origin.position.y);\n\n                context.lineTo(target.position.x, target.position.y);\n                context.stroke();\n            }\n        }\n    }\n\n    async renderSystems({ context }: RenderingProp) {\n        if (!this.esData) return;\n\n        // Draw all systems\n        for (let system of this.esData.starSystems.values()) {\n            if (this.currentlySelected == system)\n                renderSystemSelection(system, context);\n\n            if (this.shouldRenderDots) {\n                renderSystemPin(system, context);\n            }\n\n            if (this.shouldRenderNames) {\n                renderSystemName(system, context);\n            }\n        }\n    }\n}\n","export const openDirectory = async (): Promise<File[]> => {\n    // Use older apis because File System Access API seems to be working unnaturally\n    return new Promise((resolve) => {\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.webkitdirectory = true;\n        \n        input.addEventListener('change', () => {\n            let files = Array.from(input.files as FileList);\n            resolve(files);\n        });\n        if ('showPicker' in HTMLInputElement.prototype) {\n            input.showPicker();\n        } else {\n            input.click();\n        }\n    });\n};\n\n// Probabilmente è qualcosa che andrebbe piuttosto impostato nella libreria CanvasLib.\nexport const throttle = (fn: Function, wait: number = 300) => {\n    let inThrottle: boolean;\n    let lastFn: ReturnType<typeof setTimeout>;\n    let lastTime: number;\n\n    return function (this: any) {\n        const context = this,\n        args = arguments;\n        if (!inThrottle) {\n            fn.apply(context, args);\n            lastTime = Date.now();\n            inThrottle = true;\n        } else {\n            clearTimeout(lastFn);\n            lastFn = setTimeout(() => {\n                if (Date.now() - lastTime >= wait) {\n                    fn.apply(context, args);\n                    lastTime = Date.now();\n                }\n            }, Math.max(wait - (Date.now() - lastTime), 0));\n        }\n    };\n};\n\n// Load image\nexport function loadImage(file: File): Promise<HTMLImageElement> {\n    return new Promise((resolve, reject) => {\n        let img = new Image();\n        img.onload = () => {\n            resolve(img);\n        }\n        img.onerror = () => {\n            reject();\n        }\n        img.src = URL.createObjectURL(file);\n    });\n}\n","import { loadImage } from \"../utils\";\n\nexport class SpriteList {\n    sprites: Map<string, File> = new Map();\n    loadedSprites: Map<string, HTMLImageElement> = new Map();\n\n    constructor() {}\n\n    async load(spriteName: string, file: File) {\n        let img = await loadImage(file);\n        this.loadedSprites.set(spriteName, img);\n        return img;\n    }\n}\n\nexport function printSprite(filename: string, image: HTMLImageElement, scale: number, ctx: CanvasRenderingContext2D) {\n    let [name, _] = filename.split('.');\n\n    // additive -> lighter\n    switch (name.at(-1)) {\n        case '+':\n        case '~':\n            ctx.globalCompositeOperation = 'lighter';\n    }\n\n    let printWidth = image.width * scale;\n    let printHeight = image.height * scale;\n\n    ctx.drawImage(\n        image,\n        - (printWidth/2),\n        - (printHeight/2),\n        printWidth,\n        printHeight\n    );\n    \n    ctx.globalCompositeOperation = 'source-over';\n}\n","import { SystemObject } from \"es-data-parser\";\nimport { SpriteList, printSprite } from \"./sprites\";\n\nexport async function renderObjectOrbit(object: SystemObject, ctx: CanvasRenderingContext2D) {\n    ctx.beginPath();\n    ctx.arc(0, 0, object.distance, 0, 2 * Math.PI);\n    ctx.stroke();\n    \n    let angle = 90;\n    angle += object.offset;\n    angle *= Math.PI / 180;\n\n    ctx.rotate(angle);\n    ctx.translate(0, -object.distance);\n\n    for (let child of object.objects) {\n        await renderObjectOrbit(child, ctx);\n    }\n\n    ctx.translate(0, object.distance);\n    ctx.rotate(-angle);\n}\n\nexport async function renderObject(object: SystemObject, spriteList: SpriteList, ctx: CanvasRenderingContext2D) {\n    // Render the sprite\n    if (object.sprite == null) {\n        return;\n    }\n\n    let spriteImage : HTMLImageElement | undefined = spriteList.loadedSprites.get(object.sprite.name);\n    const spriteFile = spriteList.sprites.get(object.sprite.name);\n\n    if (!spriteFile) {\n        console.error(`Sprite ${object.sprite} not found`);\n        return;\n    }\n\n    // The sprite image isn't loaded\n    if (!spriteImage) {\n        spriteImage = await spriteList.load(object.sprite.name, spriteFile);\n    }\n\n    // Draw the planet/star\n    let angle = 90;\n    angle += object.offset;\n    angle *= Math.PI / 180;\n\n    ctx.save();\n    if (object.distance > 0)\n        ctx.rotate(angle);\n    ctx.translate(0, -object.distance);\n\n    printSprite(\n        spriteFile.name,\n        spriteImage,\n        object.sprite.scale,\n        ctx\n    );\n\n    if (object.distance > 0)\n        ctx.rotate(-angle);\n\n    for (let child of object.objects) {\n        await renderObject(child, spriteList, ctx);\n    }\n\n    ctx.restore();\n}\n","import { ParsedData, System } from \"es-data-parser\";\nimport { View } from \"./abstract\";\nimport { SpriteList } from \"../game-functions/sprites\";\nimport { CanvasLib } from \"@andreadev/canvas-lib\";\nimport { RenderingProp } from \"@andreadev/canvas-lib/dist/main\";\nimport { renderObject, renderObjectOrbit } from \"../game-functions/object\";\n\nexport class SystemView extends EventTarget implements View {\n    system: System | null = null;\n    shouldRenderOrbits = true;\n    shouldRenderObjects = true;\n\n    constructor(private esData: ParsedData, private spriteList: SpriteList, private canvasLib: CanvasLib) {\n        super();\n\n        this.esData = esData;\n        this.canvasLib = canvasLib;\n    }\n\n    async setSystem(systemName: string) {\n        if (!this.esData.starSystems.has(systemName)) {\n            throw new Error(\"System name not found\");\n        }\n\n        this.system = this.esData.starSystems.get(systemName)!;\n\n        await this.preloadObjectsSprites();\n    }\n\n    async activate(lib: CanvasLib) {\n        document.getElementById('toggle-orbits')?.addEventListener('change', this.toggleOrbits.bind(this));\n        document.getElementById('toggle-objects')?.addEventListener('change', this.toggleObjects.bind(this));\n\n        let systemList = <HTMLSelectElement> document.getElementById('system-selection');\n        systemList.addEventListener('change', (e) => {\n            let systemName = (<HTMLSelectElement>e.target).selectedOptions[0]?.value;\n            this.setSystem(systemName);\n            lib.paint();\n        });\n\n        if (systemList.value != '-') {\n            this.setSystem(systemList.value);\n        }\n\n        await this.preloadObjectsSprites();\n\n        lib.addLayer('background', 0);\n        lib.addLayer('boundaries', 1);\n        lib.addLayer('objects', 2);\n\n        lib.on('objects', this.renderOrbits.bind(this));\n        lib.on('objects', this.renderObjects.bind(this));\n    }\n\n    async deactivate(lib: CanvasLib) {\n        lib.removeLayer('background');\n        lib.removeLayer('boundaries');\n        lib.removeLayer('objects');\n    }\n\n    async preloadObjectsSprites() {\n        if (!this.system) return;\n\n        for (let object of this.system.objects.values()) {\n            if (!object.sprite) continue;\n\n            let spriteFile = this.spriteList.sprites.get(object.sprite.name);\n            if (!spriteFile) continue;\n\n            await this.spriteList.load(object.sprite.name, spriteFile);\n        }\n    }\n\n    toggleOrbits(e: Event) {\n        this.shouldRenderOrbits = (<HTMLInputElement>e.target).checked;\n        this.canvasLib.paint();\n    }\n\n    toggleObjects(e: Event) {\n        this.shouldRenderObjects = (<HTMLInputElement>e.target).checked;\n        this.canvasLib.paint();\n    }\n\n    async renderOrbits({ context }: RenderingProp) {\n        if (!this.esData || !this.system) return;\n\n        if (!this.shouldRenderOrbits) return;\n\n        context.strokeStyle = 'blue';\n        for (let object of this.system.objects.values()) {\n            await renderObjectOrbit(object, context);\n        }\n        // reset to default\n        context.strokeStyle = '#000';\n    }\n\n    async renderObjects({ context }: RenderingProp) {\n        if (!this.esData || !this.system) return;\n\n        if (!this.shouldRenderObjects) return;\n\n        for (let object of this.system.objects.values()) {\n            await renderObject(object, this.spriteList, context);\n        }\n    }\n}\n","import { CanvasLib } from \"@andreadev/canvas-lib\";\nimport { PanZoomPlugin } from \"@andreadev/canvas-lib/dist/modules/pan-zoom-plugin\";\nimport { View } from \"./views/abstract\";\nimport { GalaxyView } from \"./views/galaxy\";\nimport { SystemView } from \"./views/system\";\nimport { ParsedData } from \"es-data-parser\";\nimport { SpriteList } from \"./game-functions/sprites\";\n\nconst views: Record<string, View | null>= {\n    galaxy: null,\n    system: null,\n};\nlet currentView: View | null = null;\n\nexport function initCanvasLib(canvas: HTMLCanvasElement) {\n    // Fix canvas dimensions\n    let canvasBCR = canvas.getBoundingClientRect();\n    canvas.width = canvasBCR.width;\n    canvas.height = canvasBCR.height;\n\n    const canvasLib = new CanvasLib(canvas);\n    canvasLib.use(PanZoomPlugin, {});\n\n    return canvasLib;\n}\n\nexport async function setCurrentView(lib: CanvasLib, viewName: string) {\n    if (!(viewName in views)) {\n        throw new Error(`'${viewName}' is not a valid view.`);\n    }\n\n    for (let name of Object.keys(views)) {\n        document.body.classList.remove(`active-${name}`);\n    }\n    document.body.classList.add(`active-${viewName}`);\n\n    let view = views[viewName]!;\n\n    // Deactivate the previous view\n    await currentView?.deactivate(lib);\n\n    // Reset zoom and panning\n    let panZoomPlug = lib.getPlugin(PanZoomPlugin)!;\n    panZoomPlug.currentZoom = 1;\n    panZoomPlug.cameraOffset = {x: 0, y: 0};\n\n    // Set the new view\n    currentView = view;\n    await currentView.activate(lib);\n\n    await lib.paint();\n}\n\nexport async function filesLoaded(lib: CanvasLib, sprites: SpriteList, data: ParsedData) {\n    let systemView = new SystemView(data, sprites, lib); \n\n    views.system = systemView;\n    views.galaxy = new GalaxyView(data, sprites, lib);\n\n    await setCurrentView(lib, 'galaxy');\n\n    await lib.paint();\n}\n","import { CanvasLib } from \"@andreadev/canvas-lib\";\nimport { PanZoomPlugin } from \"@andreadev/canvas-lib/dist/modules/pan-zoom-plugin\";\nimport { ParsedData } from \"es-data-parser\";\nimport { setCurrentView } from \"./setupCanvasLib\";\n\nexport function bindUI(lib: CanvasLib, data: ParsedData) {\n    // Setup event listeners for the UI\n    document.getElementById('zoom-in')?.addEventListener('click', () => {\n        const panZoomPlugin = lib.getPlugin(PanZoomPlugin);\n\n        if (!panZoomPlugin) return;\n\n        panZoomPlugin.zoom(0.2);\n    });\n\n    document.getElementById('zoom-out')?.addEventListener('click', () => {\n        const panZoomPlugin = lib.getPlugin(PanZoomPlugin);\n\n        if (!panZoomPlugin) return;\n\n        panZoomPlugin.zoom(-0.2);\n    });\n\n    let systemSelect = document.getElementById('system-selection')!;\n    for (let systemName of data.starSystems.keys()) {\n        let opt = document.createElement('option');\n        opt.value = systemName;\n        opt.innerText = systemName;\n        systemSelect.appendChild(opt);\n    }\n\n    document.getElementById('galaxy-tab')?.addEventListener('click', () => {\n        setCurrentView(lib, 'galaxy');\n    });\n\n    document.getElementById('system-tab')?.addEventListener('click', () => {\n        setCurrentView(lib, 'system');\n    });\n}\n","import { parseFiles } from 'es-data-parser';\nimport { filesLoaded, initCanvasLib } from './scripts/setupCanvasLib';\nimport { openDirectory } from './scripts/utils';\nimport { CanvasLib } from '@andreadev/canvas-lib';\nimport { bindUI } from './scripts/ui';\nimport { SpriteList } from './scripts/game-functions/sprites';\n\nlet lib: CanvasLib | null = null;\n\nasync function initApp() {\n    const filesInfo = await openDirectory();\n\n    const dataFiles = filesInfo.filter(file => file.webkitRelativePath.match(/^([^\\/]*\\/)?data\\//) != null);\n\n    const data = await parseFiles(dataFiles);\n    const sprites = extractSprites(filesInfo);\n\n    let canvas = document.getElementById('viewer') as HTMLCanvasElement;\n\n    lib = initCanvasLib(canvas);\n    \n    filesLoaded(lib, sprites, data);\n\n    bindUI(lib, data);\n};\n\nfunction extractSprites(files: File[]) {\n    const spriteList = new SpriteList();\n    for (let file of files) {\n        if (file.webkitRelativePath.includes('images/')) {\n            let spriteName = file.webkitRelativePath.split('images/')[1];\n            spriteName = spriteName.replace(/([+\\-~])?\\.\\w+$/, '');\n            spriteList.sprites.set(spriteName, file);\n        }\n    }\n    return spriteList;\n}\n\n// Bind open project button\ndocument.getElementById('select-file')?.addEventListener('click', () => {\n    initApp();\n});\n"],"names":["$99bfa59d38df383e$export$aa361464e3df6895","constructor","this","galaxies","Map","starSystems","colors","governments","planets","wormholes","addGalaxy","galaxy","set","name","addStarSystem","starSystem","addColor","color","addGovernment","gov","addPlanet","planet","addWormhole","wormhole","$337ce6bb1758e6c4$export$17d680238e50603e","tokens","indentation","children","toString","tokensText","text","token","includes","$337ce6bb1758e6c4$export$bd97b5a17cbaafd5","filename","super","isRoot","$ef95d5cd1d9b2c46$export$19b172c586f937c9","data","root","isQuoteOpen","isComment","currentQuote","currentLine","currentToken","parentLevels","i","length","c","nextLine","push","Error","join","slice","$7c17fe23b29ab67c$export$3075603db8e6204c","scale","static","dataLine","sprite","parseFloat","$42081142e05f9fad$export$60567d376fdb67d","esData","distance","period","offset","objects","systemObject","child","fromLine","parseInt","$d7000da56fc36485$export$b14f3b3295ec384f","link","jump","$c374312e443832e2$export$9150a07a26b3ea04","universal","addend","multiplier","ramscoop","$ac8d86e8dcc0cd23$export$e1dae5660003ffa7","pos","links","government","attributes","inaccessible","hidden","shrouded","music","arrival","departure","habitable","belt","weight","invisibleFence","jumpRange","haze","asteroids","minables","trades","fleets","raids","noRaid","hazards","starfieldDensity","isSelected","position","system","x","y","foundPos","count","energy","commodity","cost","fleet","minAttraction","maxAttraction","$44da9c5917743933$export$6509ed3b9b17fe1b","$e94deb5aa1153640$export$892596cec99bc70e","r","g","b","a","_","label","fromPercentages","govName","get","$760006205ac68494$export$fb8111228a5af09a","$3c0ccd2c909c51b8$export$965755fbf184a8fc","$e47b6753f85a69af$export$645f900b05e343d7","isMappable","mappable","$bb6b0f859218c7ce$export$98e6a39c04603d36","previousData","parsedData","$bac36dab1317959b$export$72c04af63de9061a","file","Promise","resolve","reader","FileReader","onload","result","readAsText","async","$63c474847aee9276$export$f1c553d4f1a2351","$63c474847aee9276$export$e57ba765b62dbdcf","files","webkitRelativePath","$d4b14e8110a203a1$export$493b9b82400bc18","listeners","addListener","event","listener","has","removeListener","index","findIndex","splice","clearListeners","clearAllListeners","clear","details","val","promises","ret","all","fireEventSync","$0f55f752fe3cfaec$export$17e8e0f5ce5db525","canvas","plugins","layers","layersActions","ctx","getContext","context","paint","window","requestAnimationFrame","renderCycle","use","PluginClass","settings","plugin","getPlugin","values","shouldClear","prepareContext","prop","fireEvent","layer","resetTransform","clearRect","width","height","translate","Math","floor","addLayer","order","sort","removeLayer","l","on","callback","remove","startRendering","$cd2915ddbfd8b047$export$de363e709c412c8a","func","wait","timeout","isThrottled","args","arguments","apply","clearTimeout","setTimeout","$f7e9087d61420905$export$4d5de249200f86f7","app","_a","_b","_c","currentZoom","minZoom","maxZoom","panButton","cameraOffset","isPanning","startedPanningOffset","startedPanningPosition","throttle","bindEvents","throttledPaint","bind","left","middle","right","any","transformCanvas","addEventListener","onPointerDown","onPointerUp","onPointerMove","onScroll","screenToLocalPoint","hw","hh","tx","ty","z","zoom","amount","min","max","updateRender","e","button","clientX","clientY","deltaY","matrix","scaleX","scaleY","d","translateX","translateY","f","skewX","skewY","number","direction","getDataFromMatrix","getTransform","$26e7e2369f1a689b$var$pinSize","$26e7e2369f1a689b$var$pinLineWidth","$26e7e2369f1a689b$var$tagNameOffset","$26e7e2369f1a689b$var$tagNameColor","$26e7e2369f1a689b$var$tagNameFontSize","$26e7e2369f1a689b$export$cde84772a8df2b55","sqrt","pow","$26e7e2369f1a689b$export$f47381ba8d3300b4","beginPath","fillStyle","strokeStyle","lineWidth","fixedNumber","ellipse","PI","fill","stroke","$26e7e2369f1a689b$export$27a31ba080489ba7","fromGovernment","fixedSize","$26e7e2369f1a689b$export$686ee88157844317","fontSize","font","fillText","$6c4e838e46d8f176$export$a5180499ba1db227","spriteList","spriteImage","loadedSprites","spriteFile","sprites","console","error","load","drawImage","$70d5af9933590103$export$bbb64adae9205aa7","EventTarget","canvasLib","shouldRenderNames","shouldRenderLinks","shouldRenderDots","shouldRenderGalaxies","shouldRenderWormholeLinks","shouldRenderHiddenWormholes","currentlySelected","systemLinksCache","Set","savedZoom","savedPosition","onCanvasClick","lib","document","getElementById","toggleGalaxies","toggleDots","toggleNames","toggleLinks","toggleWormholes","toggleHiddenWormholes","buildSystemLinksCache","preloadGalaxySprites","renderGalaxies","renderLinks","renderWormholeLinks","renderSystems","panZoomPlug","target","checked","panZoomPlugin","point","closest","closestDistance","minimumDistance","selectSystem","removeSelection","updateStarSystemInfo","value","querySelector","textContent","linked","linkTxt","reverseLinkTxt","add","originName","targetName","split","origin","moveTo","lineTo","$b25678c505cad7eb$export$942f0b26f9f32b84","input","createElement","type","webkitdirectory","Array","from","HTMLInputElement","prototype","showPicker","click","$b25678c505cad7eb$export$fe58198efe02b173","reject","img","Image","onerror","src","URL","createObjectURL","$90284e86e303b8f3$export$9f3b7a07f9b7bd8d","spriteName","$90284e86e303b8f3$export$f148262f49615347","image","at","globalCompositeOperation","printWidth","printHeight","$b5fb312fe2285bbc$export$906b2951ef09afc1","object","arc","angle","rotate","$b5fb312fe2285bbc$export$63d1ee4825773ed4","save","restore","$61295e1e1068147c$export$c0ce323ef3bb4cb4","shouldRenderOrbits","shouldRenderObjects","systemName","preloadObjectsSprites","toggleOrbits","toggleObjects","systemList","selectedOptions","setSystem","renderOrbits","renderObjects","$a5bb27ff3d01271c$var$views","$a5bb27ff3d01271c$var$currentView","$a5bb27ff3d01271c$export$78cda6c44323997e","canvasBCR","getBoundingClientRect","$a5bb27ff3d01271c$export$f090a900c52a5279","viewName","Object","keys","body","classList","view","deactivate","activate","$a5bb27ff3d01271c$export$c64188370d7959c6","systemView","$1bc98ea51c43dc5c$export$23c4d15914d73e40","systemSelect","opt","innerText","appendChild","$ad2bcec7a0192558$var$lib","$ad2bcec7a0192558$var$initApp","filesInfo","dataFiles","filter","match","replace","$ad2bcec7a0192558$var$extractSprites"],"version":3,"file":"index.2289063b.js.map"}